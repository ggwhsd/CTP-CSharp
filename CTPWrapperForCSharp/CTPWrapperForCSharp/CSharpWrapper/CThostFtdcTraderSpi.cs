//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CThostFtdcTraderSpi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcTraderSpi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcTraderSpi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CThostFtdcTraderSpi() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ctpthosttradeapiPINVOKE.delete_CThostFtdcTraderSpi(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void OnFrontConnected() {
    if (SwigDerivedClassHasMethod("OnFrontConnected", swigMethodTypes0)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnFrontConnectedSwigExplicitCThostFtdcTraderSpi(swigCPtr); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnFrontConnected(swigCPtr);
  }

  public virtual void OnFrontDisconnected(int nReason) {
    if (SwigDerivedClassHasMethod("OnFrontDisconnected", swigMethodTypes1)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnFrontDisconnectedSwigExplicitCThostFtdcTraderSpi(swigCPtr, nReason); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnFrontDisconnected(swigCPtr, nReason);
  }

  public virtual void OnHeartBeatWarning(int nTimeLapse) {
    if (SwigDerivedClassHasMethod("OnHeartBeatWarning", swigMethodTypes2)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnHeartBeatWarningSwigExplicitCThostFtdcTraderSpi(swigCPtr, nTimeLapse); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnHeartBeatWarning(swigCPtr, nTimeLapse);
  }

  public virtual void OnRspAuthenticate(CThostFtdcRspAuthenticateField pRspAuthenticateField, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspAuthenticate", swigMethodTypes3)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspAuthenticateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspAuthenticateField.getCPtr(pRspAuthenticateField), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspAuthenticate(swigCPtr, CThostFtdcRspAuthenticateField.getCPtr(pRspAuthenticateField), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUserLogin(CThostFtdcRspUserLoginField pRspUserLogin, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserLogin", swigMethodTypes4)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserLoginSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspUserLoginField.getCPtr(pRspUserLogin), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserLogin(swigCPtr, CThostFtdcRspUserLoginField.getCPtr(pRspUserLogin), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUserLogout(CThostFtdcUserLogoutField pUserLogout, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserLogout", swigMethodTypes5)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserLogoutSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcUserLogoutField.getCPtr(pUserLogout), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserLogout(swigCPtr, CThostFtdcUserLogoutField.getCPtr(pUserLogout), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField pUserPasswordUpdate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserPasswordUpdate", swigMethodTypes6)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserPasswordUpdateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcUserPasswordUpdateField.getCPtr(pUserPasswordUpdate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserPasswordUpdate(swigCPtr, CThostFtdcUserPasswordUpdateField.getCPtr(pUserPasswordUpdate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField pTradingAccountPasswordUpdate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspTradingAccountPasswordUpdate", swigMethodTypes7)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradingAccountPasswordUpdateField.getCPtr(pTradingAccountPasswordUpdate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdate(swigCPtr, CThostFtdcTradingAccountPasswordUpdateField.getCPtr(pTradingAccountPasswordUpdate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUserAuthMethod(CThostFtdcRspUserAuthMethodField pRspUserAuthMethod, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserAuthMethod", swigMethodTypes8)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserAuthMethodSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspUserAuthMethodField.getCPtr(pRspUserAuthMethod), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspUserAuthMethod(swigCPtr, CThostFtdcRspUserAuthMethodField.getCPtr(pRspUserAuthMethod), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspGenUserCaptcha(CThostFtdcRspGenUserCaptchaField pRspGenUserCaptcha, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspGenUserCaptcha", swigMethodTypes9)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspGenUserCaptchaSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspGenUserCaptchaField.getCPtr(pRspGenUserCaptcha), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspGenUserCaptcha(swigCPtr, CThostFtdcRspGenUserCaptchaField.getCPtr(pRspGenUserCaptcha), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspGenUserText(CThostFtdcRspGenUserTextField pRspGenUserText, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspGenUserText", swigMethodTypes10)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspGenUserTextSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspGenUserTextField.getCPtr(pRspGenUserText), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspGenUserText(swigCPtr, CThostFtdcRspGenUserTextField.getCPtr(pRspGenUserText), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspOrderInsert(CThostFtdcInputOrderField pInputOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspOrderInsert", swigMethodTypes11)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOrderInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputOrderField.getCPtr(pInputOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOrderInsert(swigCPtr, CThostFtdcInputOrderField.getCPtr(pInputOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspParkedOrderInsert(CThostFtdcParkedOrderField pParkedOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspParkedOrderInsert", swigMethodTypes12)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspParkedOrderInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcParkedOrderField.getCPtr(pParkedOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspParkedOrderInsert(swigCPtr, CThostFtdcParkedOrderField.getCPtr(pParkedOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspParkedOrderAction(CThostFtdcParkedOrderActionField pParkedOrderAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspParkedOrderAction", swigMethodTypes13)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspParkedOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcParkedOrderActionField.getCPtr(pParkedOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspParkedOrderAction(swigCPtr, CThostFtdcParkedOrderActionField.getCPtr(pParkedOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspOrderAction(CThostFtdcInputOrderActionField pInputOrderAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspOrderAction", swigMethodTypes14)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputOrderActionField.getCPtr(pInputOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOrderAction(swigCPtr, CThostFtdcInputOrderActionField.getCPtr(pInputOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryMaxOrderVolume(CThostFtdcQueryMaxOrderVolumeField pQueryMaxOrderVolume, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryMaxOrderVolume", swigMethodTypes15)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQueryMaxOrderVolumeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcQueryMaxOrderVolumeField.getCPtr(pQueryMaxOrderVolume), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQueryMaxOrderVolume(swigCPtr, CThostFtdcQueryMaxOrderVolumeField.getCPtr(pQueryMaxOrderVolume), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField pSettlementInfoConfirm, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspSettlementInfoConfirm", swigMethodTypes16)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspSettlementInfoConfirmSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcSettlementInfoConfirmField.getCPtr(pSettlementInfoConfirm), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspSettlementInfoConfirm(swigCPtr, CThostFtdcSettlementInfoConfirmField.getCPtr(pSettlementInfoConfirm), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField pRemoveParkedOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspRemoveParkedOrder", swigMethodTypes17)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspRemoveParkedOrderSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRemoveParkedOrderField.getCPtr(pRemoveParkedOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspRemoveParkedOrder(swigCPtr, CThostFtdcRemoveParkedOrderField.getCPtr(pRemoveParkedOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField pRemoveParkedOrderAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspRemoveParkedOrderAction", swigMethodTypes18)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspRemoveParkedOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRemoveParkedOrderActionField.getCPtr(pRemoveParkedOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspRemoveParkedOrderAction(swigCPtr, CThostFtdcRemoveParkedOrderActionField.getCPtr(pRemoveParkedOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspExecOrderInsert(CThostFtdcInputExecOrderField pInputExecOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspExecOrderInsert", swigMethodTypes19)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspExecOrderInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputExecOrderField.getCPtr(pInputExecOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspExecOrderInsert(swigCPtr, CThostFtdcInputExecOrderField.getCPtr(pInputExecOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspExecOrderAction(CThostFtdcInputExecOrderActionField pInputExecOrderAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspExecOrderAction", swigMethodTypes20)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspExecOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputExecOrderActionField.getCPtr(pInputExecOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspExecOrderAction(swigCPtr, CThostFtdcInputExecOrderActionField.getCPtr(pInputExecOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspForQuoteInsert(CThostFtdcInputForQuoteField pInputForQuote, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspForQuoteInsert", swigMethodTypes21)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspForQuoteInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputForQuoteField.getCPtr(pInputForQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspForQuoteInsert(swigCPtr, CThostFtdcInputForQuoteField.getCPtr(pInputForQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQuoteInsert(CThostFtdcInputQuoteField pInputQuote, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQuoteInsert", swigMethodTypes22)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQuoteInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputQuoteField.getCPtr(pInputQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQuoteInsert(swigCPtr, CThostFtdcInputQuoteField.getCPtr(pInputQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQuoteAction(CThostFtdcInputQuoteActionField pInputQuoteAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQuoteAction", swigMethodTypes23)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQuoteActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputQuoteActionField.getCPtr(pInputQuoteAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQuoteAction(swigCPtr, CThostFtdcInputQuoteActionField.getCPtr(pInputQuoteAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField pInputBatchOrderAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspBatchOrderAction", swigMethodTypes24)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspBatchOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputBatchOrderActionField.getCPtr(pInputBatchOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspBatchOrderAction(swigCPtr, CThostFtdcInputBatchOrderActionField.getCPtr(pInputBatchOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField pInputOptionSelfClose, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspOptionSelfCloseInsert", swigMethodTypes25)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOptionSelfCloseInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputOptionSelfCloseField.getCPtr(pInputOptionSelfClose), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOptionSelfCloseInsert(swigCPtr, CThostFtdcInputOptionSelfCloseField.getCPtr(pInputOptionSelfClose), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspOptionSelfCloseAction(CThostFtdcInputOptionSelfCloseActionField pInputOptionSelfCloseAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspOptionSelfCloseAction", swigMethodTypes26)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOptionSelfCloseActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputOptionSelfCloseActionField.getCPtr(pInputOptionSelfCloseAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspOptionSelfCloseAction(swigCPtr, CThostFtdcInputOptionSelfCloseActionField.getCPtr(pInputOptionSelfCloseAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspCombActionInsert(CThostFtdcInputCombActionField pInputCombAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspCombActionInsert", swigMethodTypes27)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspCombActionInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputCombActionField.getCPtr(pInputCombAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspCombActionInsert(swigCPtr, CThostFtdcInputCombActionField.getCPtr(pInputCombAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryOrder(CThostFtdcOrderField pOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryOrder", swigMethodTypes28)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOrderSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOrderField.getCPtr(pOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOrder(swigCPtr, CThostFtdcOrderField.getCPtr(pOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTrade(CThostFtdcTradeField pTrade, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTrade", swigMethodTypes29)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTradeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradeField.getCPtr(pTrade), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTrade(swigCPtr, CThostFtdcTradeField.getCPtr(pTrade), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInvestorPosition(CThostFtdcInvestorPositionField pInvestorPosition, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInvestorPosition", swigMethodTypes30)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorPositionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInvestorPositionField.getCPtr(pInvestorPosition), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorPosition(swigCPtr, CThostFtdcInvestorPositionField.getCPtr(pInvestorPosition), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTradingAccount(CThostFtdcTradingAccountField pTradingAccount, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTradingAccount", swigMethodTypes31)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTradingAccountSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradingAccountField.getCPtr(pTradingAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTradingAccount(swigCPtr, CThostFtdcTradingAccountField.getCPtr(pTradingAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInvestor(CThostFtdcInvestorField pInvestor, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInvestor", swigMethodTypes32)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInvestorField.getCPtr(pInvestor), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestor(swigCPtr, CThostFtdcInvestorField.getCPtr(pInvestor), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTradingCode(CThostFtdcTradingCodeField pTradingCode, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTradingCode", swigMethodTypes33)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTradingCodeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradingCodeField.getCPtr(pTradingCode), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTradingCode(swigCPtr, CThostFtdcTradingCodeField.getCPtr(pTradingCode), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField pInstrumentMarginRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInstrumentMarginRate", swigMethodTypes34)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrumentMarginRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInstrumentMarginRateField.getCPtr(pInstrumentMarginRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrumentMarginRate(swigCPtr, CThostFtdcInstrumentMarginRateField.getCPtr(pInstrumentMarginRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField pInstrumentCommissionRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInstrumentCommissionRate", swigMethodTypes35)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInstrumentCommissionRateField.getCPtr(pInstrumentCommissionRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRate(swigCPtr, CThostFtdcInstrumentCommissionRateField.getCPtr(pInstrumentCommissionRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryExchange(CThostFtdcExchangeField pExchange, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryExchange", swigMethodTypes36)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchangeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcExchangeField.getCPtr(pExchange), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchange(swigCPtr, CThostFtdcExchangeField.getCPtr(pExchange), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryProduct(CThostFtdcProductField pProduct, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryProduct", swigMethodTypes37)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryProductSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcProductField.getCPtr(pProduct), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryProduct(swigCPtr, CThostFtdcProductField.getCPtr(pProduct), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInstrument(CThostFtdcInstrumentField pInstrument, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInstrument", swigMethodTypes38)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrumentSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInstrumentField.getCPtr(pInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrument(swigCPtr, CThostFtdcInstrumentField.getCPtr(pInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField pDepthMarketData, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryDepthMarketData", swigMethodTypes39)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryDepthMarketDataSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcDepthMarketDataField.getCPtr(pDepthMarketData), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryDepthMarketData(swigCPtr, CThostFtdcDepthMarketDataField.getCPtr(pDepthMarketData), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQrySettlementInfo(CThostFtdcSettlementInfoField pSettlementInfo, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQrySettlementInfo", swigMethodTypes40)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySettlementInfoSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcSettlementInfoField.getCPtr(pSettlementInfo), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySettlementInfo(swigCPtr, CThostFtdcSettlementInfoField.getCPtr(pSettlementInfo), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTransferBank(CThostFtdcTransferBankField pTransferBank, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTransferBank", swigMethodTypes41)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTransferBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTransferBankField.getCPtr(pTransferBank), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTransferBank(swigCPtr, CThostFtdcTransferBankField.getCPtr(pTransferBank), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField pInvestorPositionDetail, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInvestorPositionDetail", swigMethodTypes42)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorPositionDetailSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInvestorPositionDetailField.getCPtr(pInvestorPositionDetail), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorPositionDetail(swigCPtr, CThostFtdcInvestorPositionDetailField.getCPtr(pInvestorPositionDetail), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryNotice(CThostFtdcNoticeField pNotice, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryNotice", swigMethodTypes43)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryNoticeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcNoticeField.getCPtr(pNotice), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryNotice(swigCPtr, CThostFtdcNoticeField.getCPtr(pNotice), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField pSettlementInfoConfirm, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQrySettlementInfoConfirm", swigMethodTypes44)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirmSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcSettlementInfoConfirmField.getCPtr(pSettlementInfoConfirm), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirm(swigCPtr, CThostFtdcSettlementInfoConfirmField.getCPtr(pSettlementInfoConfirm), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField pInvestorPositionCombineDetail, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInvestorPositionCombineDetail", swigMethodTypes45)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetailSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInvestorPositionCombineDetailField.getCPtr(pInvestorPositionCombineDetail), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetail(swigCPtr, CThostFtdcInvestorPositionCombineDetailField.getCPtr(pInvestorPositionCombineDetail), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField pCFMMCTradingAccountKey, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryCFMMCTradingAccountKey", swigMethodTypes46)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKeySwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcCFMMCTradingAccountKeyField.getCPtr(pCFMMCTradingAccountKey), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKey(swigCPtr, CThostFtdcCFMMCTradingAccountKeyField.getCPtr(pCFMMCTradingAccountKey), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField pEWarrantOffset, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryEWarrantOffset", swigMethodTypes47)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryEWarrantOffsetSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcEWarrantOffsetField.getCPtr(pEWarrantOffset), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryEWarrantOffset(swigCPtr, CThostFtdcEWarrantOffsetField.getCPtr(pEWarrantOffset), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField pInvestorProductGroupMargin, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInvestorProductGroupMargin", swigMethodTypes48)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMarginSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInvestorProductGroupMarginField.getCPtr(pInvestorProductGroupMargin), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMargin(swigCPtr, CThostFtdcInvestorProductGroupMarginField.getCPtr(pInvestorProductGroupMargin), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField pExchangeMarginRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryExchangeMarginRate", swigMethodTypes49)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchangeMarginRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcExchangeMarginRateField.getCPtr(pExchangeMarginRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchangeMarginRate(swigCPtr, CThostFtdcExchangeMarginRateField.getCPtr(pExchangeMarginRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField pExchangeMarginRateAdjust, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryExchangeMarginRateAdjust", swigMethodTypes50)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjustSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcExchangeMarginRateAdjustField.getCPtr(pExchangeMarginRateAdjust), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjust(swigCPtr, CThostFtdcExchangeMarginRateAdjustField.getCPtr(pExchangeMarginRateAdjust), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryExchangeRate(CThostFtdcExchangeRateField pExchangeRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryExchangeRate", swigMethodTypes51)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchangeRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcExchangeRateField.getCPtr(pExchangeRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExchangeRate(swigCPtr, CThostFtdcExchangeRateField.getCPtr(pExchangeRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField pSecAgentACIDMap, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentACIDMap", swigMethodTypes52)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentACIDMapSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcSecAgentACIDMapField.getCPtr(pSecAgentACIDMap), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentACIDMap(swigCPtr, CThostFtdcSecAgentACIDMapField.getCPtr(pSecAgentACIDMap), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryProductExchRate(CThostFtdcProductExchRateField pProductExchRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryProductExchRate", swigMethodTypes53)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryProductExchRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcProductExchRateField.getCPtr(pProductExchRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryProductExchRate(swigCPtr, CThostFtdcProductExchRateField.getCPtr(pProductExchRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryProductGroup(CThostFtdcProductGroupField pProductGroup, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryProductGroup", swigMethodTypes54)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryProductGroupSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcProductGroupField.getCPtr(pProductGroup), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryProductGroup(swigCPtr, CThostFtdcProductGroupField.getCPtr(pProductGroup), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryMMInstrumentCommissionRate(CThostFtdcMMInstrumentCommissionRateField pMMInstrumentCommissionRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryMMInstrumentCommissionRate", swigMethodTypes55)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryMMInstrumentCommissionRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcMMInstrumentCommissionRateField.getCPtr(pMMInstrumentCommissionRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryMMInstrumentCommissionRate(swigCPtr, CThostFtdcMMInstrumentCommissionRateField.getCPtr(pMMInstrumentCommissionRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryMMOptionInstrCommRate(CThostFtdcMMOptionInstrCommRateField pMMOptionInstrCommRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryMMOptionInstrCommRate", swigMethodTypes56)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryMMOptionInstrCommRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcMMOptionInstrCommRateField.getCPtr(pMMOptionInstrCommRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryMMOptionInstrCommRate(swigCPtr, CThostFtdcMMOptionInstrCommRateField.getCPtr(pMMOptionInstrCommRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInstrumentOrderCommRate(CThostFtdcInstrumentOrderCommRateField pInstrumentOrderCommRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInstrumentOrderCommRate", swigMethodTypes57)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrumentOrderCommRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInstrumentOrderCommRateField.getCPtr(pInstrumentOrderCommRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInstrumentOrderCommRate(swigCPtr, CThostFtdcInstrumentOrderCommRateField.getCPtr(pInstrumentOrderCommRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQrySecAgentTradingAccount(CThostFtdcTradingAccountField pTradingAccount, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentTradingAccount", swigMethodTypes58)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentTradingAccountSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradingAccountField.getCPtr(pTradingAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentTradingAccount(swigCPtr, CThostFtdcTradingAccountField.getCPtr(pTradingAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQrySecAgentCheckMode(CThostFtdcSecAgentCheckModeField pSecAgentCheckMode, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentCheckMode", swigMethodTypes59)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentCheckModeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcSecAgentCheckModeField.getCPtr(pSecAgentCheckMode), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentCheckMode(swigCPtr, CThostFtdcSecAgentCheckModeField.getCPtr(pSecAgentCheckMode), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQrySecAgentTradeInfo(CThostFtdcSecAgentTradeInfoField pSecAgentTradeInfo, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentTradeInfo", swigMethodTypes60)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentTradeInfoSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcSecAgentTradeInfoField.getCPtr(pSecAgentTradeInfo), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQrySecAgentTradeInfo(swigCPtr, CThostFtdcSecAgentTradeInfoField.getCPtr(pSecAgentTradeInfo), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField pOptionInstrTradeCost, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryOptionInstrTradeCost", swigMethodTypes61)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCostSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOptionInstrTradeCostField.getCPtr(pOptionInstrTradeCost), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCost(swigCPtr, CThostFtdcOptionInstrTradeCostField.getCPtr(pOptionInstrTradeCost), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField pOptionInstrCommRate, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryOptionInstrCommRate", swigMethodTypes62)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOptionInstrCommRateSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOptionInstrCommRateField.getCPtr(pOptionInstrCommRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOptionInstrCommRate(swigCPtr, CThostFtdcOptionInstrCommRateField.getCPtr(pOptionInstrCommRate), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryExecOrder(CThostFtdcExecOrderField pExecOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryExecOrder", swigMethodTypes63)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExecOrderSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcExecOrderField.getCPtr(pExecOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryExecOrder(swigCPtr, CThostFtdcExecOrderField.getCPtr(pExecOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryForQuote(CThostFtdcForQuoteField pForQuote, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryForQuote", swigMethodTypes64)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryForQuoteSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcForQuoteField.getCPtr(pForQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryForQuote(swigCPtr, CThostFtdcForQuoteField.getCPtr(pForQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryQuote(CThostFtdcQuoteField pQuote, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryQuote", swigMethodTypes65)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryQuoteSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcQuoteField.getCPtr(pQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryQuote(swigCPtr, CThostFtdcQuoteField.getCPtr(pQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryOptionSelfClose(CThostFtdcOptionSelfCloseField pOptionSelfClose, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryOptionSelfClose", swigMethodTypes66)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOptionSelfCloseSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOptionSelfCloseField.getCPtr(pOptionSelfClose), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryOptionSelfClose(swigCPtr, CThostFtdcOptionSelfCloseField.getCPtr(pOptionSelfClose), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInvestUnit(CThostFtdcInvestUnitField pInvestUnit, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInvestUnit", swigMethodTypes67)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestUnitSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInvestUnitField.getCPtr(pInvestUnit), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryInvestUnit(swigCPtr, CThostFtdcInvestUnitField.getCPtr(pInvestUnit), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField pCombInstrumentGuard, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryCombInstrumentGuard", swigMethodTypes68)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryCombInstrumentGuardSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcCombInstrumentGuardField.getCPtr(pCombInstrumentGuard), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryCombInstrumentGuard(swigCPtr, CThostFtdcCombInstrumentGuardField.getCPtr(pCombInstrumentGuard), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryCombAction(CThostFtdcCombActionField pCombAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryCombAction", swigMethodTypes69)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryCombActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcCombActionField.getCPtr(pCombAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryCombAction(swigCPtr, CThostFtdcCombActionField.getCPtr(pCombAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTransferSerial(CThostFtdcTransferSerialField pTransferSerial, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTransferSerial", swigMethodTypes70)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTransferSerialSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTransferSerialField.getCPtr(pTransferSerial), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTransferSerial(swigCPtr, CThostFtdcTransferSerialField.getCPtr(pTransferSerial), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryAccountregister(CThostFtdcAccountregisterField pAccountregister, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryAccountregister", swigMethodTypes71)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryAccountregisterSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcAccountregisterField.getCPtr(pAccountregister), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryAccountregister(swigCPtr, CThostFtdcAccountregisterField.getCPtr(pAccountregister), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspError(CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspError", swigMethodTypes72)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspErrorSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspError(swigCPtr, CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRtnOrder(CThostFtdcOrderField pOrder) {
    if (SwigDerivedClassHasMethod("OnRtnOrder", swigMethodTypes73)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnOrderSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOrderField.getCPtr(pOrder)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnOrder(swigCPtr, CThostFtdcOrderField.getCPtr(pOrder));
  }

  public virtual void OnRtnTrade(CThostFtdcTradeField pTrade) {
    if (SwigDerivedClassHasMethod("OnRtnTrade", swigMethodTypes74)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnTradeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradeField.getCPtr(pTrade)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnTrade(swigCPtr, CThostFtdcTradeField.getCPtr(pTrade));
  }

  public virtual void OnErrRtnOrderInsert(CThostFtdcInputOrderField pInputOrder, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnOrderInsert", swigMethodTypes75)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOrderInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputOrderField.getCPtr(pInputOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOrderInsert(swigCPtr, CThostFtdcInputOrderField.getCPtr(pInputOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnOrderAction(CThostFtdcOrderActionField pOrderAction, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnOrderAction", swigMethodTypes76)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOrderActionField.getCPtr(pOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOrderAction(swigCPtr, CThostFtdcOrderActionField.getCPtr(pOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField pInstrumentStatus) {
    if (SwigDerivedClassHasMethod("OnRtnInstrumentStatus", swigMethodTypes77)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnInstrumentStatusSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInstrumentStatusField.getCPtr(pInstrumentStatus)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnInstrumentStatus(swigCPtr, CThostFtdcInstrumentStatusField.getCPtr(pInstrumentStatus));
  }

  public virtual void OnRtnBulletin(CThostFtdcBulletinField pBulletin) {
    if (SwigDerivedClassHasMethod("OnRtnBulletin", swigMethodTypes78)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnBulletinSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcBulletinField.getCPtr(pBulletin)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnBulletin(swigCPtr, CThostFtdcBulletinField.getCPtr(pBulletin));
  }

  public virtual void OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField pTradingNoticeInfo) {
    if (SwigDerivedClassHasMethod("OnRtnTradingNotice", swigMethodTypes79)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnTradingNoticeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradingNoticeInfoField.getCPtr(pTradingNoticeInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnTradingNotice(swigCPtr, CThostFtdcTradingNoticeInfoField.getCPtr(pTradingNoticeInfo));
  }

  public virtual void OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField pErrorConditionalOrder) {
    if (SwigDerivedClassHasMethod("OnRtnErrorConditionalOrder", swigMethodTypes80)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnErrorConditionalOrderSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcErrorConditionalOrderField.getCPtr(pErrorConditionalOrder)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnErrorConditionalOrder(swigCPtr, CThostFtdcErrorConditionalOrderField.getCPtr(pErrorConditionalOrder));
  }

  public virtual void OnRtnExecOrder(CThostFtdcExecOrderField pExecOrder) {
    if (SwigDerivedClassHasMethod("OnRtnExecOrder", swigMethodTypes81)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnExecOrderSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcExecOrderField.getCPtr(pExecOrder)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnExecOrder(swigCPtr, CThostFtdcExecOrderField.getCPtr(pExecOrder));
  }

  public virtual void OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField pInputExecOrder, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnExecOrderInsert", swigMethodTypes82)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnExecOrderInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputExecOrderField.getCPtr(pInputExecOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnExecOrderInsert(swigCPtr, CThostFtdcInputExecOrderField.getCPtr(pInputExecOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField pExecOrderAction, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnExecOrderAction", swigMethodTypes83)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnExecOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcExecOrderActionField.getCPtr(pExecOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnExecOrderAction(swigCPtr, CThostFtdcExecOrderActionField.getCPtr(pExecOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField pInputForQuote, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnForQuoteInsert", swigMethodTypes84)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnForQuoteInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputForQuoteField.getCPtr(pInputForQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnForQuoteInsert(swigCPtr, CThostFtdcInputForQuoteField.getCPtr(pInputForQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnRtnQuote(CThostFtdcQuoteField pQuote) {
    if (SwigDerivedClassHasMethod("OnRtnQuote", swigMethodTypes85)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnQuoteSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcQuoteField.getCPtr(pQuote)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnQuote(swigCPtr, CThostFtdcQuoteField.getCPtr(pQuote));
  }

  public virtual void OnErrRtnQuoteInsert(CThostFtdcInputQuoteField pInputQuote, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnQuoteInsert", swigMethodTypes86)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnQuoteInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputQuoteField.getCPtr(pInputQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnQuoteInsert(swigCPtr, CThostFtdcInputQuoteField.getCPtr(pInputQuote), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnQuoteAction(CThostFtdcQuoteActionField pQuoteAction, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnQuoteAction", swigMethodTypes87)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnQuoteActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcQuoteActionField.getCPtr(pQuoteAction), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnQuoteAction(swigCPtr, CThostFtdcQuoteActionField.getCPtr(pQuoteAction), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField pForQuoteRsp) {
    if (SwigDerivedClassHasMethod("OnRtnForQuoteRsp", swigMethodTypes88)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnForQuoteRspSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcForQuoteRspField.getCPtr(pForQuoteRsp)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnForQuoteRsp(swigCPtr, CThostFtdcForQuoteRspField.getCPtr(pForQuoteRsp));
  }

  public virtual void OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField pCFMMCTradingAccountToken) {
    if (SwigDerivedClassHasMethod("OnRtnCFMMCTradingAccountToken", swigMethodTypes89)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountTokenSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcCFMMCTradingAccountTokenField.getCPtr(pCFMMCTradingAccountToken)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountToken(swigCPtr, CThostFtdcCFMMCTradingAccountTokenField.getCPtr(pCFMMCTradingAccountToken));
  }

  public virtual void OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField pBatchOrderAction, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnBatchOrderAction", swigMethodTypes90)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnBatchOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcBatchOrderActionField.getCPtr(pBatchOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnBatchOrderAction(swigCPtr, CThostFtdcBatchOrderActionField.getCPtr(pBatchOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnRtnOptionSelfClose(CThostFtdcOptionSelfCloseField pOptionSelfClose) {
    if (SwigDerivedClassHasMethod("OnRtnOptionSelfClose", swigMethodTypes91)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnOptionSelfCloseSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOptionSelfCloseField.getCPtr(pOptionSelfClose)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnOptionSelfClose(swigCPtr, CThostFtdcOptionSelfCloseField.getCPtr(pOptionSelfClose));
  }

  public virtual void OnErrRtnOptionSelfCloseInsert(CThostFtdcInputOptionSelfCloseField pInputOptionSelfClose, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnOptionSelfCloseInsert", swigMethodTypes92)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOptionSelfCloseInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputOptionSelfCloseField.getCPtr(pInputOptionSelfClose), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOptionSelfCloseInsert(swigCPtr, CThostFtdcInputOptionSelfCloseField.getCPtr(pInputOptionSelfClose), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnOptionSelfCloseAction(CThostFtdcOptionSelfCloseActionField pOptionSelfCloseAction, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnOptionSelfCloseAction", swigMethodTypes93)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOptionSelfCloseActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOptionSelfCloseActionField.getCPtr(pOptionSelfCloseAction), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnOptionSelfCloseAction(swigCPtr, CThostFtdcOptionSelfCloseActionField.getCPtr(pOptionSelfCloseAction), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnRtnCombAction(CThostFtdcCombActionField pCombAction) {
    if (SwigDerivedClassHasMethod("OnRtnCombAction", swigMethodTypes94)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnCombActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcCombActionField.getCPtr(pCombAction)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnCombAction(swigCPtr, CThostFtdcCombActionField.getCPtr(pCombAction));
  }

  public virtual void OnErrRtnCombActionInsert(CThostFtdcInputCombActionField pInputCombAction, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnCombActionInsert", swigMethodTypes95)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnCombActionInsertSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcInputCombActionField.getCPtr(pInputCombAction), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnCombActionInsert(swigCPtr, CThostFtdcInputCombActionField.getCPtr(pInputCombAction), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnRspQryContractBank(CThostFtdcContractBankField pContractBank, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryContractBank", swigMethodTypes96)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryContractBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcContractBankField.getCPtr(pContractBank), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryContractBank(swigCPtr, CThostFtdcContractBankField.getCPtr(pContractBank), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryParkedOrder(CThostFtdcParkedOrderField pParkedOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryParkedOrder", swigMethodTypes97)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryParkedOrderSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcParkedOrderField.getCPtr(pParkedOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryParkedOrder(swigCPtr, CThostFtdcParkedOrderField.getCPtr(pParkedOrder), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField pParkedOrderAction, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryParkedOrderAction", swigMethodTypes98)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryParkedOrderActionSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcParkedOrderActionField.getCPtr(pParkedOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryParkedOrderAction(swigCPtr, CThostFtdcParkedOrderActionField.getCPtr(pParkedOrderAction), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTradingNotice(CThostFtdcTradingNoticeField pTradingNotice, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTradingNotice", swigMethodTypes99)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTradingNoticeSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcTradingNoticeField.getCPtr(pTradingNotice), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryTradingNotice(swigCPtr, CThostFtdcTradingNoticeField.getCPtr(pTradingNotice), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField pBrokerTradingParams, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryBrokerTradingParams", swigMethodTypes100)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryBrokerTradingParamsSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcBrokerTradingParamsField.getCPtr(pBrokerTradingParams), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryBrokerTradingParams(swigCPtr, CThostFtdcBrokerTradingParamsField.getCPtr(pBrokerTradingParams), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField pBrokerTradingAlgos, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryBrokerTradingAlgos", swigMethodTypes101)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgosSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcBrokerTradingAlgosField.getCPtr(pBrokerTradingAlgos), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgos(swigCPtr, CThostFtdcBrokerTradingAlgosField.getCPtr(pBrokerTradingAlgos), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryCFMMCTradingAccountToken", swigMethodTypes102)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountTokenSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcQueryCFMMCTradingAccountTokenField.getCPtr(pQueryCFMMCTradingAccountToken), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountToken(swigCPtr, CThostFtdcQueryCFMMCTradingAccountTokenField.getCPtr(pQueryCFMMCTradingAccountToken), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField pRspTransfer) {
    if (SwigDerivedClassHasMethod("OnRtnFromBankToFutureByBank", swigMethodTypes103)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromBankToFutureByBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromBankToFutureByBank(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer));
  }

  public virtual void OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField pRspTransfer) {
    if (SwigDerivedClassHasMethod("OnRtnFromFutureToBankByBank", swigMethodTypes104)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromFutureToBankByBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromFutureToBankByBank(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer));
  }

  public virtual void OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField pRspRepeal) {
    if (SwigDerivedClassHasMethod("OnRtnRepealFromBankToFutureByBank", swigMethodTypes105)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBank(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal));
  }

  public virtual void OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField pRspRepeal) {
    if (SwigDerivedClassHasMethod("OnRtnRepealFromFutureToBankByBank", swigMethodTypes106)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBank(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal));
  }

  public virtual void OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField pRspTransfer) {
    if (SwigDerivedClassHasMethod("OnRtnFromBankToFutureByFuture", swigMethodTypes107)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromBankToFutureByFuture(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer));
  }

  public virtual void OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField pRspTransfer) {
    if (SwigDerivedClassHasMethod("OnRtnFromFutureToBankByFuture", swigMethodTypes108)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnFromFutureToBankByFuture(swigCPtr, CThostFtdcRspTransferField.getCPtr(pRspTransfer));
  }

  public virtual void OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField pRspRepeal) {
    if (SwigDerivedClassHasMethod("OnRtnRepealFromBankToFutureByFutureManual", swigMethodTypes109)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManualSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManual(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal));
  }

  public virtual void OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField pRspRepeal) {
    if (SwigDerivedClassHasMethod("OnRtnRepealFromFutureToBankByFutureManual", swigMethodTypes110)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManualSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManual(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal));
  }

  public virtual void OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField pNotifyQueryAccount) {
    if (SwigDerivedClassHasMethod("OnRtnQueryBankBalanceByFuture", swigMethodTypes111)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcNotifyQueryAccountField.getCPtr(pNotifyQueryAccount)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFuture(swigCPtr, CThostFtdcNotifyQueryAccountField.getCPtr(pNotifyQueryAccount));
  }

  public virtual void OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnBankToFutureByFuture", swigMethodTypes112)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnBankToFutureByFuture(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnFutureToBankByFuture", swigMethodTypes113)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnFutureToBankByFuture(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField pReqRepeal, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnRepealBankToFutureByFutureManual", swigMethodTypes114)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManualSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqRepealField.getCPtr(pReqRepeal), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManual(swigCPtr, CThostFtdcReqRepealField.getCPtr(pReqRepeal), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField pReqRepeal, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnRepealFutureToBankByFutureManual", swigMethodTypes115)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManualSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqRepealField.getCPtr(pReqRepeal), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManual(swigCPtr, CThostFtdcReqRepealField.getCPtr(pReqRepeal), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField pReqQueryAccount, CThostFtdcRspInfoField pRspInfo) {
    if (SwigDerivedClassHasMethod("OnErrRtnQueryBankBalanceByFuture", swigMethodTypes116)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqQueryAccountField.getCPtr(pReqQueryAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture(swigCPtr, CThostFtdcReqQueryAccountField.getCPtr(pReqQueryAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo));
  }

  public virtual void OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField pRspRepeal) {
    if (SwigDerivedClassHasMethod("OnRtnRepealFromBankToFutureByFuture", swigMethodTypes117)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFuture(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal));
  }

  public virtual void OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField pRspRepeal) {
    if (SwigDerivedClassHasMethod("OnRtnRepealFromFutureToBankByFuture", swigMethodTypes118)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFuture(swigCPtr, CThostFtdcRspRepealField.getCPtr(pRspRepeal));
  }

  public virtual void OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspFromBankToFutureByFuture", swigMethodTypes119)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspFromBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspFromBankToFutureByFuture(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspFromFutureToBankByFuture", swigMethodTypes120)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspFromFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspFromFutureToBankByFuture(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField pReqQueryAccount, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryBankAccountMoneyByFuture", swigMethodTypes121)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFutureSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcReqQueryAccountField.getCPtr(pReqQueryAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture(swigCPtr, CThostFtdcReqQueryAccountField.getCPtr(pReqQueryAccount), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRtnOpenAccountByBank(CThostFtdcOpenAccountField pOpenAccount) {
    if (SwigDerivedClassHasMethod("OnRtnOpenAccountByBank", swigMethodTypes122)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnOpenAccountByBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcOpenAccountField.getCPtr(pOpenAccount)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnOpenAccountByBank(swigCPtr, CThostFtdcOpenAccountField.getCPtr(pOpenAccount));
  }

  public virtual void OnRtnCancelAccountByBank(CThostFtdcCancelAccountField pCancelAccount) {
    if (SwigDerivedClassHasMethod("OnRtnCancelAccountByBank", swigMethodTypes123)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnCancelAccountByBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcCancelAccountField.getCPtr(pCancelAccount)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnCancelAccountByBank(swigCPtr, CThostFtdcCancelAccountField.getCPtr(pCancelAccount));
  }

  public virtual void OnRtnChangeAccountByBank(CThostFtdcChangeAccountField pChangeAccount) {
    if (SwigDerivedClassHasMethod("OnRtnChangeAccountByBank", swigMethodTypes124)) ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnChangeAccountByBankSwigExplicitCThostFtdcTraderSpi(swigCPtr, CThostFtdcChangeAccountField.getCPtr(pChangeAccount)); else ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_OnRtnChangeAccountByBank(swigCPtr, CThostFtdcChangeAccountField.getCPtr(pChangeAccount));
  }

  public CThostFtdcTraderSpi() : this(ctpthosttradeapiPINVOKE.new_CThostFtdcTraderSpi(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnFrontConnected", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCThostFtdcTraderSpi_0(SwigDirectorOnFrontConnected);
    if (SwigDerivedClassHasMethod("OnFrontDisconnected", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCThostFtdcTraderSpi_1(SwigDirectorOnFrontDisconnected);
    if (SwigDerivedClassHasMethod("OnHeartBeatWarning", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCThostFtdcTraderSpi_2(SwigDirectorOnHeartBeatWarning);
    if (SwigDerivedClassHasMethod("OnRspAuthenticate", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCThostFtdcTraderSpi_3(SwigDirectorOnRspAuthenticate);
    if (SwigDerivedClassHasMethod("OnRspUserLogin", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateCThostFtdcTraderSpi_4(SwigDirectorOnRspUserLogin);
    if (SwigDerivedClassHasMethod("OnRspUserLogout", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateCThostFtdcTraderSpi_5(SwigDirectorOnRspUserLogout);
    if (SwigDerivedClassHasMethod("OnRspUserPasswordUpdate", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateCThostFtdcTraderSpi_6(SwigDirectorOnRspUserPasswordUpdate);
    if (SwigDerivedClassHasMethod("OnRspTradingAccountPasswordUpdate", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateCThostFtdcTraderSpi_7(SwigDirectorOnRspTradingAccountPasswordUpdate);
    if (SwigDerivedClassHasMethod("OnRspUserAuthMethod", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateCThostFtdcTraderSpi_8(SwigDirectorOnRspUserAuthMethod);
    if (SwigDerivedClassHasMethod("OnRspGenUserCaptcha", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateCThostFtdcTraderSpi_9(SwigDirectorOnRspGenUserCaptcha);
    if (SwigDerivedClassHasMethod("OnRspGenUserText", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateCThostFtdcTraderSpi_10(SwigDirectorOnRspGenUserText);
    if (SwigDerivedClassHasMethod("OnRspOrderInsert", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateCThostFtdcTraderSpi_11(SwigDirectorOnRspOrderInsert);
    if (SwigDerivedClassHasMethod("OnRspParkedOrderInsert", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateCThostFtdcTraderSpi_12(SwigDirectorOnRspParkedOrderInsert);
    if (SwigDerivedClassHasMethod("OnRspParkedOrderAction", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateCThostFtdcTraderSpi_13(SwigDirectorOnRspParkedOrderAction);
    if (SwigDerivedClassHasMethod("OnRspOrderAction", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateCThostFtdcTraderSpi_14(SwigDirectorOnRspOrderAction);
    if (SwigDerivedClassHasMethod("OnRspQueryMaxOrderVolume", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateCThostFtdcTraderSpi_15(SwigDirectorOnRspQueryMaxOrderVolume);
    if (SwigDerivedClassHasMethod("OnRspSettlementInfoConfirm", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateCThostFtdcTraderSpi_16(SwigDirectorOnRspSettlementInfoConfirm);
    if (SwigDerivedClassHasMethod("OnRspRemoveParkedOrder", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateCThostFtdcTraderSpi_17(SwigDirectorOnRspRemoveParkedOrder);
    if (SwigDerivedClassHasMethod("OnRspRemoveParkedOrderAction", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateCThostFtdcTraderSpi_18(SwigDirectorOnRspRemoveParkedOrderAction);
    if (SwigDerivedClassHasMethod("OnRspExecOrderInsert", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateCThostFtdcTraderSpi_19(SwigDirectorOnRspExecOrderInsert);
    if (SwigDerivedClassHasMethod("OnRspExecOrderAction", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateCThostFtdcTraderSpi_20(SwigDirectorOnRspExecOrderAction);
    if (SwigDerivedClassHasMethod("OnRspForQuoteInsert", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateCThostFtdcTraderSpi_21(SwigDirectorOnRspForQuoteInsert);
    if (SwigDerivedClassHasMethod("OnRspQuoteInsert", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateCThostFtdcTraderSpi_22(SwigDirectorOnRspQuoteInsert);
    if (SwigDerivedClassHasMethod("OnRspQuoteAction", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateCThostFtdcTraderSpi_23(SwigDirectorOnRspQuoteAction);
    if (SwigDerivedClassHasMethod("OnRspBatchOrderAction", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateCThostFtdcTraderSpi_24(SwigDirectorOnRspBatchOrderAction);
    if (SwigDerivedClassHasMethod("OnRspOptionSelfCloseInsert", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateCThostFtdcTraderSpi_25(SwigDirectorOnRspOptionSelfCloseInsert);
    if (SwigDerivedClassHasMethod("OnRspOptionSelfCloseAction", swigMethodTypes26))
      swigDelegate26 = new SwigDelegateCThostFtdcTraderSpi_26(SwigDirectorOnRspOptionSelfCloseAction);
    if (SwigDerivedClassHasMethod("OnRspCombActionInsert", swigMethodTypes27))
      swigDelegate27 = new SwigDelegateCThostFtdcTraderSpi_27(SwigDirectorOnRspCombActionInsert);
    if (SwigDerivedClassHasMethod("OnRspQryOrder", swigMethodTypes28))
      swigDelegate28 = new SwigDelegateCThostFtdcTraderSpi_28(SwigDirectorOnRspQryOrder);
    if (SwigDerivedClassHasMethod("OnRspQryTrade", swigMethodTypes29))
      swigDelegate29 = new SwigDelegateCThostFtdcTraderSpi_29(SwigDirectorOnRspQryTrade);
    if (SwigDerivedClassHasMethod("OnRspQryInvestorPosition", swigMethodTypes30))
      swigDelegate30 = new SwigDelegateCThostFtdcTraderSpi_30(SwigDirectorOnRspQryInvestorPosition);
    if (SwigDerivedClassHasMethod("OnRspQryTradingAccount", swigMethodTypes31))
      swigDelegate31 = new SwigDelegateCThostFtdcTraderSpi_31(SwigDirectorOnRspQryTradingAccount);
    if (SwigDerivedClassHasMethod("OnRspQryInvestor", swigMethodTypes32))
      swigDelegate32 = new SwigDelegateCThostFtdcTraderSpi_32(SwigDirectorOnRspQryInvestor);
    if (SwigDerivedClassHasMethod("OnRspQryTradingCode", swigMethodTypes33))
      swigDelegate33 = new SwigDelegateCThostFtdcTraderSpi_33(SwigDirectorOnRspQryTradingCode);
    if (SwigDerivedClassHasMethod("OnRspQryInstrumentMarginRate", swigMethodTypes34))
      swigDelegate34 = new SwigDelegateCThostFtdcTraderSpi_34(SwigDirectorOnRspQryInstrumentMarginRate);
    if (SwigDerivedClassHasMethod("OnRspQryInstrumentCommissionRate", swigMethodTypes35))
      swigDelegate35 = new SwigDelegateCThostFtdcTraderSpi_35(SwigDirectorOnRspQryInstrumentCommissionRate);
    if (SwigDerivedClassHasMethod("OnRspQryExchange", swigMethodTypes36))
      swigDelegate36 = new SwigDelegateCThostFtdcTraderSpi_36(SwigDirectorOnRspQryExchange);
    if (SwigDerivedClassHasMethod("OnRspQryProduct", swigMethodTypes37))
      swigDelegate37 = new SwigDelegateCThostFtdcTraderSpi_37(SwigDirectorOnRspQryProduct);
    if (SwigDerivedClassHasMethod("OnRspQryInstrument", swigMethodTypes38))
      swigDelegate38 = new SwigDelegateCThostFtdcTraderSpi_38(SwigDirectorOnRspQryInstrument);
    if (SwigDerivedClassHasMethod("OnRspQryDepthMarketData", swigMethodTypes39))
      swigDelegate39 = new SwigDelegateCThostFtdcTraderSpi_39(SwigDirectorOnRspQryDepthMarketData);
    if (SwigDerivedClassHasMethod("OnRspQrySettlementInfo", swigMethodTypes40))
      swigDelegate40 = new SwigDelegateCThostFtdcTraderSpi_40(SwigDirectorOnRspQrySettlementInfo);
    if (SwigDerivedClassHasMethod("OnRspQryTransferBank", swigMethodTypes41))
      swigDelegate41 = new SwigDelegateCThostFtdcTraderSpi_41(SwigDirectorOnRspQryTransferBank);
    if (SwigDerivedClassHasMethod("OnRspQryInvestorPositionDetail", swigMethodTypes42))
      swigDelegate42 = new SwigDelegateCThostFtdcTraderSpi_42(SwigDirectorOnRspQryInvestorPositionDetail);
    if (SwigDerivedClassHasMethod("OnRspQryNotice", swigMethodTypes43))
      swigDelegate43 = new SwigDelegateCThostFtdcTraderSpi_43(SwigDirectorOnRspQryNotice);
    if (SwigDerivedClassHasMethod("OnRspQrySettlementInfoConfirm", swigMethodTypes44))
      swigDelegate44 = new SwigDelegateCThostFtdcTraderSpi_44(SwigDirectorOnRspQrySettlementInfoConfirm);
    if (SwigDerivedClassHasMethod("OnRspQryInvestorPositionCombineDetail", swigMethodTypes45))
      swigDelegate45 = new SwigDelegateCThostFtdcTraderSpi_45(SwigDirectorOnRspQryInvestorPositionCombineDetail);
    if (SwigDerivedClassHasMethod("OnRspQryCFMMCTradingAccountKey", swigMethodTypes46))
      swigDelegate46 = new SwigDelegateCThostFtdcTraderSpi_46(SwigDirectorOnRspQryCFMMCTradingAccountKey);
    if (SwigDerivedClassHasMethod("OnRspQryEWarrantOffset", swigMethodTypes47))
      swigDelegate47 = new SwigDelegateCThostFtdcTraderSpi_47(SwigDirectorOnRspQryEWarrantOffset);
    if (SwigDerivedClassHasMethod("OnRspQryInvestorProductGroupMargin", swigMethodTypes48))
      swigDelegate48 = new SwigDelegateCThostFtdcTraderSpi_48(SwigDirectorOnRspQryInvestorProductGroupMargin);
    if (SwigDerivedClassHasMethod("OnRspQryExchangeMarginRate", swigMethodTypes49))
      swigDelegate49 = new SwigDelegateCThostFtdcTraderSpi_49(SwigDirectorOnRspQryExchangeMarginRate);
    if (SwigDerivedClassHasMethod("OnRspQryExchangeMarginRateAdjust", swigMethodTypes50))
      swigDelegate50 = new SwigDelegateCThostFtdcTraderSpi_50(SwigDirectorOnRspQryExchangeMarginRateAdjust);
    if (SwigDerivedClassHasMethod("OnRspQryExchangeRate", swigMethodTypes51))
      swigDelegate51 = new SwigDelegateCThostFtdcTraderSpi_51(SwigDirectorOnRspQryExchangeRate);
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentACIDMap", swigMethodTypes52))
      swigDelegate52 = new SwigDelegateCThostFtdcTraderSpi_52(SwigDirectorOnRspQrySecAgentACIDMap);
    if (SwigDerivedClassHasMethod("OnRspQryProductExchRate", swigMethodTypes53))
      swigDelegate53 = new SwigDelegateCThostFtdcTraderSpi_53(SwigDirectorOnRspQryProductExchRate);
    if (SwigDerivedClassHasMethod("OnRspQryProductGroup", swigMethodTypes54))
      swigDelegate54 = new SwigDelegateCThostFtdcTraderSpi_54(SwigDirectorOnRspQryProductGroup);
    if (SwigDerivedClassHasMethod("OnRspQryMMInstrumentCommissionRate", swigMethodTypes55))
      swigDelegate55 = new SwigDelegateCThostFtdcTraderSpi_55(SwigDirectorOnRspQryMMInstrumentCommissionRate);
    if (SwigDerivedClassHasMethod("OnRspQryMMOptionInstrCommRate", swigMethodTypes56))
      swigDelegate56 = new SwigDelegateCThostFtdcTraderSpi_56(SwigDirectorOnRspQryMMOptionInstrCommRate);
    if (SwigDerivedClassHasMethod("OnRspQryInstrumentOrderCommRate", swigMethodTypes57))
      swigDelegate57 = new SwigDelegateCThostFtdcTraderSpi_57(SwigDirectorOnRspQryInstrumentOrderCommRate);
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentTradingAccount", swigMethodTypes58))
      swigDelegate58 = new SwigDelegateCThostFtdcTraderSpi_58(SwigDirectorOnRspQrySecAgentTradingAccount);
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentCheckMode", swigMethodTypes59))
      swigDelegate59 = new SwigDelegateCThostFtdcTraderSpi_59(SwigDirectorOnRspQrySecAgentCheckMode);
    if (SwigDerivedClassHasMethod("OnRspQrySecAgentTradeInfo", swigMethodTypes60))
      swigDelegate60 = new SwigDelegateCThostFtdcTraderSpi_60(SwigDirectorOnRspQrySecAgentTradeInfo);
    if (SwigDerivedClassHasMethod("OnRspQryOptionInstrTradeCost", swigMethodTypes61))
      swigDelegate61 = new SwigDelegateCThostFtdcTraderSpi_61(SwigDirectorOnRspQryOptionInstrTradeCost);
    if (SwigDerivedClassHasMethod("OnRspQryOptionInstrCommRate", swigMethodTypes62))
      swigDelegate62 = new SwigDelegateCThostFtdcTraderSpi_62(SwigDirectorOnRspQryOptionInstrCommRate);
    if (SwigDerivedClassHasMethod("OnRspQryExecOrder", swigMethodTypes63))
      swigDelegate63 = new SwigDelegateCThostFtdcTraderSpi_63(SwigDirectorOnRspQryExecOrder);
    if (SwigDerivedClassHasMethod("OnRspQryForQuote", swigMethodTypes64))
      swigDelegate64 = new SwigDelegateCThostFtdcTraderSpi_64(SwigDirectorOnRspQryForQuote);
    if (SwigDerivedClassHasMethod("OnRspQryQuote", swigMethodTypes65))
      swigDelegate65 = new SwigDelegateCThostFtdcTraderSpi_65(SwigDirectorOnRspQryQuote);
    if (SwigDerivedClassHasMethod("OnRspQryOptionSelfClose", swigMethodTypes66))
      swigDelegate66 = new SwigDelegateCThostFtdcTraderSpi_66(SwigDirectorOnRspQryOptionSelfClose);
    if (SwigDerivedClassHasMethod("OnRspQryInvestUnit", swigMethodTypes67))
      swigDelegate67 = new SwigDelegateCThostFtdcTraderSpi_67(SwigDirectorOnRspQryInvestUnit);
    if (SwigDerivedClassHasMethod("OnRspQryCombInstrumentGuard", swigMethodTypes68))
      swigDelegate68 = new SwigDelegateCThostFtdcTraderSpi_68(SwigDirectorOnRspQryCombInstrumentGuard);
    if (SwigDerivedClassHasMethod("OnRspQryCombAction", swigMethodTypes69))
      swigDelegate69 = new SwigDelegateCThostFtdcTraderSpi_69(SwigDirectorOnRspQryCombAction);
    if (SwigDerivedClassHasMethod("OnRspQryTransferSerial", swigMethodTypes70))
      swigDelegate70 = new SwigDelegateCThostFtdcTraderSpi_70(SwigDirectorOnRspQryTransferSerial);
    if (SwigDerivedClassHasMethod("OnRspQryAccountregister", swigMethodTypes71))
      swigDelegate71 = new SwigDelegateCThostFtdcTraderSpi_71(SwigDirectorOnRspQryAccountregister);
    if (SwigDerivedClassHasMethod("OnRspError", swigMethodTypes72))
      swigDelegate72 = new SwigDelegateCThostFtdcTraderSpi_72(SwigDirectorOnRspError);
    if (SwigDerivedClassHasMethod("OnRtnOrder", swigMethodTypes73))
      swigDelegate73 = new SwigDelegateCThostFtdcTraderSpi_73(SwigDirectorOnRtnOrder);
    if (SwigDerivedClassHasMethod("OnRtnTrade", swigMethodTypes74))
      swigDelegate74 = new SwigDelegateCThostFtdcTraderSpi_74(SwigDirectorOnRtnTrade);
    if (SwigDerivedClassHasMethod("OnErrRtnOrderInsert", swigMethodTypes75))
      swigDelegate75 = new SwigDelegateCThostFtdcTraderSpi_75(SwigDirectorOnErrRtnOrderInsert);
    if (SwigDerivedClassHasMethod("OnErrRtnOrderAction", swigMethodTypes76))
      swigDelegate76 = new SwigDelegateCThostFtdcTraderSpi_76(SwigDirectorOnErrRtnOrderAction);
    if (SwigDerivedClassHasMethod("OnRtnInstrumentStatus", swigMethodTypes77))
      swigDelegate77 = new SwigDelegateCThostFtdcTraderSpi_77(SwigDirectorOnRtnInstrumentStatus);
    if (SwigDerivedClassHasMethod("OnRtnBulletin", swigMethodTypes78))
      swigDelegate78 = new SwigDelegateCThostFtdcTraderSpi_78(SwigDirectorOnRtnBulletin);
    if (SwigDerivedClassHasMethod("OnRtnTradingNotice", swigMethodTypes79))
      swigDelegate79 = new SwigDelegateCThostFtdcTraderSpi_79(SwigDirectorOnRtnTradingNotice);
    if (SwigDerivedClassHasMethod("OnRtnErrorConditionalOrder", swigMethodTypes80))
      swigDelegate80 = new SwigDelegateCThostFtdcTraderSpi_80(SwigDirectorOnRtnErrorConditionalOrder);
    if (SwigDerivedClassHasMethod("OnRtnExecOrder", swigMethodTypes81))
      swigDelegate81 = new SwigDelegateCThostFtdcTraderSpi_81(SwigDirectorOnRtnExecOrder);
    if (SwigDerivedClassHasMethod("OnErrRtnExecOrderInsert", swigMethodTypes82))
      swigDelegate82 = new SwigDelegateCThostFtdcTraderSpi_82(SwigDirectorOnErrRtnExecOrderInsert);
    if (SwigDerivedClassHasMethod("OnErrRtnExecOrderAction", swigMethodTypes83))
      swigDelegate83 = new SwigDelegateCThostFtdcTraderSpi_83(SwigDirectorOnErrRtnExecOrderAction);
    if (SwigDerivedClassHasMethod("OnErrRtnForQuoteInsert", swigMethodTypes84))
      swigDelegate84 = new SwigDelegateCThostFtdcTraderSpi_84(SwigDirectorOnErrRtnForQuoteInsert);
    if (SwigDerivedClassHasMethod("OnRtnQuote", swigMethodTypes85))
      swigDelegate85 = new SwigDelegateCThostFtdcTraderSpi_85(SwigDirectorOnRtnQuote);
    if (SwigDerivedClassHasMethod("OnErrRtnQuoteInsert", swigMethodTypes86))
      swigDelegate86 = new SwigDelegateCThostFtdcTraderSpi_86(SwigDirectorOnErrRtnQuoteInsert);
    if (SwigDerivedClassHasMethod("OnErrRtnQuoteAction", swigMethodTypes87))
      swigDelegate87 = new SwigDelegateCThostFtdcTraderSpi_87(SwigDirectorOnErrRtnQuoteAction);
    if (SwigDerivedClassHasMethod("OnRtnForQuoteRsp", swigMethodTypes88))
      swigDelegate88 = new SwigDelegateCThostFtdcTraderSpi_88(SwigDirectorOnRtnForQuoteRsp);
    if (SwigDerivedClassHasMethod("OnRtnCFMMCTradingAccountToken", swigMethodTypes89))
      swigDelegate89 = new SwigDelegateCThostFtdcTraderSpi_89(SwigDirectorOnRtnCFMMCTradingAccountToken);
    if (SwigDerivedClassHasMethod("OnErrRtnBatchOrderAction", swigMethodTypes90))
      swigDelegate90 = new SwigDelegateCThostFtdcTraderSpi_90(SwigDirectorOnErrRtnBatchOrderAction);
    if (SwigDerivedClassHasMethod("OnRtnOptionSelfClose", swigMethodTypes91))
      swigDelegate91 = new SwigDelegateCThostFtdcTraderSpi_91(SwigDirectorOnRtnOptionSelfClose);
    if (SwigDerivedClassHasMethod("OnErrRtnOptionSelfCloseInsert", swigMethodTypes92))
      swigDelegate92 = new SwigDelegateCThostFtdcTraderSpi_92(SwigDirectorOnErrRtnOptionSelfCloseInsert);
    if (SwigDerivedClassHasMethod("OnErrRtnOptionSelfCloseAction", swigMethodTypes93))
      swigDelegate93 = new SwigDelegateCThostFtdcTraderSpi_93(SwigDirectorOnErrRtnOptionSelfCloseAction);
    if (SwigDerivedClassHasMethod("OnRtnCombAction", swigMethodTypes94))
      swigDelegate94 = new SwigDelegateCThostFtdcTraderSpi_94(SwigDirectorOnRtnCombAction);
    if (SwigDerivedClassHasMethod("OnErrRtnCombActionInsert", swigMethodTypes95))
      swigDelegate95 = new SwigDelegateCThostFtdcTraderSpi_95(SwigDirectorOnErrRtnCombActionInsert);
    if (SwigDerivedClassHasMethod("OnRspQryContractBank", swigMethodTypes96))
      swigDelegate96 = new SwigDelegateCThostFtdcTraderSpi_96(SwigDirectorOnRspQryContractBank);
    if (SwigDerivedClassHasMethod("OnRspQryParkedOrder", swigMethodTypes97))
      swigDelegate97 = new SwigDelegateCThostFtdcTraderSpi_97(SwigDirectorOnRspQryParkedOrder);
    if (SwigDerivedClassHasMethod("OnRspQryParkedOrderAction", swigMethodTypes98))
      swigDelegate98 = new SwigDelegateCThostFtdcTraderSpi_98(SwigDirectorOnRspQryParkedOrderAction);
    if (SwigDerivedClassHasMethod("OnRspQryTradingNotice", swigMethodTypes99))
      swigDelegate99 = new SwigDelegateCThostFtdcTraderSpi_99(SwigDirectorOnRspQryTradingNotice);
    if (SwigDerivedClassHasMethod("OnRspQryBrokerTradingParams", swigMethodTypes100))
      swigDelegate100 = new SwigDelegateCThostFtdcTraderSpi_100(SwigDirectorOnRspQryBrokerTradingParams);
    if (SwigDerivedClassHasMethod("OnRspQryBrokerTradingAlgos", swigMethodTypes101))
      swigDelegate101 = new SwigDelegateCThostFtdcTraderSpi_101(SwigDirectorOnRspQryBrokerTradingAlgos);
    if (SwigDerivedClassHasMethod("OnRspQueryCFMMCTradingAccountToken", swigMethodTypes102))
      swigDelegate102 = new SwigDelegateCThostFtdcTraderSpi_102(SwigDirectorOnRspQueryCFMMCTradingAccountToken);
    if (SwigDerivedClassHasMethod("OnRtnFromBankToFutureByBank", swigMethodTypes103))
      swigDelegate103 = new SwigDelegateCThostFtdcTraderSpi_103(SwigDirectorOnRtnFromBankToFutureByBank);
    if (SwigDerivedClassHasMethod("OnRtnFromFutureToBankByBank", swigMethodTypes104))
      swigDelegate104 = new SwigDelegateCThostFtdcTraderSpi_104(SwigDirectorOnRtnFromFutureToBankByBank);
    if (SwigDerivedClassHasMethod("OnRtnRepealFromBankToFutureByBank", swigMethodTypes105))
      swigDelegate105 = new SwigDelegateCThostFtdcTraderSpi_105(SwigDirectorOnRtnRepealFromBankToFutureByBank);
    if (SwigDerivedClassHasMethod("OnRtnRepealFromFutureToBankByBank", swigMethodTypes106))
      swigDelegate106 = new SwigDelegateCThostFtdcTraderSpi_106(SwigDirectorOnRtnRepealFromFutureToBankByBank);
    if (SwigDerivedClassHasMethod("OnRtnFromBankToFutureByFuture", swigMethodTypes107))
      swigDelegate107 = new SwigDelegateCThostFtdcTraderSpi_107(SwigDirectorOnRtnFromBankToFutureByFuture);
    if (SwigDerivedClassHasMethod("OnRtnFromFutureToBankByFuture", swigMethodTypes108))
      swigDelegate108 = new SwigDelegateCThostFtdcTraderSpi_108(SwigDirectorOnRtnFromFutureToBankByFuture);
    if (SwigDerivedClassHasMethod("OnRtnRepealFromBankToFutureByFutureManual", swigMethodTypes109))
      swigDelegate109 = new SwigDelegateCThostFtdcTraderSpi_109(SwigDirectorOnRtnRepealFromBankToFutureByFutureManual);
    if (SwigDerivedClassHasMethod("OnRtnRepealFromFutureToBankByFutureManual", swigMethodTypes110))
      swigDelegate110 = new SwigDelegateCThostFtdcTraderSpi_110(SwigDirectorOnRtnRepealFromFutureToBankByFutureManual);
    if (SwigDerivedClassHasMethod("OnRtnQueryBankBalanceByFuture", swigMethodTypes111))
      swigDelegate111 = new SwigDelegateCThostFtdcTraderSpi_111(SwigDirectorOnRtnQueryBankBalanceByFuture);
    if (SwigDerivedClassHasMethod("OnErrRtnBankToFutureByFuture", swigMethodTypes112))
      swigDelegate112 = new SwigDelegateCThostFtdcTraderSpi_112(SwigDirectorOnErrRtnBankToFutureByFuture);
    if (SwigDerivedClassHasMethod("OnErrRtnFutureToBankByFuture", swigMethodTypes113))
      swigDelegate113 = new SwigDelegateCThostFtdcTraderSpi_113(SwigDirectorOnErrRtnFutureToBankByFuture);
    if (SwigDerivedClassHasMethod("OnErrRtnRepealBankToFutureByFutureManual", swigMethodTypes114))
      swigDelegate114 = new SwigDelegateCThostFtdcTraderSpi_114(SwigDirectorOnErrRtnRepealBankToFutureByFutureManual);
    if (SwigDerivedClassHasMethod("OnErrRtnRepealFutureToBankByFutureManual", swigMethodTypes115))
      swigDelegate115 = new SwigDelegateCThostFtdcTraderSpi_115(SwigDirectorOnErrRtnRepealFutureToBankByFutureManual);
    if (SwigDerivedClassHasMethod("OnErrRtnQueryBankBalanceByFuture", swigMethodTypes116))
      swigDelegate116 = new SwigDelegateCThostFtdcTraderSpi_116(SwigDirectorOnErrRtnQueryBankBalanceByFuture);
    if (SwigDerivedClassHasMethod("OnRtnRepealFromBankToFutureByFuture", swigMethodTypes117))
      swigDelegate117 = new SwigDelegateCThostFtdcTraderSpi_117(SwigDirectorOnRtnRepealFromBankToFutureByFuture);
    if (SwigDerivedClassHasMethod("OnRtnRepealFromFutureToBankByFuture", swigMethodTypes118))
      swigDelegate118 = new SwigDelegateCThostFtdcTraderSpi_118(SwigDirectorOnRtnRepealFromFutureToBankByFuture);
    if (SwigDerivedClassHasMethod("OnRspFromBankToFutureByFuture", swigMethodTypes119))
      swigDelegate119 = new SwigDelegateCThostFtdcTraderSpi_119(SwigDirectorOnRspFromBankToFutureByFuture);
    if (SwigDerivedClassHasMethod("OnRspFromFutureToBankByFuture", swigMethodTypes120))
      swigDelegate120 = new SwigDelegateCThostFtdcTraderSpi_120(SwigDirectorOnRspFromFutureToBankByFuture);
    if (SwigDerivedClassHasMethod("OnRspQueryBankAccountMoneyByFuture", swigMethodTypes121))
      swigDelegate121 = new SwigDelegateCThostFtdcTraderSpi_121(SwigDirectorOnRspQueryBankAccountMoneyByFuture);
    if (SwigDerivedClassHasMethod("OnRtnOpenAccountByBank", swigMethodTypes122))
      swigDelegate122 = new SwigDelegateCThostFtdcTraderSpi_122(SwigDirectorOnRtnOpenAccountByBank);
    if (SwigDerivedClassHasMethod("OnRtnCancelAccountByBank", swigMethodTypes123))
      swigDelegate123 = new SwigDelegateCThostFtdcTraderSpi_123(SwigDirectorOnRtnCancelAccountByBank);
    if (SwigDerivedClassHasMethod("OnRtnChangeAccountByBank", swigMethodTypes124))
      swigDelegate124 = new SwigDelegateCThostFtdcTraderSpi_124(SwigDirectorOnRtnChangeAccountByBank);
    ctpthosttradeapiPINVOKE.CThostFtdcTraderSpi_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40, swigDelegate41, swigDelegate42, swigDelegate43, swigDelegate44, swigDelegate45, swigDelegate46, swigDelegate47, swigDelegate48, swigDelegate49, swigDelegate50, swigDelegate51, swigDelegate52, swigDelegate53, swigDelegate54, swigDelegate55, swigDelegate56, swigDelegate57, swigDelegate58, swigDelegate59, swigDelegate60, swigDelegate61, swigDelegate62, swigDelegate63, swigDelegate64, swigDelegate65, swigDelegate66, swigDelegate67, swigDelegate68, swigDelegate69, swigDelegate70, swigDelegate71, swigDelegate72, swigDelegate73, swigDelegate74, swigDelegate75, swigDelegate76, swigDelegate77, swigDelegate78, swigDelegate79, swigDelegate80, swigDelegate81, swigDelegate82, swigDelegate83, swigDelegate84, swigDelegate85, swigDelegate86, swigDelegate87, swigDelegate88, swigDelegate89, swigDelegate90, swigDelegate91, swigDelegate92, swigDelegate93, swigDelegate94, swigDelegate95, swigDelegate96, swigDelegate97, swigDelegate98, swigDelegate99, swigDelegate100, swigDelegate101, swigDelegate102, swigDelegate103, swigDelegate104, swigDelegate105, swigDelegate106, swigDelegate107, swigDelegate108, swigDelegate109, swigDelegate110, swigDelegate111, swigDelegate112, swigDelegate113, swigDelegate114, swigDelegate115, swigDelegate116, swigDelegate117, swigDelegate118, swigDelegate119, swigDelegate120, swigDelegate121, swigDelegate122, swigDelegate123, swigDelegate124);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CThostFtdcTraderSpi));
    return hasDerivedMethod;
  }

  private void SwigDirectorOnFrontConnected() {
    OnFrontConnected();
  }

  private void SwigDirectorOnFrontDisconnected(int nReason) {
    OnFrontDisconnected(nReason);
  }

  private void SwigDirectorOnHeartBeatWarning(int nTimeLapse) {
    OnHeartBeatWarning(nTimeLapse);
  }

  private void SwigDirectorOnRspAuthenticate(global::System.IntPtr pRspAuthenticateField, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspAuthenticate((pRspAuthenticateField == global::System.IntPtr.Zero) ? null : new CThostFtdcRspAuthenticateField(pRspAuthenticateField, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUserLogin(global::System.IntPtr pRspUserLogin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserLogin((pRspUserLogin == global::System.IntPtr.Zero) ? null : new CThostFtdcRspUserLoginField(pRspUserLogin, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUserLogout(global::System.IntPtr pUserLogout, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserLogout((pUserLogout == global::System.IntPtr.Zero) ? null : new CThostFtdcUserLogoutField(pUserLogout, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUserPasswordUpdate(global::System.IntPtr pUserPasswordUpdate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserPasswordUpdate((pUserPasswordUpdate == global::System.IntPtr.Zero) ? null : new CThostFtdcUserPasswordUpdateField(pUserPasswordUpdate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspTradingAccountPasswordUpdate(global::System.IntPtr pTradingAccountPasswordUpdate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspTradingAccountPasswordUpdate((pTradingAccountPasswordUpdate == global::System.IntPtr.Zero) ? null : new CThostFtdcTradingAccountPasswordUpdateField(pTradingAccountPasswordUpdate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUserAuthMethod(global::System.IntPtr pRspUserAuthMethod, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserAuthMethod((pRspUserAuthMethod == global::System.IntPtr.Zero) ? null : new CThostFtdcRspUserAuthMethodField(pRspUserAuthMethod, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspGenUserCaptcha(global::System.IntPtr pRspGenUserCaptcha, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspGenUserCaptcha((pRspGenUserCaptcha == global::System.IntPtr.Zero) ? null : new CThostFtdcRspGenUserCaptchaField(pRspGenUserCaptcha, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspGenUserText(global::System.IntPtr pRspGenUserText, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspGenUserText((pRspGenUserText == global::System.IntPtr.Zero) ? null : new CThostFtdcRspGenUserTextField(pRspGenUserText, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspOrderInsert(global::System.IntPtr pInputOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspOrderInsert((pInputOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOrderField(pInputOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspParkedOrderInsert(global::System.IntPtr pParkedOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspParkedOrderInsert((pParkedOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcParkedOrderField(pParkedOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspParkedOrderAction(global::System.IntPtr pParkedOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspParkedOrderAction((pParkedOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcParkedOrderActionField(pParkedOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspOrderAction(global::System.IntPtr pInputOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspOrderAction((pInputOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOrderActionField(pInputOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryMaxOrderVolume(global::System.IntPtr pQueryMaxOrderVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryMaxOrderVolume((pQueryMaxOrderVolume == global::System.IntPtr.Zero) ? null : new CThostFtdcQueryMaxOrderVolumeField(pQueryMaxOrderVolume, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspSettlementInfoConfirm(global::System.IntPtr pSettlementInfoConfirm, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspSettlementInfoConfirm((pSettlementInfoConfirm == global::System.IntPtr.Zero) ? null : new CThostFtdcSettlementInfoConfirmField(pSettlementInfoConfirm, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspRemoveParkedOrder(global::System.IntPtr pRemoveParkedOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspRemoveParkedOrder((pRemoveParkedOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcRemoveParkedOrderField(pRemoveParkedOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspRemoveParkedOrderAction(global::System.IntPtr pRemoveParkedOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspRemoveParkedOrderAction((pRemoveParkedOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcRemoveParkedOrderActionField(pRemoveParkedOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspExecOrderInsert(global::System.IntPtr pInputExecOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspExecOrderInsert((pInputExecOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcInputExecOrderField(pInputExecOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspExecOrderAction(global::System.IntPtr pInputExecOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspExecOrderAction((pInputExecOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputExecOrderActionField(pInputExecOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspForQuoteInsert(global::System.IntPtr pInputForQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspForQuoteInsert((pInputForQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcInputForQuoteField(pInputForQuote, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQuoteInsert(global::System.IntPtr pInputQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQuoteInsert((pInputQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcInputQuoteField(pInputQuote, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQuoteAction(global::System.IntPtr pInputQuoteAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQuoteAction((pInputQuoteAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputQuoteActionField(pInputQuoteAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspBatchOrderAction(global::System.IntPtr pInputBatchOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspBatchOrderAction((pInputBatchOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputBatchOrderActionField(pInputBatchOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspOptionSelfCloseInsert(global::System.IntPtr pInputOptionSelfClose, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspOptionSelfCloseInsert((pInputOptionSelfClose == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOptionSelfCloseField(pInputOptionSelfClose, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspOptionSelfCloseAction(global::System.IntPtr pInputOptionSelfCloseAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspOptionSelfCloseAction((pInputOptionSelfCloseAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOptionSelfCloseActionField(pInputOptionSelfCloseAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspCombActionInsert(global::System.IntPtr pInputCombAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspCombActionInsert((pInputCombAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputCombActionField(pInputCombAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryOrder(global::System.IntPtr pOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryOrder((pOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcOrderField(pOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTrade(global::System.IntPtr pTrade, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTrade((pTrade == global::System.IntPtr.Zero) ? null : new CThostFtdcTradeField(pTrade, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInvestorPosition(global::System.IntPtr pInvestorPosition, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInvestorPosition((pInvestorPosition == global::System.IntPtr.Zero) ? null : new CThostFtdcInvestorPositionField(pInvestorPosition, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTradingAccount(global::System.IntPtr pTradingAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTradingAccount((pTradingAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcTradingAccountField(pTradingAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInvestor(global::System.IntPtr pInvestor, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInvestor((pInvestor == global::System.IntPtr.Zero) ? null : new CThostFtdcInvestorField(pInvestor, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTradingCode(global::System.IntPtr pTradingCode, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTradingCode((pTradingCode == global::System.IntPtr.Zero) ? null : new CThostFtdcTradingCodeField(pTradingCode, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInstrumentMarginRate(global::System.IntPtr pInstrumentMarginRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInstrumentMarginRate((pInstrumentMarginRate == global::System.IntPtr.Zero) ? null : new CThostFtdcInstrumentMarginRateField(pInstrumentMarginRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInstrumentCommissionRate(global::System.IntPtr pInstrumentCommissionRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInstrumentCommissionRate((pInstrumentCommissionRate == global::System.IntPtr.Zero) ? null : new CThostFtdcInstrumentCommissionRateField(pInstrumentCommissionRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryExchange(global::System.IntPtr pExchange, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryExchange((pExchange == global::System.IntPtr.Zero) ? null : new CThostFtdcExchangeField(pExchange, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryProduct(global::System.IntPtr pProduct, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryProduct((pProduct == global::System.IntPtr.Zero) ? null : new CThostFtdcProductField(pProduct, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInstrument(global::System.IntPtr pInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInstrument((pInstrument == global::System.IntPtr.Zero) ? null : new CThostFtdcInstrumentField(pInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryDepthMarketData(global::System.IntPtr pDepthMarketData, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryDepthMarketData((pDepthMarketData == global::System.IntPtr.Zero) ? null : new CThostFtdcDepthMarketDataField(pDepthMarketData, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQrySettlementInfo(global::System.IntPtr pSettlementInfo, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQrySettlementInfo((pSettlementInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcSettlementInfoField(pSettlementInfo, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTransferBank(global::System.IntPtr pTransferBank, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTransferBank((pTransferBank == global::System.IntPtr.Zero) ? null : new CThostFtdcTransferBankField(pTransferBank, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInvestorPositionDetail(global::System.IntPtr pInvestorPositionDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInvestorPositionDetail((pInvestorPositionDetail == global::System.IntPtr.Zero) ? null : new CThostFtdcInvestorPositionDetailField(pInvestorPositionDetail, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryNotice(global::System.IntPtr pNotice, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryNotice((pNotice == global::System.IntPtr.Zero) ? null : new CThostFtdcNoticeField(pNotice, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQrySettlementInfoConfirm(global::System.IntPtr pSettlementInfoConfirm, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQrySettlementInfoConfirm((pSettlementInfoConfirm == global::System.IntPtr.Zero) ? null : new CThostFtdcSettlementInfoConfirmField(pSettlementInfoConfirm, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInvestorPositionCombineDetail(global::System.IntPtr pInvestorPositionCombineDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInvestorPositionCombineDetail((pInvestorPositionCombineDetail == global::System.IntPtr.Zero) ? null : new CThostFtdcInvestorPositionCombineDetailField(pInvestorPositionCombineDetail, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryCFMMCTradingAccountKey(global::System.IntPtr pCFMMCTradingAccountKey, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryCFMMCTradingAccountKey((pCFMMCTradingAccountKey == global::System.IntPtr.Zero) ? null : new CThostFtdcCFMMCTradingAccountKeyField(pCFMMCTradingAccountKey, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryEWarrantOffset(global::System.IntPtr pEWarrantOffset, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryEWarrantOffset((pEWarrantOffset == global::System.IntPtr.Zero) ? null : new CThostFtdcEWarrantOffsetField(pEWarrantOffset, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInvestorProductGroupMargin(global::System.IntPtr pInvestorProductGroupMargin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInvestorProductGroupMargin((pInvestorProductGroupMargin == global::System.IntPtr.Zero) ? null : new CThostFtdcInvestorProductGroupMarginField(pInvestorProductGroupMargin, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryExchangeMarginRate(global::System.IntPtr pExchangeMarginRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryExchangeMarginRate((pExchangeMarginRate == global::System.IntPtr.Zero) ? null : new CThostFtdcExchangeMarginRateField(pExchangeMarginRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryExchangeMarginRateAdjust(global::System.IntPtr pExchangeMarginRateAdjust, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryExchangeMarginRateAdjust((pExchangeMarginRateAdjust == global::System.IntPtr.Zero) ? null : new CThostFtdcExchangeMarginRateAdjustField(pExchangeMarginRateAdjust, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryExchangeRate(global::System.IntPtr pExchangeRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryExchangeRate((pExchangeRate == global::System.IntPtr.Zero) ? null : new CThostFtdcExchangeRateField(pExchangeRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQrySecAgentACIDMap(global::System.IntPtr pSecAgentACIDMap, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQrySecAgentACIDMap((pSecAgentACIDMap == global::System.IntPtr.Zero) ? null : new CThostFtdcSecAgentACIDMapField(pSecAgentACIDMap, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryProductExchRate(global::System.IntPtr pProductExchRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryProductExchRate((pProductExchRate == global::System.IntPtr.Zero) ? null : new CThostFtdcProductExchRateField(pProductExchRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryProductGroup(global::System.IntPtr pProductGroup, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryProductGroup((pProductGroup == global::System.IntPtr.Zero) ? null : new CThostFtdcProductGroupField(pProductGroup, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryMMInstrumentCommissionRate(global::System.IntPtr pMMInstrumentCommissionRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryMMInstrumentCommissionRate((pMMInstrumentCommissionRate == global::System.IntPtr.Zero) ? null : new CThostFtdcMMInstrumentCommissionRateField(pMMInstrumentCommissionRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryMMOptionInstrCommRate(global::System.IntPtr pMMOptionInstrCommRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryMMOptionInstrCommRate((pMMOptionInstrCommRate == global::System.IntPtr.Zero) ? null : new CThostFtdcMMOptionInstrCommRateField(pMMOptionInstrCommRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInstrumentOrderCommRate(global::System.IntPtr pInstrumentOrderCommRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInstrumentOrderCommRate((pInstrumentOrderCommRate == global::System.IntPtr.Zero) ? null : new CThostFtdcInstrumentOrderCommRateField(pInstrumentOrderCommRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQrySecAgentTradingAccount(global::System.IntPtr pTradingAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQrySecAgentTradingAccount((pTradingAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcTradingAccountField(pTradingAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQrySecAgentCheckMode(global::System.IntPtr pSecAgentCheckMode, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQrySecAgentCheckMode((pSecAgentCheckMode == global::System.IntPtr.Zero) ? null : new CThostFtdcSecAgentCheckModeField(pSecAgentCheckMode, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQrySecAgentTradeInfo(global::System.IntPtr pSecAgentTradeInfo, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQrySecAgentTradeInfo((pSecAgentTradeInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcSecAgentTradeInfoField(pSecAgentTradeInfo, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryOptionInstrTradeCost(global::System.IntPtr pOptionInstrTradeCost, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryOptionInstrTradeCost((pOptionInstrTradeCost == global::System.IntPtr.Zero) ? null : new CThostFtdcOptionInstrTradeCostField(pOptionInstrTradeCost, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryOptionInstrCommRate(global::System.IntPtr pOptionInstrCommRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryOptionInstrCommRate((pOptionInstrCommRate == global::System.IntPtr.Zero) ? null : new CThostFtdcOptionInstrCommRateField(pOptionInstrCommRate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryExecOrder(global::System.IntPtr pExecOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryExecOrder((pExecOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcExecOrderField(pExecOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryForQuote(global::System.IntPtr pForQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryForQuote((pForQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcForQuoteField(pForQuote, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryQuote(global::System.IntPtr pQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryQuote((pQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcQuoteField(pQuote, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryOptionSelfClose(global::System.IntPtr pOptionSelfClose, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryOptionSelfClose((pOptionSelfClose == global::System.IntPtr.Zero) ? null : new CThostFtdcOptionSelfCloseField(pOptionSelfClose, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInvestUnit(global::System.IntPtr pInvestUnit, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInvestUnit((pInvestUnit == global::System.IntPtr.Zero) ? null : new CThostFtdcInvestUnitField(pInvestUnit, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryCombInstrumentGuard(global::System.IntPtr pCombInstrumentGuard, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryCombInstrumentGuard((pCombInstrumentGuard == global::System.IntPtr.Zero) ? null : new CThostFtdcCombInstrumentGuardField(pCombInstrumentGuard, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryCombAction(global::System.IntPtr pCombAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryCombAction((pCombAction == global::System.IntPtr.Zero) ? null : new CThostFtdcCombActionField(pCombAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTransferSerial(global::System.IntPtr pTransferSerial, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTransferSerial((pTransferSerial == global::System.IntPtr.Zero) ? null : new CThostFtdcTransferSerialField(pTransferSerial, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryAccountregister(global::System.IntPtr pAccountregister, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryAccountregister((pAccountregister == global::System.IntPtr.Zero) ? null : new CThostFtdcAccountregisterField(pAccountregister, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspError(global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspError((pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRtnOrder(global::System.IntPtr pOrder) {
    OnRtnOrder((pOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcOrderField(pOrder, false));
  }

  private void SwigDirectorOnRtnTrade(global::System.IntPtr pTrade) {
    OnRtnTrade((pTrade == global::System.IntPtr.Zero) ? null : new CThostFtdcTradeField(pTrade, false));
  }

  private void SwigDirectorOnErrRtnOrderInsert(global::System.IntPtr pInputOrder, global::System.IntPtr pRspInfo) {
    OnErrRtnOrderInsert((pInputOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOrderField(pInputOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnOrderAction(global::System.IntPtr pOrderAction, global::System.IntPtr pRspInfo) {
    OnErrRtnOrderAction((pOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcOrderActionField(pOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnRtnInstrumentStatus(global::System.IntPtr pInstrumentStatus) {
    OnRtnInstrumentStatus((pInstrumentStatus == global::System.IntPtr.Zero) ? null : new CThostFtdcInstrumentStatusField(pInstrumentStatus, false));
  }

  private void SwigDirectorOnRtnBulletin(global::System.IntPtr pBulletin) {
    OnRtnBulletin((pBulletin == global::System.IntPtr.Zero) ? null : new CThostFtdcBulletinField(pBulletin, false));
  }

  private void SwigDirectorOnRtnTradingNotice(global::System.IntPtr pTradingNoticeInfo) {
    OnRtnTradingNotice((pTradingNoticeInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcTradingNoticeInfoField(pTradingNoticeInfo, false));
  }

  private void SwigDirectorOnRtnErrorConditionalOrder(global::System.IntPtr pErrorConditionalOrder) {
    OnRtnErrorConditionalOrder((pErrorConditionalOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcErrorConditionalOrderField(pErrorConditionalOrder, false));
  }

  private void SwigDirectorOnRtnExecOrder(global::System.IntPtr pExecOrder) {
    OnRtnExecOrder((pExecOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcExecOrderField(pExecOrder, false));
  }

  private void SwigDirectorOnErrRtnExecOrderInsert(global::System.IntPtr pInputExecOrder, global::System.IntPtr pRspInfo) {
    OnErrRtnExecOrderInsert((pInputExecOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcInputExecOrderField(pInputExecOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnExecOrderAction(global::System.IntPtr pExecOrderAction, global::System.IntPtr pRspInfo) {
    OnErrRtnExecOrderAction((pExecOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcExecOrderActionField(pExecOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnForQuoteInsert(global::System.IntPtr pInputForQuote, global::System.IntPtr pRspInfo) {
    OnErrRtnForQuoteInsert((pInputForQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcInputForQuoteField(pInputForQuote, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnRtnQuote(global::System.IntPtr pQuote) {
    OnRtnQuote((pQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcQuoteField(pQuote, false));
  }

  private void SwigDirectorOnErrRtnQuoteInsert(global::System.IntPtr pInputQuote, global::System.IntPtr pRspInfo) {
    OnErrRtnQuoteInsert((pInputQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcInputQuoteField(pInputQuote, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnQuoteAction(global::System.IntPtr pQuoteAction, global::System.IntPtr pRspInfo) {
    OnErrRtnQuoteAction((pQuoteAction == global::System.IntPtr.Zero) ? null : new CThostFtdcQuoteActionField(pQuoteAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnRtnForQuoteRsp(global::System.IntPtr pForQuoteRsp) {
    OnRtnForQuoteRsp((pForQuoteRsp == global::System.IntPtr.Zero) ? null : new CThostFtdcForQuoteRspField(pForQuoteRsp, false));
  }

  private void SwigDirectorOnRtnCFMMCTradingAccountToken(global::System.IntPtr pCFMMCTradingAccountToken) {
    OnRtnCFMMCTradingAccountToken((pCFMMCTradingAccountToken == global::System.IntPtr.Zero) ? null : new CThostFtdcCFMMCTradingAccountTokenField(pCFMMCTradingAccountToken, false));
  }

  private void SwigDirectorOnErrRtnBatchOrderAction(global::System.IntPtr pBatchOrderAction, global::System.IntPtr pRspInfo) {
    OnErrRtnBatchOrderAction((pBatchOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcBatchOrderActionField(pBatchOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnRtnOptionSelfClose(global::System.IntPtr pOptionSelfClose) {
    OnRtnOptionSelfClose((pOptionSelfClose == global::System.IntPtr.Zero) ? null : new CThostFtdcOptionSelfCloseField(pOptionSelfClose, false));
  }

  private void SwigDirectorOnErrRtnOptionSelfCloseInsert(global::System.IntPtr pInputOptionSelfClose, global::System.IntPtr pRspInfo) {
    OnErrRtnOptionSelfCloseInsert((pInputOptionSelfClose == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOptionSelfCloseField(pInputOptionSelfClose, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnOptionSelfCloseAction(global::System.IntPtr pOptionSelfCloseAction, global::System.IntPtr pRspInfo) {
    OnErrRtnOptionSelfCloseAction((pOptionSelfCloseAction == global::System.IntPtr.Zero) ? null : new CThostFtdcOptionSelfCloseActionField(pOptionSelfCloseAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnRtnCombAction(global::System.IntPtr pCombAction) {
    OnRtnCombAction((pCombAction == global::System.IntPtr.Zero) ? null : new CThostFtdcCombActionField(pCombAction, false));
  }

  private void SwigDirectorOnErrRtnCombActionInsert(global::System.IntPtr pInputCombAction, global::System.IntPtr pRspInfo) {
    OnErrRtnCombActionInsert((pInputCombAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputCombActionField(pInputCombAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnRspQryContractBank(global::System.IntPtr pContractBank, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryContractBank((pContractBank == global::System.IntPtr.Zero) ? null : new CThostFtdcContractBankField(pContractBank, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryParkedOrder(global::System.IntPtr pParkedOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryParkedOrder((pParkedOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcParkedOrderField(pParkedOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryParkedOrderAction(global::System.IntPtr pParkedOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryParkedOrderAction((pParkedOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcParkedOrderActionField(pParkedOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTradingNotice(global::System.IntPtr pTradingNotice, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTradingNotice((pTradingNotice == global::System.IntPtr.Zero) ? null : new CThostFtdcTradingNoticeField(pTradingNotice, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryBrokerTradingParams(global::System.IntPtr pBrokerTradingParams, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryBrokerTradingParams((pBrokerTradingParams == global::System.IntPtr.Zero) ? null : new CThostFtdcBrokerTradingParamsField(pBrokerTradingParams, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryBrokerTradingAlgos(global::System.IntPtr pBrokerTradingAlgos, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryBrokerTradingAlgos((pBrokerTradingAlgos == global::System.IntPtr.Zero) ? null : new CThostFtdcBrokerTradingAlgosField(pBrokerTradingAlgos, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryCFMMCTradingAccountToken(global::System.IntPtr pQueryCFMMCTradingAccountToken, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryCFMMCTradingAccountToken((pQueryCFMMCTradingAccountToken == global::System.IntPtr.Zero) ? null : new CThostFtdcQueryCFMMCTradingAccountTokenField(pQueryCFMMCTradingAccountToken, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRtnFromBankToFutureByBank(global::System.IntPtr pRspTransfer) {
    OnRtnFromBankToFutureByBank((pRspTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcRspTransferField(pRspTransfer, false));
  }

  private void SwigDirectorOnRtnFromFutureToBankByBank(global::System.IntPtr pRspTransfer) {
    OnRtnFromFutureToBankByBank((pRspTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcRspTransferField(pRspTransfer, false));
  }

  private void SwigDirectorOnRtnRepealFromBankToFutureByBank(global::System.IntPtr pRspRepeal) {
    OnRtnRepealFromBankToFutureByBank((pRspRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcRspRepealField(pRspRepeal, false));
  }

  private void SwigDirectorOnRtnRepealFromFutureToBankByBank(global::System.IntPtr pRspRepeal) {
    OnRtnRepealFromFutureToBankByBank((pRspRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcRspRepealField(pRspRepeal, false));
  }

  private void SwigDirectorOnRtnFromBankToFutureByFuture(global::System.IntPtr pRspTransfer) {
    OnRtnFromBankToFutureByFuture((pRspTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcRspTransferField(pRspTransfer, false));
  }

  private void SwigDirectorOnRtnFromFutureToBankByFuture(global::System.IntPtr pRspTransfer) {
    OnRtnFromFutureToBankByFuture((pRspTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcRspTransferField(pRspTransfer, false));
  }

  private void SwigDirectorOnRtnRepealFromBankToFutureByFutureManual(global::System.IntPtr pRspRepeal) {
    OnRtnRepealFromBankToFutureByFutureManual((pRspRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcRspRepealField(pRspRepeal, false));
  }

  private void SwigDirectorOnRtnRepealFromFutureToBankByFutureManual(global::System.IntPtr pRspRepeal) {
    OnRtnRepealFromFutureToBankByFutureManual((pRspRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcRspRepealField(pRspRepeal, false));
  }

  private void SwigDirectorOnRtnQueryBankBalanceByFuture(global::System.IntPtr pNotifyQueryAccount) {
    OnRtnQueryBankBalanceByFuture((pNotifyQueryAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcNotifyQueryAccountField(pNotifyQueryAccount, false));
  }

  private void SwigDirectorOnErrRtnBankToFutureByFuture(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo) {
    OnErrRtnBankToFutureByFuture((pReqTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcReqTransferField(pReqTransfer, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnFutureToBankByFuture(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo) {
    OnErrRtnFutureToBankByFuture((pReqTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcReqTransferField(pReqTransfer, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnRepealBankToFutureByFutureManual(global::System.IntPtr pReqRepeal, global::System.IntPtr pRspInfo) {
    OnErrRtnRepealBankToFutureByFutureManual((pReqRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcReqRepealField(pReqRepeal, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnRepealFutureToBankByFutureManual(global::System.IntPtr pReqRepeal, global::System.IntPtr pRspInfo) {
    OnErrRtnRepealFutureToBankByFutureManual((pReqRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcReqRepealField(pReqRepeal, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnErrRtnQueryBankBalanceByFuture(global::System.IntPtr pReqQueryAccount, global::System.IntPtr pRspInfo) {
    OnErrRtnQueryBankBalanceByFuture((pReqQueryAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcReqQueryAccountField(pReqQueryAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false));
  }

  private void SwigDirectorOnRtnRepealFromBankToFutureByFuture(global::System.IntPtr pRspRepeal) {
    OnRtnRepealFromBankToFutureByFuture((pRspRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcRspRepealField(pRspRepeal, false));
  }

  private void SwigDirectorOnRtnRepealFromFutureToBankByFuture(global::System.IntPtr pRspRepeal) {
    OnRtnRepealFromFutureToBankByFuture((pRspRepeal == global::System.IntPtr.Zero) ? null : new CThostFtdcRspRepealField(pRspRepeal, false));
  }

  private void SwigDirectorOnRspFromBankToFutureByFuture(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspFromBankToFutureByFuture((pReqTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcReqTransferField(pReqTransfer, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspFromFutureToBankByFuture(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspFromFutureToBankByFuture((pReqTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcReqTransferField(pReqTransfer, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryBankAccountMoneyByFuture(global::System.IntPtr pReqQueryAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryBankAccountMoneyByFuture((pReqQueryAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcReqQueryAccountField(pReqQueryAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRtnOpenAccountByBank(global::System.IntPtr pOpenAccount) {
    OnRtnOpenAccountByBank((pOpenAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcOpenAccountField(pOpenAccount, false));
  }

  private void SwigDirectorOnRtnCancelAccountByBank(global::System.IntPtr pCancelAccount) {
    OnRtnCancelAccountByBank((pCancelAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcCancelAccountField(pCancelAccount, false));
  }

  private void SwigDirectorOnRtnChangeAccountByBank(global::System.IntPtr pChangeAccount) {
    OnRtnChangeAccountByBank((pChangeAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcChangeAccountField(pChangeAccount, false));
  }

  public delegate void SwigDelegateCThostFtdcTraderSpi_0();
  public delegate void SwigDelegateCThostFtdcTraderSpi_1(int nReason);
  public delegate void SwigDelegateCThostFtdcTraderSpi_2(int nTimeLapse);
  public delegate void SwigDelegateCThostFtdcTraderSpi_3(global::System.IntPtr pRspAuthenticateField, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_4(global::System.IntPtr pRspUserLogin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_5(global::System.IntPtr pUserLogout, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_6(global::System.IntPtr pUserPasswordUpdate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_7(global::System.IntPtr pTradingAccountPasswordUpdate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_8(global::System.IntPtr pRspUserAuthMethod, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_9(global::System.IntPtr pRspGenUserCaptcha, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_10(global::System.IntPtr pRspGenUserText, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_11(global::System.IntPtr pInputOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_12(global::System.IntPtr pParkedOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_13(global::System.IntPtr pParkedOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_14(global::System.IntPtr pInputOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_15(global::System.IntPtr pQueryMaxOrderVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_16(global::System.IntPtr pSettlementInfoConfirm, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_17(global::System.IntPtr pRemoveParkedOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_18(global::System.IntPtr pRemoveParkedOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_19(global::System.IntPtr pInputExecOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_20(global::System.IntPtr pInputExecOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_21(global::System.IntPtr pInputForQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_22(global::System.IntPtr pInputQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_23(global::System.IntPtr pInputQuoteAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_24(global::System.IntPtr pInputBatchOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_25(global::System.IntPtr pInputOptionSelfClose, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_26(global::System.IntPtr pInputOptionSelfCloseAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_27(global::System.IntPtr pInputCombAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_28(global::System.IntPtr pOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_29(global::System.IntPtr pTrade, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_30(global::System.IntPtr pInvestorPosition, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_31(global::System.IntPtr pTradingAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_32(global::System.IntPtr pInvestor, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_33(global::System.IntPtr pTradingCode, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_34(global::System.IntPtr pInstrumentMarginRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_35(global::System.IntPtr pInstrumentCommissionRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_36(global::System.IntPtr pExchange, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_37(global::System.IntPtr pProduct, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_38(global::System.IntPtr pInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_39(global::System.IntPtr pDepthMarketData, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_40(global::System.IntPtr pSettlementInfo, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_41(global::System.IntPtr pTransferBank, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_42(global::System.IntPtr pInvestorPositionDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_43(global::System.IntPtr pNotice, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_44(global::System.IntPtr pSettlementInfoConfirm, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_45(global::System.IntPtr pInvestorPositionCombineDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_46(global::System.IntPtr pCFMMCTradingAccountKey, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_47(global::System.IntPtr pEWarrantOffset, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_48(global::System.IntPtr pInvestorProductGroupMargin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_49(global::System.IntPtr pExchangeMarginRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_50(global::System.IntPtr pExchangeMarginRateAdjust, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_51(global::System.IntPtr pExchangeRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_52(global::System.IntPtr pSecAgentACIDMap, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_53(global::System.IntPtr pProductExchRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_54(global::System.IntPtr pProductGroup, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_55(global::System.IntPtr pMMInstrumentCommissionRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_56(global::System.IntPtr pMMOptionInstrCommRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_57(global::System.IntPtr pInstrumentOrderCommRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_58(global::System.IntPtr pTradingAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_59(global::System.IntPtr pSecAgentCheckMode, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_60(global::System.IntPtr pSecAgentTradeInfo, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_61(global::System.IntPtr pOptionInstrTradeCost, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_62(global::System.IntPtr pOptionInstrCommRate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_63(global::System.IntPtr pExecOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_64(global::System.IntPtr pForQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_65(global::System.IntPtr pQuote, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_66(global::System.IntPtr pOptionSelfClose, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_67(global::System.IntPtr pInvestUnit, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_68(global::System.IntPtr pCombInstrumentGuard, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_69(global::System.IntPtr pCombAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_70(global::System.IntPtr pTransferSerial, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_71(global::System.IntPtr pAccountregister, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_72(global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_73(global::System.IntPtr pOrder);
  public delegate void SwigDelegateCThostFtdcTraderSpi_74(global::System.IntPtr pTrade);
  public delegate void SwigDelegateCThostFtdcTraderSpi_75(global::System.IntPtr pInputOrder, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_76(global::System.IntPtr pOrderAction, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_77(global::System.IntPtr pInstrumentStatus);
  public delegate void SwigDelegateCThostFtdcTraderSpi_78(global::System.IntPtr pBulletin);
  public delegate void SwigDelegateCThostFtdcTraderSpi_79(global::System.IntPtr pTradingNoticeInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_80(global::System.IntPtr pErrorConditionalOrder);
  public delegate void SwigDelegateCThostFtdcTraderSpi_81(global::System.IntPtr pExecOrder);
  public delegate void SwigDelegateCThostFtdcTraderSpi_82(global::System.IntPtr pInputExecOrder, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_83(global::System.IntPtr pExecOrderAction, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_84(global::System.IntPtr pInputForQuote, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_85(global::System.IntPtr pQuote);
  public delegate void SwigDelegateCThostFtdcTraderSpi_86(global::System.IntPtr pInputQuote, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_87(global::System.IntPtr pQuoteAction, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_88(global::System.IntPtr pForQuoteRsp);
  public delegate void SwigDelegateCThostFtdcTraderSpi_89(global::System.IntPtr pCFMMCTradingAccountToken);
  public delegate void SwigDelegateCThostFtdcTraderSpi_90(global::System.IntPtr pBatchOrderAction, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_91(global::System.IntPtr pOptionSelfClose);
  public delegate void SwigDelegateCThostFtdcTraderSpi_92(global::System.IntPtr pInputOptionSelfClose, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_93(global::System.IntPtr pOptionSelfCloseAction, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_94(global::System.IntPtr pCombAction);
  public delegate void SwigDelegateCThostFtdcTraderSpi_95(global::System.IntPtr pInputCombAction, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_96(global::System.IntPtr pContractBank, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_97(global::System.IntPtr pParkedOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_98(global::System.IntPtr pParkedOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_99(global::System.IntPtr pTradingNotice, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_100(global::System.IntPtr pBrokerTradingParams, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_101(global::System.IntPtr pBrokerTradingAlgos, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_102(global::System.IntPtr pQueryCFMMCTradingAccountToken, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_103(global::System.IntPtr pRspTransfer);
  public delegate void SwigDelegateCThostFtdcTraderSpi_104(global::System.IntPtr pRspTransfer);
  public delegate void SwigDelegateCThostFtdcTraderSpi_105(global::System.IntPtr pRspRepeal);
  public delegate void SwigDelegateCThostFtdcTraderSpi_106(global::System.IntPtr pRspRepeal);
  public delegate void SwigDelegateCThostFtdcTraderSpi_107(global::System.IntPtr pRspTransfer);
  public delegate void SwigDelegateCThostFtdcTraderSpi_108(global::System.IntPtr pRspTransfer);
  public delegate void SwigDelegateCThostFtdcTraderSpi_109(global::System.IntPtr pRspRepeal);
  public delegate void SwigDelegateCThostFtdcTraderSpi_110(global::System.IntPtr pRspRepeal);
  public delegate void SwigDelegateCThostFtdcTraderSpi_111(global::System.IntPtr pNotifyQueryAccount);
  public delegate void SwigDelegateCThostFtdcTraderSpi_112(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_113(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_114(global::System.IntPtr pReqRepeal, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_115(global::System.IntPtr pReqRepeal, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_116(global::System.IntPtr pReqQueryAccount, global::System.IntPtr pRspInfo);
  public delegate void SwigDelegateCThostFtdcTraderSpi_117(global::System.IntPtr pRspRepeal);
  public delegate void SwigDelegateCThostFtdcTraderSpi_118(global::System.IntPtr pRspRepeal);
  public delegate void SwigDelegateCThostFtdcTraderSpi_119(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_120(global::System.IntPtr pReqTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_121(global::System.IntPtr pReqQueryAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcTraderSpi_122(global::System.IntPtr pOpenAccount);
  public delegate void SwigDelegateCThostFtdcTraderSpi_123(global::System.IntPtr pCancelAccount);
  public delegate void SwigDelegateCThostFtdcTraderSpi_124(global::System.IntPtr pChangeAccount);

  private SwigDelegateCThostFtdcTraderSpi_0 swigDelegate0;
  private SwigDelegateCThostFtdcTraderSpi_1 swigDelegate1;
  private SwigDelegateCThostFtdcTraderSpi_2 swigDelegate2;
  private SwigDelegateCThostFtdcTraderSpi_3 swigDelegate3;
  private SwigDelegateCThostFtdcTraderSpi_4 swigDelegate4;
  private SwigDelegateCThostFtdcTraderSpi_5 swigDelegate5;
  private SwigDelegateCThostFtdcTraderSpi_6 swigDelegate6;
  private SwigDelegateCThostFtdcTraderSpi_7 swigDelegate7;
  private SwigDelegateCThostFtdcTraderSpi_8 swigDelegate8;
  private SwigDelegateCThostFtdcTraderSpi_9 swigDelegate9;
  private SwigDelegateCThostFtdcTraderSpi_10 swigDelegate10;
  private SwigDelegateCThostFtdcTraderSpi_11 swigDelegate11;
  private SwigDelegateCThostFtdcTraderSpi_12 swigDelegate12;
  private SwigDelegateCThostFtdcTraderSpi_13 swigDelegate13;
  private SwigDelegateCThostFtdcTraderSpi_14 swigDelegate14;
  private SwigDelegateCThostFtdcTraderSpi_15 swigDelegate15;
  private SwigDelegateCThostFtdcTraderSpi_16 swigDelegate16;
  private SwigDelegateCThostFtdcTraderSpi_17 swigDelegate17;
  private SwigDelegateCThostFtdcTraderSpi_18 swigDelegate18;
  private SwigDelegateCThostFtdcTraderSpi_19 swigDelegate19;
  private SwigDelegateCThostFtdcTraderSpi_20 swigDelegate20;
  private SwigDelegateCThostFtdcTraderSpi_21 swigDelegate21;
  private SwigDelegateCThostFtdcTraderSpi_22 swigDelegate22;
  private SwigDelegateCThostFtdcTraderSpi_23 swigDelegate23;
  private SwigDelegateCThostFtdcTraderSpi_24 swigDelegate24;
  private SwigDelegateCThostFtdcTraderSpi_25 swigDelegate25;
  private SwigDelegateCThostFtdcTraderSpi_26 swigDelegate26;
  private SwigDelegateCThostFtdcTraderSpi_27 swigDelegate27;
  private SwigDelegateCThostFtdcTraderSpi_28 swigDelegate28;
  private SwigDelegateCThostFtdcTraderSpi_29 swigDelegate29;
  private SwigDelegateCThostFtdcTraderSpi_30 swigDelegate30;
  private SwigDelegateCThostFtdcTraderSpi_31 swigDelegate31;
  private SwigDelegateCThostFtdcTraderSpi_32 swigDelegate32;
  private SwigDelegateCThostFtdcTraderSpi_33 swigDelegate33;
  private SwigDelegateCThostFtdcTraderSpi_34 swigDelegate34;
  private SwigDelegateCThostFtdcTraderSpi_35 swigDelegate35;
  private SwigDelegateCThostFtdcTraderSpi_36 swigDelegate36;
  private SwigDelegateCThostFtdcTraderSpi_37 swigDelegate37;
  private SwigDelegateCThostFtdcTraderSpi_38 swigDelegate38;
  private SwigDelegateCThostFtdcTraderSpi_39 swigDelegate39;
  private SwigDelegateCThostFtdcTraderSpi_40 swigDelegate40;
  private SwigDelegateCThostFtdcTraderSpi_41 swigDelegate41;
  private SwigDelegateCThostFtdcTraderSpi_42 swigDelegate42;
  private SwigDelegateCThostFtdcTraderSpi_43 swigDelegate43;
  private SwigDelegateCThostFtdcTraderSpi_44 swigDelegate44;
  private SwigDelegateCThostFtdcTraderSpi_45 swigDelegate45;
  private SwigDelegateCThostFtdcTraderSpi_46 swigDelegate46;
  private SwigDelegateCThostFtdcTraderSpi_47 swigDelegate47;
  private SwigDelegateCThostFtdcTraderSpi_48 swigDelegate48;
  private SwigDelegateCThostFtdcTraderSpi_49 swigDelegate49;
  private SwigDelegateCThostFtdcTraderSpi_50 swigDelegate50;
  private SwigDelegateCThostFtdcTraderSpi_51 swigDelegate51;
  private SwigDelegateCThostFtdcTraderSpi_52 swigDelegate52;
  private SwigDelegateCThostFtdcTraderSpi_53 swigDelegate53;
  private SwigDelegateCThostFtdcTraderSpi_54 swigDelegate54;
  private SwigDelegateCThostFtdcTraderSpi_55 swigDelegate55;
  private SwigDelegateCThostFtdcTraderSpi_56 swigDelegate56;
  private SwigDelegateCThostFtdcTraderSpi_57 swigDelegate57;
  private SwigDelegateCThostFtdcTraderSpi_58 swigDelegate58;
  private SwigDelegateCThostFtdcTraderSpi_59 swigDelegate59;
  private SwigDelegateCThostFtdcTraderSpi_60 swigDelegate60;
  private SwigDelegateCThostFtdcTraderSpi_61 swigDelegate61;
  private SwigDelegateCThostFtdcTraderSpi_62 swigDelegate62;
  private SwigDelegateCThostFtdcTraderSpi_63 swigDelegate63;
  private SwigDelegateCThostFtdcTraderSpi_64 swigDelegate64;
  private SwigDelegateCThostFtdcTraderSpi_65 swigDelegate65;
  private SwigDelegateCThostFtdcTraderSpi_66 swigDelegate66;
  private SwigDelegateCThostFtdcTraderSpi_67 swigDelegate67;
  private SwigDelegateCThostFtdcTraderSpi_68 swigDelegate68;
  private SwigDelegateCThostFtdcTraderSpi_69 swigDelegate69;
  private SwigDelegateCThostFtdcTraderSpi_70 swigDelegate70;
  private SwigDelegateCThostFtdcTraderSpi_71 swigDelegate71;
  private SwigDelegateCThostFtdcTraderSpi_72 swigDelegate72;
  private SwigDelegateCThostFtdcTraderSpi_73 swigDelegate73;
  private SwigDelegateCThostFtdcTraderSpi_74 swigDelegate74;
  private SwigDelegateCThostFtdcTraderSpi_75 swigDelegate75;
  private SwigDelegateCThostFtdcTraderSpi_76 swigDelegate76;
  private SwigDelegateCThostFtdcTraderSpi_77 swigDelegate77;
  private SwigDelegateCThostFtdcTraderSpi_78 swigDelegate78;
  private SwigDelegateCThostFtdcTraderSpi_79 swigDelegate79;
  private SwigDelegateCThostFtdcTraderSpi_80 swigDelegate80;
  private SwigDelegateCThostFtdcTraderSpi_81 swigDelegate81;
  private SwigDelegateCThostFtdcTraderSpi_82 swigDelegate82;
  private SwigDelegateCThostFtdcTraderSpi_83 swigDelegate83;
  private SwigDelegateCThostFtdcTraderSpi_84 swigDelegate84;
  private SwigDelegateCThostFtdcTraderSpi_85 swigDelegate85;
  private SwigDelegateCThostFtdcTraderSpi_86 swigDelegate86;
  private SwigDelegateCThostFtdcTraderSpi_87 swigDelegate87;
  private SwigDelegateCThostFtdcTraderSpi_88 swigDelegate88;
  private SwigDelegateCThostFtdcTraderSpi_89 swigDelegate89;
  private SwigDelegateCThostFtdcTraderSpi_90 swigDelegate90;
  private SwigDelegateCThostFtdcTraderSpi_91 swigDelegate91;
  private SwigDelegateCThostFtdcTraderSpi_92 swigDelegate92;
  private SwigDelegateCThostFtdcTraderSpi_93 swigDelegate93;
  private SwigDelegateCThostFtdcTraderSpi_94 swigDelegate94;
  private SwigDelegateCThostFtdcTraderSpi_95 swigDelegate95;
  private SwigDelegateCThostFtdcTraderSpi_96 swigDelegate96;
  private SwigDelegateCThostFtdcTraderSpi_97 swigDelegate97;
  private SwigDelegateCThostFtdcTraderSpi_98 swigDelegate98;
  private SwigDelegateCThostFtdcTraderSpi_99 swigDelegate99;
  private SwigDelegateCThostFtdcTraderSpi_100 swigDelegate100;
  private SwigDelegateCThostFtdcTraderSpi_101 swigDelegate101;
  private SwigDelegateCThostFtdcTraderSpi_102 swigDelegate102;
  private SwigDelegateCThostFtdcTraderSpi_103 swigDelegate103;
  private SwigDelegateCThostFtdcTraderSpi_104 swigDelegate104;
  private SwigDelegateCThostFtdcTraderSpi_105 swigDelegate105;
  private SwigDelegateCThostFtdcTraderSpi_106 swigDelegate106;
  private SwigDelegateCThostFtdcTraderSpi_107 swigDelegate107;
  private SwigDelegateCThostFtdcTraderSpi_108 swigDelegate108;
  private SwigDelegateCThostFtdcTraderSpi_109 swigDelegate109;
  private SwigDelegateCThostFtdcTraderSpi_110 swigDelegate110;
  private SwigDelegateCThostFtdcTraderSpi_111 swigDelegate111;
  private SwigDelegateCThostFtdcTraderSpi_112 swigDelegate112;
  private SwigDelegateCThostFtdcTraderSpi_113 swigDelegate113;
  private SwigDelegateCThostFtdcTraderSpi_114 swigDelegate114;
  private SwigDelegateCThostFtdcTraderSpi_115 swigDelegate115;
  private SwigDelegateCThostFtdcTraderSpi_116 swigDelegate116;
  private SwigDelegateCThostFtdcTraderSpi_117 swigDelegate117;
  private SwigDelegateCThostFtdcTraderSpi_118 swigDelegate118;
  private SwigDelegateCThostFtdcTraderSpi_119 swigDelegate119;
  private SwigDelegateCThostFtdcTraderSpi_120 swigDelegate120;
  private SwigDelegateCThostFtdcTraderSpi_121 swigDelegate121;
  private SwigDelegateCThostFtdcTraderSpi_122 swigDelegate122;
  private SwigDelegateCThostFtdcTraderSpi_123 swigDelegate123;
  private SwigDelegateCThostFtdcTraderSpi_124 swigDelegate124;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(CThostFtdcRspAuthenticateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(CThostFtdcRspUserLoginField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(CThostFtdcUserLogoutField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(CThostFtdcUserPasswordUpdateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(CThostFtdcTradingAccountPasswordUpdateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(CThostFtdcRspUserAuthMethodField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(CThostFtdcRspGenUserCaptchaField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(CThostFtdcRspGenUserTextField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(CThostFtdcInputOrderField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(CThostFtdcParkedOrderField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(CThostFtdcParkedOrderActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(CThostFtdcInputOrderActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(CThostFtdcQueryMaxOrderVolumeField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] { typeof(CThostFtdcSettlementInfoConfirmField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(CThostFtdcRemoveParkedOrderField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(CThostFtdcRemoveParkedOrderActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(CThostFtdcInputExecOrderField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(CThostFtdcInputExecOrderActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(CThostFtdcInputForQuoteField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(CThostFtdcInputQuoteField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(CThostFtdcInputQuoteActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(CThostFtdcInputBatchOrderActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(CThostFtdcInputOptionSelfCloseField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(CThostFtdcInputOptionSelfCloseActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(CThostFtdcInputCombActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes28 = new global::System.Type[] { typeof(CThostFtdcOrderField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes29 = new global::System.Type[] { typeof(CThostFtdcTradeField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes30 = new global::System.Type[] { typeof(CThostFtdcInvestorPositionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes31 = new global::System.Type[] { typeof(CThostFtdcTradingAccountField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes32 = new global::System.Type[] { typeof(CThostFtdcInvestorField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes33 = new global::System.Type[] { typeof(CThostFtdcTradingCodeField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes34 = new global::System.Type[] { typeof(CThostFtdcInstrumentMarginRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes35 = new global::System.Type[] { typeof(CThostFtdcInstrumentCommissionRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes36 = new global::System.Type[] { typeof(CThostFtdcExchangeField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes37 = new global::System.Type[] { typeof(CThostFtdcProductField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes38 = new global::System.Type[] { typeof(CThostFtdcInstrumentField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes39 = new global::System.Type[] { typeof(CThostFtdcDepthMarketDataField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes40 = new global::System.Type[] { typeof(CThostFtdcSettlementInfoField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes41 = new global::System.Type[] { typeof(CThostFtdcTransferBankField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes42 = new global::System.Type[] { typeof(CThostFtdcInvestorPositionDetailField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes43 = new global::System.Type[] { typeof(CThostFtdcNoticeField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes44 = new global::System.Type[] { typeof(CThostFtdcSettlementInfoConfirmField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes45 = new global::System.Type[] { typeof(CThostFtdcInvestorPositionCombineDetailField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes46 = new global::System.Type[] { typeof(CThostFtdcCFMMCTradingAccountKeyField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes47 = new global::System.Type[] { typeof(CThostFtdcEWarrantOffsetField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes48 = new global::System.Type[] { typeof(CThostFtdcInvestorProductGroupMarginField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes49 = new global::System.Type[] { typeof(CThostFtdcExchangeMarginRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes50 = new global::System.Type[] { typeof(CThostFtdcExchangeMarginRateAdjustField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes51 = new global::System.Type[] { typeof(CThostFtdcExchangeRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes52 = new global::System.Type[] { typeof(CThostFtdcSecAgentACIDMapField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes53 = new global::System.Type[] { typeof(CThostFtdcProductExchRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes54 = new global::System.Type[] { typeof(CThostFtdcProductGroupField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes55 = new global::System.Type[] { typeof(CThostFtdcMMInstrumentCommissionRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes56 = new global::System.Type[] { typeof(CThostFtdcMMOptionInstrCommRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes57 = new global::System.Type[] { typeof(CThostFtdcInstrumentOrderCommRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes58 = new global::System.Type[] { typeof(CThostFtdcTradingAccountField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes59 = new global::System.Type[] { typeof(CThostFtdcSecAgentCheckModeField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes60 = new global::System.Type[] { typeof(CThostFtdcSecAgentTradeInfoField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes61 = new global::System.Type[] { typeof(CThostFtdcOptionInstrTradeCostField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes62 = new global::System.Type[] { typeof(CThostFtdcOptionInstrCommRateField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes63 = new global::System.Type[] { typeof(CThostFtdcExecOrderField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes64 = new global::System.Type[] { typeof(CThostFtdcForQuoteField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes65 = new global::System.Type[] { typeof(CThostFtdcQuoteField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes66 = new global::System.Type[] { typeof(CThostFtdcOptionSelfCloseField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes67 = new global::System.Type[] { typeof(CThostFtdcInvestUnitField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes68 = new global::System.Type[] { typeof(CThostFtdcCombInstrumentGuardField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes69 = new global::System.Type[] { typeof(CThostFtdcCombActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes70 = new global::System.Type[] { typeof(CThostFtdcTransferSerialField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes71 = new global::System.Type[] { typeof(CThostFtdcAccountregisterField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes72 = new global::System.Type[] { typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes73 = new global::System.Type[] { typeof(CThostFtdcOrderField) };
  private static global::System.Type[] swigMethodTypes74 = new global::System.Type[] { typeof(CThostFtdcTradeField) };
  private static global::System.Type[] swigMethodTypes75 = new global::System.Type[] { typeof(CThostFtdcInputOrderField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes76 = new global::System.Type[] { typeof(CThostFtdcOrderActionField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes77 = new global::System.Type[] { typeof(CThostFtdcInstrumentStatusField) };
  private static global::System.Type[] swigMethodTypes78 = new global::System.Type[] { typeof(CThostFtdcBulletinField) };
  private static global::System.Type[] swigMethodTypes79 = new global::System.Type[] { typeof(CThostFtdcTradingNoticeInfoField) };
  private static global::System.Type[] swigMethodTypes80 = new global::System.Type[] { typeof(CThostFtdcErrorConditionalOrderField) };
  private static global::System.Type[] swigMethodTypes81 = new global::System.Type[] { typeof(CThostFtdcExecOrderField) };
  private static global::System.Type[] swigMethodTypes82 = new global::System.Type[] { typeof(CThostFtdcInputExecOrderField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes83 = new global::System.Type[] { typeof(CThostFtdcExecOrderActionField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes84 = new global::System.Type[] { typeof(CThostFtdcInputForQuoteField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes85 = new global::System.Type[] { typeof(CThostFtdcQuoteField) };
  private static global::System.Type[] swigMethodTypes86 = new global::System.Type[] { typeof(CThostFtdcInputQuoteField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes87 = new global::System.Type[] { typeof(CThostFtdcQuoteActionField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes88 = new global::System.Type[] { typeof(CThostFtdcForQuoteRspField) };
  private static global::System.Type[] swigMethodTypes89 = new global::System.Type[] { typeof(CThostFtdcCFMMCTradingAccountTokenField) };
  private static global::System.Type[] swigMethodTypes90 = new global::System.Type[] { typeof(CThostFtdcBatchOrderActionField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes91 = new global::System.Type[] { typeof(CThostFtdcOptionSelfCloseField) };
  private static global::System.Type[] swigMethodTypes92 = new global::System.Type[] { typeof(CThostFtdcInputOptionSelfCloseField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes93 = new global::System.Type[] { typeof(CThostFtdcOptionSelfCloseActionField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes94 = new global::System.Type[] { typeof(CThostFtdcCombActionField) };
  private static global::System.Type[] swigMethodTypes95 = new global::System.Type[] { typeof(CThostFtdcInputCombActionField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes96 = new global::System.Type[] { typeof(CThostFtdcContractBankField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes97 = new global::System.Type[] { typeof(CThostFtdcParkedOrderField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes98 = new global::System.Type[] { typeof(CThostFtdcParkedOrderActionField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes99 = new global::System.Type[] { typeof(CThostFtdcTradingNoticeField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes100 = new global::System.Type[] { typeof(CThostFtdcBrokerTradingParamsField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes101 = new global::System.Type[] { typeof(CThostFtdcBrokerTradingAlgosField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes102 = new global::System.Type[] { typeof(CThostFtdcQueryCFMMCTradingAccountTokenField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes103 = new global::System.Type[] { typeof(CThostFtdcRspTransferField) };
  private static global::System.Type[] swigMethodTypes104 = new global::System.Type[] { typeof(CThostFtdcRspTransferField) };
  private static global::System.Type[] swigMethodTypes105 = new global::System.Type[] { typeof(CThostFtdcRspRepealField) };
  private static global::System.Type[] swigMethodTypes106 = new global::System.Type[] { typeof(CThostFtdcRspRepealField) };
  private static global::System.Type[] swigMethodTypes107 = new global::System.Type[] { typeof(CThostFtdcRspTransferField) };
  private static global::System.Type[] swigMethodTypes108 = new global::System.Type[] { typeof(CThostFtdcRspTransferField) };
  private static global::System.Type[] swigMethodTypes109 = new global::System.Type[] { typeof(CThostFtdcRspRepealField) };
  private static global::System.Type[] swigMethodTypes110 = new global::System.Type[] { typeof(CThostFtdcRspRepealField) };
  private static global::System.Type[] swigMethodTypes111 = new global::System.Type[] { typeof(CThostFtdcNotifyQueryAccountField) };
  private static global::System.Type[] swigMethodTypes112 = new global::System.Type[] { typeof(CThostFtdcReqTransferField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes113 = new global::System.Type[] { typeof(CThostFtdcReqTransferField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes114 = new global::System.Type[] { typeof(CThostFtdcReqRepealField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes115 = new global::System.Type[] { typeof(CThostFtdcReqRepealField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes116 = new global::System.Type[] { typeof(CThostFtdcReqQueryAccountField), typeof(CThostFtdcRspInfoField) };
  private static global::System.Type[] swigMethodTypes117 = new global::System.Type[] { typeof(CThostFtdcRspRepealField) };
  private static global::System.Type[] swigMethodTypes118 = new global::System.Type[] { typeof(CThostFtdcRspRepealField) };
  private static global::System.Type[] swigMethodTypes119 = new global::System.Type[] { typeof(CThostFtdcReqTransferField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes120 = new global::System.Type[] { typeof(CThostFtdcReqTransferField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes121 = new global::System.Type[] { typeof(CThostFtdcReqQueryAccountField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes122 = new global::System.Type[] { typeof(CThostFtdcOpenAccountField) };
  private static global::System.Type[] swigMethodTypes123 = new global::System.Type[] { typeof(CThostFtdcCancelAccountField) };
  private static global::System.Type[] swigMethodTypes124 = new global::System.Type[] { typeof(CThostFtdcChangeAccountField) };
}
