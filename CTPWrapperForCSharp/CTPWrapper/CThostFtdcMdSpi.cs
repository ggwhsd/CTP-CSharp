//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CThostFtdcMdSpi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcMdSpi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcMdSpi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CThostFtdcMdSpi() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ctpthostmdapiPINVOKE.delete_CThostFtdcMdSpi(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void OnFrontConnected() {
    if (SwigDerivedClassHasMethod("OnFrontConnected", swigMethodTypes0)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnFrontConnectedSwigExplicitCThostFtdcMdSpi(swigCPtr); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnFrontConnected(swigCPtr);
  }

  public virtual void OnFrontDisconnected(int nReason) {
    if (SwigDerivedClassHasMethod("OnFrontDisconnected", swigMethodTypes1)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnFrontDisconnectedSwigExplicitCThostFtdcMdSpi(swigCPtr, nReason); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnFrontDisconnected(swigCPtr, nReason);
  }

  public virtual void OnHeartBeatWarning(int nTimeLapse) {
    if (SwigDerivedClassHasMethod("OnHeartBeatWarning", swigMethodTypes2)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnHeartBeatWarningSwigExplicitCThostFtdcMdSpi(swigCPtr, nTimeLapse); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnHeartBeatWarning(swigCPtr, nTimeLapse);
  }

  public virtual void OnRspUserLogin(CThostFtdcRspUserLoginField pRspUserLogin, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserLogin", swigMethodTypes3)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUserLoginSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcRspUserLoginField.getCPtr(pRspUserLogin), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUserLogin(swigCPtr, CThostFtdcRspUserLoginField.getCPtr(pRspUserLogin), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUserLogout(CThostFtdcUserLogoutField pUserLogout, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserLogout", swigMethodTypes4)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUserLogoutSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcUserLogoutField.getCPtr(pUserLogout), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUserLogout(swigCPtr, CThostFtdcUserLogoutField.getCPtr(pUserLogout), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField pMulticastInstrument, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryMulticastInstrument", swigMethodTypes5)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspQryMulticastInstrumentSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcMulticastInstrumentField.getCPtr(pMulticastInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspQryMulticastInstrument(swigCPtr, CThostFtdcMulticastInstrumentField.getCPtr(pMulticastInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspError(CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspError", swigMethodTypes6)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspErrorSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspError(swigCPtr, CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspSubMarketData(CThostFtdcSpecificInstrumentField pSpecificInstrument, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspSubMarketData", swigMethodTypes7)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspSubMarketDataSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspSubMarketData(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField pSpecificInstrument, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUnSubMarketData", swigMethodTypes8)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUnSubMarketDataSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUnSubMarketData(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField pSpecificInstrument, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspSubForQuoteRsp", swigMethodTypes9)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspSubForQuoteRspSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspSubForQuoteRsp(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField pSpecificInstrument, CThostFtdcRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUnSubForQuoteRsp", swigMethodTypes10)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUnSubForQuoteRspSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRspUnSubForQuoteRsp(swigCPtr, CThostFtdcSpecificInstrumentField.getCPtr(pSpecificInstrument), CThostFtdcRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRtnDepthMarketData(CThostFtdcDepthMarketDataField pDepthMarketData) {
    if (SwigDerivedClassHasMethod("OnRtnDepthMarketData", swigMethodTypes11)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRtnDepthMarketDataSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcDepthMarketDataField.getCPtr(pDepthMarketData)); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRtnDepthMarketData(swigCPtr, CThostFtdcDepthMarketDataField.getCPtr(pDepthMarketData));
  }

  public virtual void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField pForQuoteRsp) {
    if (SwigDerivedClassHasMethod("OnRtnForQuoteRsp", swigMethodTypes12)) ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRtnForQuoteRspSwigExplicitCThostFtdcMdSpi(swigCPtr, CThostFtdcForQuoteRspField.getCPtr(pForQuoteRsp)); else ctpthostmdapiPINVOKE.CThostFtdcMdSpi_OnRtnForQuoteRsp(swigCPtr, CThostFtdcForQuoteRspField.getCPtr(pForQuoteRsp));
  }

  public CThostFtdcMdSpi() : this(ctpthostmdapiPINVOKE.new_CThostFtdcMdSpi(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnFrontConnected", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCThostFtdcMdSpi_0(SwigDirectorOnFrontConnected);
    if (SwigDerivedClassHasMethod("OnFrontDisconnected", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCThostFtdcMdSpi_1(SwigDirectorOnFrontDisconnected);
    if (SwigDerivedClassHasMethod("OnHeartBeatWarning", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCThostFtdcMdSpi_2(SwigDirectorOnHeartBeatWarning);
    if (SwigDerivedClassHasMethod("OnRspUserLogin", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCThostFtdcMdSpi_3(SwigDirectorOnRspUserLogin);
    if (SwigDerivedClassHasMethod("OnRspUserLogout", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateCThostFtdcMdSpi_4(SwigDirectorOnRspUserLogout);
    if (SwigDerivedClassHasMethod("OnRspQryMulticastInstrument", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateCThostFtdcMdSpi_5(SwigDirectorOnRspQryMulticastInstrument);
    if (SwigDerivedClassHasMethod("OnRspError", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateCThostFtdcMdSpi_6(SwigDirectorOnRspError);
    if (SwigDerivedClassHasMethod("OnRspSubMarketData", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateCThostFtdcMdSpi_7(SwigDirectorOnRspSubMarketData);
    if (SwigDerivedClassHasMethod("OnRspUnSubMarketData", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateCThostFtdcMdSpi_8(SwigDirectorOnRspUnSubMarketData);
    if (SwigDerivedClassHasMethod("OnRspSubForQuoteRsp", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateCThostFtdcMdSpi_9(SwigDirectorOnRspSubForQuoteRsp);
    if (SwigDerivedClassHasMethod("OnRspUnSubForQuoteRsp", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateCThostFtdcMdSpi_10(SwigDirectorOnRspUnSubForQuoteRsp);
    if (SwigDerivedClassHasMethod("OnRtnDepthMarketData", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateCThostFtdcMdSpi_11(SwigDirectorOnRtnDepthMarketData);
    if (SwigDerivedClassHasMethod("OnRtnForQuoteRsp", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateCThostFtdcMdSpi_12(SwigDirectorOnRtnForQuoteRsp);
    ctpthostmdapiPINVOKE.CThostFtdcMdSpi_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CThostFtdcMdSpi));
    return hasDerivedMethod;
  }

  private void SwigDirectorOnFrontConnected() {
    OnFrontConnected();
  }

  private void SwigDirectorOnFrontDisconnected(int nReason) {
    OnFrontDisconnected(nReason);
  }

  private void SwigDirectorOnHeartBeatWarning(int nTimeLapse) {
    OnHeartBeatWarning(nTimeLapse);
  }

  private void SwigDirectorOnRspUserLogin(global::System.IntPtr pRspUserLogin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserLogin((pRspUserLogin == global::System.IntPtr.Zero) ? null : new CThostFtdcRspUserLoginField(pRspUserLogin, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUserLogout(global::System.IntPtr pUserLogout, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserLogout((pUserLogout == global::System.IntPtr.Zero) ? null : new CThostFtdcUserLogoutField(pUserLogout, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryMulticastInstrument(global::System.IntPtr pMulticastInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryMulticastInstrument((pMulticastInstrument == global::System.IntPtr.Zero) ? null : new CThostFtdcMulticastInstrumentField(pMulticastInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspError(global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspError((pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspSubMarketData(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspSubMarketData((pSpecificInstrument == global::System.IntPtr.Zero) ? null : new CThostFtdcSpecificInstrumentField(pSpecificInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUnSubMarketData(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUnSubMarketData((pSpecificInstrument == global::System.IntPtr.Zero) ? null : new CThostFtdcSpecificInstrumentField(pSpecificInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspSubForQuoteRsp(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspSubForQuoteRsp((pSpecificInstrument == global::System.IntPtr.Zero) ? null : new CThostFtdcSpecificInstrumentField(pSpecificInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUnSubForQuoteRsp(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUnSubForQuoteRsp((pSpecificInstrument == global::System.IntPtr.Zero) ? null : new CThostFtdcSpecificInstrumentField(pSpecificInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRtnDepthMarketData(global::System.IntPtr pDepthMarketData) {
    OnRtnDepthMarketData((pDepthMarketData == global::System.IntPtr.Zero) ? null : new CThostFtdcDepthMarketDataField(pDepthMarketData, false));
  }

  private void SwigDirectorOnRtnForQuoteRsp(global::System.IntPtr pForQuoteRsp) {
    OnRtnForQuoteRsp((pForQuoteRsp == global::System.IntPtr.Zero) ? null : new CThostFtdcForQuoteRspField(pForQuoteRsp, false));
  }

  public delegate void SwigDelegateCThostFtdcMdSpi_0();
  public delegate void SwigDelegateCThostFtdcMdSpi_1(int nReason);
  public delegate void SwigDelegateCThostFtdcMdSpi_2(int nTimeLapse);
  public delegate void SwigDelegateCThostFtdcMdSpi_3(global::System.IntPtr pRspUserLogin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_4(global::System.IntPtr pUserLogout, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_5(global::System.IntPtr pMulticastInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_6(global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_7(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_8(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_9(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_10(global::System.IntPtr pSpecificInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCThostFtdcMdSpi_11(global::System.IntPtr pDepthMarketData);
  public delegate void SwigDelegateCThostFtdcMdSpi_12(global::System.IntPtr pForQuoteRsp);

  private SwigDelegateCThostFtdcMdSpi_0 swigDelegate0;
  private SwigDelegateCThostFtdcMdSpi_1 swigDelegate1;
  private SwigDelegateCThostFtdcMdSpi_2 swigDelegate2;
  private SwigDelegateCThostFtdcMdSpi_3 swigDelegate3;
  private SwigDelegateCThostFtdcMdSpi_4 swigDelegate4;
  private SwigDelegateCThostFtdcMdSpi_5 swigDelegate5;
  private SwigDelegateCThostFtdcMdSpi_6 swigDelegate6;
  private SwigDelegateCThostFtdcMdSpi_7 swigDelegate7;
  private SwigDelegateCThostFtdcMdSpi_8 swigDelegate8;
  private SwigDelegateCThostFtdcMdSpi_9 swigDelegate9;
  private SwigDelegateCThostFtdcMdSpi_10 swigDelegate10;
  private SwigDelegateCThostFtdcMdSpi_11 swigDelegate11;
  private SwigDelegateCThostFtdcMdSpi_12 swigDelegate12;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(CThostFtdcRspUserLoginField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(CThostFtdcUserLogoutField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(CThostFtdcMulticastInstrumentField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(CThostFtdcSpecificInstrumentField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(CThostFtdcSpecificInstrumentField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(CThostFtdcSpecificInstrumentField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(CThostFtdcSpecificInstrumentField), typeof(CThostFtdcRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(CThostFtdcDepthMarketDataField) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(CThostFtdcForQuoteRspField) };
}
