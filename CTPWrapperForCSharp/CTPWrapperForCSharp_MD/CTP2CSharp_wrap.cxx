/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_ctpthostmdapi(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_ctpthostmdapi(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_ctpthostmdapi(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }
  };
}


#include "ThostFtdcMdApi.h"



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "CTP2CSharp_wrap.h"

SwigDirector_CThostFtdcMdSpi::SwigDirector_CThostFtdcMdSpi() : CThostFtdcMdSpi(), Swig::Director() {
  swig_init_callbacks();
}

void SwigDirector_CThostFtdcMdSpi::OnFrontConnected() {
  if (!swig_callbackOnFrontConnected) {
    CThostFtdcMdSpi::OnFrontConnected();
    return;
  } else {
    swig_callbackOnFrontConnected();
  }
}

void SwigDirector_CThostFtdcMdSpi::OnFrontDisconnected(int nReason) {
  int jnReason  ;
  
  if (!swig_callbackOnFrontDisconnected) {
    CThostFtdcMdSpi::OnFrontDisconnected(nReason);
    return;
  } else {
    jnReason = nReason;
    swig_callbackOnFrontDisconnected(jnReason);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnHeartBeatWarning(int nTimeLapse) {
  int jnTimeLapse  ;
  
  if (!swig_callbackOnHeartBeatWarning) {
    CThostFtdcMdSpi::OnHeartBeatWarning(nTimeLapse);
    return;
  } else {
    jnTimeLapse = nTimeLapse;
    swig_callbackOnHeartBeatWarning(jnTimeLapse);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpRspUserLogin = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspUserLogin) {
    CThostFtdcMdSpi::OnRspUserLogin(pRspUserLogin,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpRspUserLogin = (void *) pRspUserLogin; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspUserLogin(jpRspUserLogin, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpUserLogout = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspUserLogout) {
    CThostFtdcMdSpi::OnRspUserLogout(pUserLogout,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpUserLogout = (void *) pUserLogout; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspUserLogout(jpUserLogout, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField *pMulticastInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpMulticastInstrument = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryMulticastInstrument) {
    CThostFtdcMdSpi::OnRspQryMulticastInstrument(pMulticastInstrument,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpMulticastInstrument = (void *) pMulticastInstrument; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryMulticastInstrument(jpMulticastInstrument, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspError) {
    CThostFtdcMdSpi::OnRspError(pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspError(jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSpecificInstrument = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspSubMarketData) {
    CThostFtdcMdSpi::OnRspSubMarketData(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSpecificInstrument = (void *) pSpecificInstrument; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspSubMarketData(jpSpecificInstrument, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSpecificInstrument = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspUnSubMarketData) {
    CThostFtdcMdSpi::OnRspUnSubMarketData(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSpecificInstrument = (void *) pSpecificInstrument; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspUnSubMarketData(jpSpecificInstrument, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSpecificInstrument = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspSubForQuoteRsp) {
    CThostFtdcMdSpi::OnRspSubForQuoteRsp(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSpecificInstrument = (void *) pSpecificInstrument; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspSubForQuoteRsp(jpSpecificInstrument, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSpecificInstrument = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspUnSubForQuoteRsp) {
    CThostFtdcMdSpi::OnRspUnSubForQuoteRsp(pSpecificInstrument,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSpecificInstrument = (void *) pSpecificInstrument; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspUnSubForQuoteRsp(jpSpecificInstrument, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRtnDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData) {
  void * jpDepthMarketData = 0 ;
  
  if (!swig_callbackOnRtnDepthMarketData) {
    CThostFtdcMdSpi::OnRtnDepthMarketData(pDepthMarketData);
    return;
  } else {
    jpDepthMarketData = (void *) pDepthMarketData; 
    swig_callbackOnRtnDepthMarketData(jpDepthMarketData);
  }
}

void SwigDirector_CThostFtdcMdSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp) {
  void * jpForQuoteRsp = 0 ;
  
  if (!swig_callbackOnRtnForQuoteRsp) {
    CThostFtdcMdSpi::OnRtnForQuoteRsp(pForQuoteRsp);
    return;
  } else {
    jpForQuoteRsp = (void *) pForQuoteRsp; 
    swig_callbackOnRtnForQuoteRsp(jpForQuoteRsp);
  }
}

void SwigDirector_CThostFtdcMdSpi::swig_connect_director(SWIG_Callback0_t callbackOnFrontConnected, SWIG_Callback1_t callbackOnFrontDisconnected, SWIG_Callback2_t callbackOnHeartBeatWarning, SWIG_Callback3_t callbackOnRspUserLogin, SWIG_Callback4_t callbackOnRspUserLogout, SWIG_Callback5_t callbackOnRspQryMulticastInstrument, SWIG_Callback6_t callbackOnRspError, SWIG_Callback7_t callbackOnRspSubMarketData, SWIG_Callback8_t callbackOnRspUnSubMarketData, SWIG_Callback9_t callbackOnRspSubForQuoteRsp, SWIG_Callback10_t callbackOnRspUnSubForQuoteRsp, SWIG_Callback11_t callbackOnRtnDepthMarketData, SWIG_Callback12_t callbackOnRtnForQuoteRsp) {
  swig_callbackOnFrontConnected = callbackOnFrontConnected;
  swig_callbackOnFrontDisconnected = callbackOnFrontDisconnected;
  swig_callbackOnHeartBeatWarning = callbackOnHeartBeatWarning;
  swig_callbackOnRspUserLogin = callbackOnRspUserLogin;
  swig_callbackOnRspUserLogout = callbackOnRspUserLogout;
  swig_callbackOnRspQryMulticastInstrument = callbackOnRspQryMulticastInstrument;
  swig_callbackOnRspError = callbackOnRspError;
  swig_callbackOnRspSubMarketData = callbackOnRspSubMarketData;
  swig_callbackOnRspUnSubMarketData = callbackOnRspUnSubMarketData;
  swig_callbackOnRspSubForQuoteRsp = callbackOnRspSubForQuoteRsp;
  swig_callbackOnRspUnSubForQuoteRsp = callbackOnRspUnSubForQuoteRsp;
  swig_callbackOnRtnDepthMarketData = callbackOnRtnDepthMarketData;
  swig_callbackOnRtnForQuoteRsp = callbackOnRtnForQuoteRsp;
}

void SwigDirector_CThostFtdcMdSpi::swig_init_callbacks() {
  swig_callbackOnFrontConnected = 0;
  swig_callbackOnFrontDisconnected = 0;
  swig_callbackOnHeartBeatWarning = 0;
  swig_callbackOnRspUserLogin = 0;
  swig_callbackOnRspUserLogout = 0;
  swig_callbackOnRspQryMulticastInstrument = 0;
  swig_callbackOnRspError = 0;
  swig_callbackOnRspSubMarketData = 0;
  swig_callbackOnRspUnSubMarketData = 0;
  swig_callbackOnRspSubForQuoteRsp = 0;
  swig_callbackOnRspUnSubForQuoteRsp = 0;
  swig_callbackOnRtnDepthMarketData = 0;
  swig_callbackOnRtnForQuoteRsp = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EXP_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EXP_GenOrderByTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_EID_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_IDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_OfficerIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_PoliceIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_SoldierIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_HouseholdRegister_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_Passport_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_TaiwanCompatriotIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_HomeComingCard_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_LicenseNo_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_TaxNo_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_HMMainlandTravelPermit_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_TwMainlandTravelPermit_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_DrivingLicense_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_SocialID_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_LocalID_get() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_BusinessRegistration_get() {
  char jresult ;
  char result;
  
  result = (char)('H');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_HKMCIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('I');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_AccountsPermits_get() {
  char jresult ;
  char result;
  
  result = (char)('J');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_FrgPrmtRdCard_get() {
  char jresult ;
  char result;
  
  result = (char)('K');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_CptMngPrdLetter_get() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_UniformSocialCreditCode_get() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_CorporationCertNo_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICT_OtherCard_get() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IR_Group_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IR_Single_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DR_Group_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DR_Single_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DS_Asynchronous_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DS_Synchronizing_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DS_Synchronized_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BDS_Synchronized_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BDS_Synchronizing_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ECS_NoConnection_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ECS_QryInstrumentSent_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ECS_GotInformation_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TCS_NotConnected_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TCS_Connected_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TCS_QryInstrumentSent_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TCS_SubPrivateFlow_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_DataAsync_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_ForceUserLogout_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_UserPasswordUpdate_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_BrokerPasswordUpdate_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_InvestorPasswordUpdate_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_OrderInsert_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_OrderAction_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_SyncSystemData_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_SyncBrokerData_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_BachSyncBrokerData_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_SuperQuery_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_ParkedOrderInsert_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_ParkedOrderAction_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_SyncOTP_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FC_DeleteOrder_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_ForceUserLogout_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_UserPasswordUpdate_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_SyncBrokerData_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_BachSyncBrokerData_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_OrderInsert_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_OrderAction_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_AllQuery_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_log_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_BaseQry_get() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_TradeQry_get() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('d');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_Virement_get() {
  char jresult ;
  char result;
  
  result = (char)('e');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_Risk_get() {
  char jresult ;
  char result;
  
  result = (char)('f');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_Session_get() {
  char jresult ;
  char result;
  
  result = (char)('g');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_RiskNoticeCtl_get() {
  char jresult ;
  char result;
  
  result = (char)('h');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_RiskNotice_get() {
  char jresult ;
  char result;
  
  result = (char)('i');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_BrokerDeposit_get() {
  char jresult ;
  char result;
  
  result = (char)('j');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryFund_get() {
  char jresult ;
  char result;
  
  result = (char)('k');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryOrder_get() {
  char jresult ;
  char result;
  
  result = (char)('l');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('m');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryPosition_get() {
  char jresult ;
  char result;
  
  result = (char)('n');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryMarketData_get() {
  char jresult ;
  char result;
  
  result = (char)('o');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryUserEvent_get() {
  char jresult ;
  char result;
  
  result = (char)('p');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryRiskNotify_get() {
  char jresult ;
  char result;
  
  result = (char)('q');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryFundChange_get() {
  char jresult ;
  char result;
  
  result = (char)('r');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryInvestor_get() {
  char jresult ;
  char result;
  
  result = (char)('s');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QueryTradingCode_get() {
  char jresult ;
  char result;
  
  result = (char)('t');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_ForceClose_get() {
  char jresult ;
  char result;
  
  result = (char)('u');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_PressTest_get() {
  char jresult ;
  char result;
  
  result = (char)('v');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_RemainCalc_get() {
  char jresult ;
  char result;
  
  result = (char)('w');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_NetPositionInd_get() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_RiskPredict_get() {
  char jresult ;
  char result;
  
  result = (char)('y');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_DataExport_get() {
  char jresult ;
  char result;
  
  result = (char)('z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_RiskTargetSetup_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_MarketDataWarn_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QryBizNotice_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_CfgBizNotice_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_SyncOTP_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_SendBizNotice_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_CfgRiskLevelStd_get() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_TbCommand_get() {
  char jresult ;
  char result;
  
  result = (char)('H');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_DeleteOrder_get() {
  char jresult ;
  char result;
  
  result = (char)('J');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_ParkedOrderInsert_get() {
  char jresult ;
  char result;
  
  result = (char)('K');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_ParkedOrderAction_get() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_ExecOrderNoCheck_get() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_Designate_get() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_StockDisposal_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_BrokerDepositWarn_get() {
  char jresult ;
  char result;
  
  result = (char)('Q');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_CoverWarn_get() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_PreExecOrder_get() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_ExecOrderRisk_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_PosiLimitWarn_get() {
  char jresult ;
  char result;
  
  result = (char)('U');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_QryPosiLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('V');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_FBSign_get() {
  char jresult ;
  char result;
  
  result = (char)('W');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BFC_FBAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('X');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OAS_Submitted_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OAS_Accepted_get() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OAS_Rejected_get() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_AllTraded_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_PartTradedQueueing_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_PartTradedNotQueueing_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_NoTradeQueueing_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_NoTradeNotQueueing_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_Canceled_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_Unknown_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_NotTouched_get() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OST_Touched_get() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSS_InsertSubmitted_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSS_CancelSubmitted_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSS_ModifySubmitted_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSS_Accepted_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSS_InsertRejected_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSS_CancelRejected_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSS_ModifyRejected_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSD_Today_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSD_History_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PDT_UseHistory_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PDT_NoUseHistory_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ER_Broker_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ER_Host_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ER_Maker_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_Futures_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_Options_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_Combination_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_Spot_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_EFP_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_SpotOption_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_TAS_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PC_MI_get() {
  char jresult ;
  char result;
  
  result = (char)('I');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_FutureSingle_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_OptionSingle_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_Futures_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_Options_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_TradingComb_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_UnTradingComb_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_AllTrading_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APC_All_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IP_NotStart_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IP_Started_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IP_Pause_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IP_Expired_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_D_Buy_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_D_Sell_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PT_Net_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PT_Gross_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PD_Net_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PD_Long_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PD_Short_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SS_NonActive_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SS_Startup_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SS_Operating_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SS_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SS_SettlementFinished_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RA_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RA_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HF_Speculation_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HF_Arbitrage_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HF_Hedge_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HF_MarketMaker_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HF_SpecHedge_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HF_HedgeSpec_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BHF_Speculation_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BHF_Arbitrage_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BHF_Hedge_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CIDT_Speculation_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CIDT_Arbitrage_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CIDT_Hedge_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CIDT_MarketMaker_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_AnyPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_LimitPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_BestPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_LastPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_LastPricePlusOneTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_LastPricePlusTwoTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_LastPricePlusThreeTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_AskPrice1_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_AskPrice1PlusOneTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_AskPrice1PlusTwoTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_AskPrice1PlusThreeTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_BidPrice1_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_BidPrice1PlusOneTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_BidPrice1PlusTwoTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_BidPrice1PlusThreeTicks_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OPT_FiveLevelPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OF_Open_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OF_Close_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OF_ForceClose_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OF_CloseToday_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OF_CloseYesterday_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OF_ForceOff_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OF_LocalForceClose_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_NotForceClose_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_LackDeposit_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_ClientOverPositionLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_MemberOverPositionLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_NotMultiple_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_Violation_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCC_PersonDeliv_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_DeriveFromQuote_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_DeriveFromCombination_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_Combination_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_ConditionalOrder_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_Swap_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_DeriveFromBlockTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORDT_DeriveFromEFPTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TC_IOC_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TC_GFS_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TC_GFD_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TC_GTD_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TC_GTC_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TC_GFA_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VC_AV_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VC_MV_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VC_CV_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_Immediately_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_Touch_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_TouchProfit_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_ParkedOrder_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_LastPriceGreaterThanStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_LastPriceGreaterEqualStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_LastPriceLesserThanStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_LastPriceLesserEqualStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_AskPriceGreaterThanStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_AskPriceGreaterEqualStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_AskPriceLesserThanStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_AskPriceLesserEqualStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_BidPriceGreaterThanStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_BidPriceGreaterEqualStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_BidPriceLesserThanStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CC_BidPriceLesserEqualStopPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('H');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AF_Delete_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AF_Modify_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TR_Allow_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TR_CloseOnly_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TR_Forbidden_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSRC_Participant_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSRC_Administrator_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRDT_SplitCombination_get() {
  char jresult ;
  char result;
  
  result = (char)('#');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRDT_Common_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRDT_OptionsExecution_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRDT_OTC_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRDT_EFPDerived_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRDT_CombinationDerived_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRDT_BlockTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPOST_Common_get() {
  char jresult ;
  char result;
  
  result = (char)('#');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPOST_Tas_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSRC_LastPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSRC_Buy_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSRC_Sell_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSRC_OTC_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IS_BeforeTrading_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IS_NoTrading_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IS_Continous_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IS_AuctionOrdering_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IS_AuctionBalance_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IS_AuctionMatch_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IS_Closed_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IER_Automatic_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IER_Manual_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IER_Fuse_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BS_NoUpload_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BS_Uploaded_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BS_Failed_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RS_All_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RS_ByProduct_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RP_ByVolume_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RP_ByFeeOnHand_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level1_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level2_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level3_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level4_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level5_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level6_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level7_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level8_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RL_Level9_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RSD_ByPeriod_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RSD_ByStandard_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MT_Out_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MT_In_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ISPI_MortgageRatio_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ISPI_MarginWay_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ISPI_BillDeposit_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_MortgageRatio_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_OtherFundItem_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_OtherFundImport_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_CFFEXMinPrepa_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_CZCESettlementType_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_ExchDelivFeeMode_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_DelivFeeMode_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_CZCEComMarginType_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_DceComMarginType_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_OptOutDisCountRate_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESPI_OptMiniGuarantee_get() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_InvestorIDMinLength_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_AccountIDMinLength_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_UserRightLogon_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_SettlementBillTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_TradingCode_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_CheckFund_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_CommModelRight_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_MarginModelRight_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_IsStandardActive_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_UploadSettlementFile_get() {
  char jresult ;
  char result;
  
  result = (char)('U');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_DownloadCSRCFile_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_SettlementBillFile_get() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_CSRCOthersFile_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_InvestorPhoto_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_CSRCData_get() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_InvestorPwdModel_get() {
  char jresult ;
  char result;
  
  result = (char)('I');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_CFFEXInvestorSettleFile_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_InvestorIDType_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_FreezeMaxReMain_get() {
  char jresult ;
  char result;
  
  result = (char)('r');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_IsSync_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_RelieveOpenLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_IsStandardFreeze_get() {
  char jresult ;
  char result;
  
  result = (char)('X');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPI_CZCENormalProductHedge_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_EncryptionStandard_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_RiskMode_get() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_RiskModeGlobal_get() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_modeEncode_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_tickMode_get() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_SingleUserSessionMaxNum_get() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_LoginFailMaxNum_get() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsAuthForce_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsPosiFreeze_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsPosiLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_ForQuoteTimeInterval_get() {
  char jresult ;
  char result;
  
  result = (char)('Q');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsFuturePosiLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsFutureOrderFreq_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsExecOrderProfit_get() {
  char jresult ;
  char result;
  
  result = (char)('H');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsCheckBankAcc_get() {
  char jresult ;
  char result;
  
  result = (char)('I');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_PasswordDeadLine_get() {
  char jresult ;
  char result;
  
  result = (char)('J');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_IsStrongPassword_get() {
  char jresult ;
  char result;
  
  result = (char)('K');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_BalanceMorgage_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_MinPwdLen_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_LoginFailMaxNumForIP_get() {
  char jresult ;
  char result;
  
  result = (char)('U');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPID_PasswordPeriod_get() {
  char jresult ;
  char result;
  
  result = (char)('V');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_SettlementFund_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_InvestorPosition_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_SubEntryFund_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_CZCECombinationPos_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_CSRCData_get() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_CZCEClose_get() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_CZCENoClose_get() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_PositionDtl_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_OptionStrike_get() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_SettlementPriceComparison_get() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FI_NonTradePosChange_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUT_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUT_Check_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FFT_Txt_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FFT_Zip_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FFT_DBF_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUS_SucceedUpload_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUS_FailedUpload_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUS_SucceedLoad_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUS_PartSucceedLoad_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUS_FailedLoad_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TD_Out_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TD_In_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SC_NoSpecialRule_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SC_NoSpringFestival_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IPT_LastSettlement_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IPT_LaseClose_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PLP_Active_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PLP_NonActive_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PLP_Canceled_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DM_CashDeliv_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DM_CommodityDeliv_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIOT_FundIO_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIOT_Transfer_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIOT_SwapCurrency_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FT_Deposite_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FT_ItemFund_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FT_Company_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FT_InnerTransfer_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FD_In_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FD_Out_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FS_Record_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FS_Check_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FS_Charge_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PS_None_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PS_Publishing_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PS_Published_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ES_NonActive_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ES_Startup_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ES_Initialize_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ES_Initialized_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ES_Close_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ES_Closed_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ES_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STS_Initialize_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STS_Settlementing_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STS_Settlemented_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STS_Finished_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CT_Person_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CT_Company_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CT_Fund_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CT_SpecialOrgan_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CT_Asset_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_TradeSettle_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_Low_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_Focus_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_Risk_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_ByTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_ByDeliv_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_None_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAS_FixFee_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWDT_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWDT_Account_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AG_All_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AG_OnlyLost_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AG_OnlyGain_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AG_None_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICP_Include_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICP_NotInclude_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AWT_Enable_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AWT_Disable_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AWT_NoHoldEnable_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FPWD_UnCheck_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FPWD_Check_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TT_BankToFuture_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TT_FutureToBank_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TVF_Invalid_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TVF_Valid_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TVF_Reverse_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RN_CD_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RN_ZT_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RN_QT_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SEX_None_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SEX_Man_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SEX_Woman_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UT_Investor_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UT_Operator_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UT_SuperUser_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RATETYPE_MarginRate_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NOTETYPE_TradeSettleBill_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NOTETYPE_TradeSettleMonth_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NOTETYPE_CallMarginNotes_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NOTETYPE_ForceCloseNotes_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NOTETYPE_TradeNotes_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NOTETYPE_DelivNotes_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SBS_Day_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SBS_Volume_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ST_Day_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ST_Month_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_URT_Logon_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_URT_Transfer_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_URT_EMail_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_URT_Fax_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_URT_ConditionOrder_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MPT_PreSettlementPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MPT_SettlementPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MPT_AveragePrice_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MPT_OpenPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BGS_None_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BGS_NoGenerated_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BGS_Generated_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AT_HandlePositionAlgo_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AT_FindMarginRateAlgo_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HPA_Base_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HPA_DCE_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HPA_CZCE_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMRA_Base_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMRA_DCE_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMRA_CZCE_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HTAA_Base_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HTAA_DCE_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HTAA_CZCE_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Order_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Open_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Fund_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Company_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Corporation_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_LinkMan_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Ledger_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_Trustee_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_TrusteeCorporation_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_TrusteeOpen_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_TrusteeContact_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_ForeignerRefer_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PST_CorporationRefer_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_QIR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_QIR_Group_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_QIR_Single_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IRS_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IRS_Warn_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IRS_Call_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IRS_Force_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_IRS_Exception_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_Login_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_Logout_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_Trading_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_TradingError_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_UpdatePassword_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_Authenticate_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_SubmitSysInfo_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_Transfer_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UET_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICS_Close_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ICS_CloseToday_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SM_Non_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SM_Instrument_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SM_Product_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SM_Investor_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PAOS_NotSend_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PAOS_Send_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PAOS_Deleted_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VDS_Dealing_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VDS_DeaclSucceed_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORGS_Standard_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORGS_ESunny_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORGS_KingStarV6_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VTS_NaturalDeal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VTS_SucceedEnd_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VTS_FailedEND_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VTS_Exception_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VTS_ManualDeal_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VTS_MesException_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VTS_SysException_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VBAT_BankBook_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VBAT_BankCard_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VBAT_CreditCard_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VMS_Natural_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VMS_Canceled_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VAA_NoAvailAbility_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VAA_AvailAbility_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VAA_Repeal_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_GEN_Program_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_GEN_HandWork_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFMMCKK_REQUEST_get() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFMMCKK_AUTO_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFMMCKK_MANUAL_get() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_IDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_Passport_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_OfficerIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_SoldierIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_HomeComingCard_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_HouseholdRegister_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_LicenseNo_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_InstitutionCodeCard_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_TempLicenseNo_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_NoEnterpriseLicenseNo_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_OtherCard_get() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFT_SuperDepAgree_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_Others_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_TransferDetails_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_CustAccStatus_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_AccountTradeDetails_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_FutureAccountChangeInfoDetails_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_CustMoneyDetail_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_CustCancelAccountInfo_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_CustMoneyResult_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_OthersExceptionResult_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_CustInterestNetMoneyDetails_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_CustMoneySendAndReceiveDetails_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_CorporationMoneyTotal_get() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_MainbodyMoneyTotal_get() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_MainPartMonitorData_get() {
  char jresult ;
  char result;
  
  result = (char)('d');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_PreparationMoney_get() {
  char jresult ;
  char result;
  
  result = (char)('e');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBC_BankMoneyMonitorData_get() {
  char jresult ;
  char result;
  
  result = (char)('f');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CEC_Exchange_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CEC_Cash_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_YNI_Yes_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_YNI_No_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BLT_CurrentMoney_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BLT_UsableMoney_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BLT_FetchableMoney_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BLT_FreezeMoney_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_GD_Unknown_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_GD_Male_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_GD_Female_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FPF_BEN_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FPF_OUR_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FPF_SHA_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWKT_ExchangeKey_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWKT_PassWordKey_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWKT_MACKey_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWKT_MessageKey_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWT_Query_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWT_Fetch_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWT_Transfer_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PWT_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EM_NoEncry_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EM_DES_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EM_3DES_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BRF_BankNotNeedRepeal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BRF_BankWaitingRepeal_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BRF_BankBeenRepealed_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BRORF_BrokerNotNeedRepeal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BRORF_BrokerWaitingRepeal_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BRORF_BrokerBeenRepealed_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TS_Bank_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TS_Future_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TS_Store_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LF_Yes_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LF_No_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAS_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAS_Freeze_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAS_ReportLoss_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MAS_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MAS_Cancel_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MSS_Point_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MSS_PrePoint_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MSS_CancelPoint_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYT_FutureBankTransfer_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYT_StockBankTransfer_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYT_TheThirdPartStore_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TEF_NormalProcessing_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TEF_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TEF_Failed_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TEF_Abnormal_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TEF_ManualProcessedForException_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TEF_CommuFailedNeedManualProcess_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TEF_SysErrorNeedManualProcess_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSS_NotProcess_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSS_StartProcess_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PSS_Finished_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUSTT_Person_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUSTT_Institution_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTTD_FromBankToFuture_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTTD_FromFutureToBank_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OOD_Open_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OOD_Destroy_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AVAF_Invalid_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AVAF_Valid_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AVAF_Repeal_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OT_Bank_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OT_Future_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OT_PlateForm_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OL_HeadQuarters_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OL_Branch_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PID_FutureProtocal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PID_ICBCProtocal_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PID_ABCProtocal_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PID_CBCProtocal_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PID_CCBProtocal_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PID_BOCOMProtocal_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PID_FBTPlateFormProtocal_get() {
  char jresult ;
  char result;
  
  result = (char)('X');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CM_ShortConnect_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CM_LongConnect_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SRM_ASync_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SRM_Sync_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAT_BankBook_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAT_SavingCard_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAT_CreditCard_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAT_BankBook_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAT_SavingCard_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FAT_CreditCard_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OS_Ready_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OS_CheckIn_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OS_CheckOut_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OS_CheckFileArrived_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OS_CheckDetail_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OS_DayEndClean_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OS_Invalid_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CCBFM_ByAmount_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CCBFM_ByMonth_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CAPIT_Client_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CAPIT_Server_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CAPIT_UserApi_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LS_Connected_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LS_Disconnected_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BPWDF_NoCheck_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BPWDF_BlankCheck_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BPWDF_EncryptCheck_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAT_AccountID_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAT_CardID_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAT_SHStockholderID_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAT_SZStockholderID_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRFS_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TRFS_Repealed_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPTYPE_Broker_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPTYPE_Bank_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_REQRSP_Request_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_REQRSP_Response_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_SignIn_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_FromBankToFuture_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_FromFutureToBank_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_OpenAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_CancelAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_ChangeAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_RepealFromBankToFuture_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_RepealFromFutureToBank_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_QueryBankAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_QueryFutureAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_SignOut_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_SyncKey_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_ReserveOpenAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_CancelReserveOpenAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_ReserveOpenAccountConfirm_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBTUET_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DBOP_Insert_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DBOP_Update_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DBOP_Delete_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYNF_Yes_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYNF_No_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYNT_OneOffSync_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYNT_TimerSync_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SYNT_TimerFullSync_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEDIR_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEDIR_Sale_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERES_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERES_InsufficientBalance_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERES_UnknownTrading_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERES_Fail_get() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEES_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEES_ReExchange_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEFG_DataPackage_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEFG_File_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEAT_NotTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEAT_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_SignIn_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_Exchange_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_ReExchange_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_QueryBankAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_QueryExchDetial_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_QueryExchSummary_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_QueryExchRate_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_CheckBankAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_SignOut_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBEUET_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERF_UnProcessed_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERF_WaitSend_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERF_SendSuccess_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERF_SendFailed_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FBERF_WaitReSend_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NC_NOERROR_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NC_Warn_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NC_Call_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NC_Force_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NC_CHUANCANG_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_NC_Exception_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCT_Manual_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCT_Single_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FCT_Group_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNM_System_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNM_SMS_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNM_EMail_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNM_Manual_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNS_NotGen_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNS_Generated_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNS_SendError_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNS_SendOk_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNS_Received_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RNS_Confirmed_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RUE_ExportData_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COST_LastPriceAsc_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COST_LastPriceDesc_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COST_AskPriceAsc_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COST_AskPriceDesc_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COST_BidPriceAsc_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COST_BidPriceDesc_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAST_NoSend_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAST_Sended_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAST_Generated_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAST_SendFail_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAST_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAST_Fail_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAST_Cancel_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOACS_NoApply_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOACS_Submited_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOACS_Sended_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOACS_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOACS_Refuse_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOACS_Cancel_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_QT_Radio_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_QT_Option_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_QT_Blank_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_Request_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_Response_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_Notice_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CRC_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CRC_Working_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CRC_InfoFail_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CRC_IDCardFail_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CRC_OtherFail_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CfMMCCT_All_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CfMMCCT_Person_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CfMMCCT_Company_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CfMMCCT_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CfMMCCT_SpecialOrgan_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CfMMCCT_Asset_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EIDT_SHFE_get() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EIDT_CZCE_get() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EIDT_DCE_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EIDT_CFFEX_get() {
  char jresult ;
  char result;
  
  result = (char)('J');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EIDT_INE_get() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ECIDT_Hedge_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ECIDT_Arbitrage_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ECIDT_Speculation_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UF_NoUpdate_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UF_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UF_Fail_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UF_TCSuccess_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UF_TCFail_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UF_Cancel_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_OpenInvestor_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_ModifyIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_ModifyNoIDCard_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_ApplyTradingCode_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_CancelTradingCode_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_CancelInvestor_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_FreezeAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AOID_ActiveFreezeAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASID_NoComplete_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASID_Submited_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASID_Checked_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASID_Refused_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASID_Deleted_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOASM_ByAPI_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOASM_ByFile_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_ADD_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_UPDATE_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_DELETE_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_CHECK_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_COPY_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_CANCEL_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_Reverse_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAA_ASR_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAA_ASNR_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAA_NSAR_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAA_NSR_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_InvestorGroupFlow_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_InvestorRate_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EvM_InvestorCommRateModel_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CL_Zero_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CL_One_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CL_Two_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHS_Init_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHS_Checking_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHS_Checked_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHS_Refuse_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHS_Cancel_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHU_Unused_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHU_Used_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CHU_Fail_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAO_ByAccProperty_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BAO_ByFBTransfer_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MBTS_ByInstrument_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MBTS_ByDayInsPrc_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MBTS_ByDayIns_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTP_NONE_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTP_TOTP_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTPS_Unused_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTPS_Used_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTPS_Disuse_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BUT_Investor_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BUT_BrokerUser_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUTT_Commodity_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FUTT_Financial_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_Restriction_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_TodayRestriction_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_Transfer_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_Credit_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_InvestorWithdrawAlm_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_BankRestriction_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_Accountregister_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_ExchangeFundIO_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FET_InvestorFundIO_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AST_FBTransfer_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AST_ManualEntry_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CST_UnifyAccount_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CST_ManualEntry_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UR_Single_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BG_Investor_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BG_Group_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TSSM_Instrument_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TSSM_Product_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TSSM_Exchange_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESM_Relative_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ESM_Typical_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RIR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RIR_Model_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RIR_Single_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SDS_Initialize_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SDS_Settlementing_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SDS_Settlemented_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TSRC_NORMAL_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TSRC_QUERY_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FSM_Product_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FSM_Exchange_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FSM_All_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BIR_Property_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BIR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PIR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PIR_Property_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PIR_Single_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIS_NoCreate_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIS_Created_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIS_Failed_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FGS_FileTransmit_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FGS_FileGen_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoM_Add_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoM_Update_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoM_Delete_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoM_Copy_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoM_AcTive_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoM_CanCel_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoM_ReSet_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_UpdatePassword_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_UserDepartment_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_RoleManager_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_RoleFunction_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_BaseParam_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_SetUserID_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_SetUserRole_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_UserIpRestriction_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_DepartmentManager_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_DepartmentCopy_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_Tradingcode_get() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_InvestorStatus_get() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_InvestorAuthority_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_PropertySet_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_ReSetInvestorPasswd_get() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SoT_InvestorPersonalityInfo_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSRCQ_Current_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSRCQ_History_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FRS_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FRS_Freeze_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STST_Standard_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STST_NonStandard_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RPT_Freeze_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RPT_FreezeActive_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RPT_OpenLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RPT_RelieveOpenLimit_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLDS_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLDS_Deleted_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCHS_Init_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCHS_Checking_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCHS_Checked_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCHS_RefuseReport_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLDT_DrawDay_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLDT_TouchDay_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCL_CheckLevel0_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCL_CheckLevel1_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCL_CheckLevel2_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMLCL_CheckLevel3_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EFT_CSV_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EFT_EXCEL_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EFT_DBF_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SMT_Before_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SMT_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SMT_After_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SMT_Settlemented_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SML_Must_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SML_Alarm_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SML_Prompt_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SML_Ignore_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SMG_Exhcange_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SMG_ASP_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SMG_CSRC_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LUT_Repeatable_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LUT_Unrepeatable_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DAR_Settle_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DAR_Exchange_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DAR_CSRC_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MGT_ExchMarginRate_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MGT_InstrMarginRate_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MGT_InstrMarginRateTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ACT_Intraday_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ACT_Long_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MRT_Exchange_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MRT_Investor_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MRT_InvestorTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BUS_UnBak_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BUS_BakUp_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BUS_BakUped_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BUS_BakFail_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SIS_UnInitialize_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SIS_Initialize_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SIS_Initialized_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SRS_NoCreate_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SRS_Create_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SRS_Created_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SRS_CreateFail_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SSS_UnSaveData_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SSS_SaveDatad_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAS_UnArchived_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAS_Archiving_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAS_Archived_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SAS_ArchiveFail_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CTPT_Unkown_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CTPT_MainCenter_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CTPT_BackUp_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CDT_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CDT_SpecFirst_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MFUR_None_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MFUR_Margin_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MFUR_All_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MFUR_CNY3_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPT_CzceHedge_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPT_IneForeignCurrency_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SPT_DceOpenClose_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMT_Mortgage_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMT_Redemption_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASPI_BaseMargin_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASPI_LowestInterest_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMD_In_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMD_Out_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_Profit_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_Loss_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BT_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SST_Manual_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SST_Automatic_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CED_Settlement_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CED_Sale_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSS_Entry_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSS_Approve_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSS_Refuse_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSS_Revoke_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSS_Send_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSS_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CSS_Failure_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_REQF_NoSend_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_REQF_SendSuccess_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_REQF_SendFailed_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_REQF_WaitReSend_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RESF_Success_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RESF_InsuffiCient_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RESF_UnKnown_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EXS_Before_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EXS_After_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CR_Domestic_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CR_GMT_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CR_Foreign_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HB_No_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HB_Yes_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SM_Normal_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SM_Emerge_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SM_Restore_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPT_Full_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPT_Increment_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TPT_BackUp_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LM_Trade_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LM_Transfer_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CPT_Instrument_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CPT_Margin_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HT_Yes_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HT_No_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMT_Bank_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMT_Securities_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMT_Fund_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMT_Insurance_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMT_Trust_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMT_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFIOT_FundIO_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFIOT_SwapCurrency_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CAT_Futures_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CAT_AssetmgrFuture_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CAT_AssetmgrTrustee_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CAT_AssetmgrTransfer_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LT_Chinese_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_LT_English_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMCT_Person_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMCT_Organ_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AMCT_SpecialOrgan_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASST_Futures_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ASST_SpecialOrgan_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CIT_HasExch_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CIT_HasATP_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CIT_HasDiff_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DT_HandDeliv_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DT_PersonDeliv_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MMSA_NO_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_MMSA_YES_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CACT_Person_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CACT_Company_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CACT_Other_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAAT_Futures_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_UOAAT_SpecialOrgan_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DEN_Buy_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DEN_Sell_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OFEN_Open_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OFEN_Close_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OFEN_ForceClose_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OFEN_CloseToday_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OFEN_CloseYesterday_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OFEN_ForceOff_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OFEN_LocalForceClose_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HFEN_Speculation_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HFEN_Arbitrage_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_HFEN_Hedge_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIOTEN_FundIO_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIOTEN_Transfer_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FIOTEN_SwapCurrency_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FTEN_Deposite_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FTEN_ItemFund_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FTEN_Company_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FTEN_InnerTransfer_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FDEN_In_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FDEN_Out_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMDEN_In_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FMDEN_Out_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CP_CallOptions_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CP_PutOptions_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STM_Continental_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STM_American_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STM_Bermuda_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STT_Hedge_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STT_Match_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APPT_NotStrikeNum_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_GUDS_Gen_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_GUDS_Hand_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoExec_get() {
  char jresult ;
  char result;
  
  result = (char)('n');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_Canceled_get() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_OK_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoPosition_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoDeposit_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoParticipant_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoClient_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoInstrument_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoRight_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_InvalidVolume_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_NoEnoughHistoryTrade_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OER_Unknown_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_Future_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_BUL_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_BER_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_STD_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_STG_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_PRT_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_CAS_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_OPL_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_BFO_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_BLS_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_COMBT_BES_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_SPL_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_OPL_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_SP_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_SPC_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_BLS_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_BES_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_CAS_get() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_STD_get() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_STG_get() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_BFO_get() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DCECOMBT_SFO_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORPT_PreSettlementPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORPT_OpenPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ORPT_MaxPreSettlementPrice_get() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BLAG_Default_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BLAG_IncludeOptValLost_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ACTP_Exec_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ACTP_Abandon_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FQST_Submitted_get() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FQST_Accepted_get() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_FQST_Rejected_get() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VM_Absolute_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_VM_Ratio_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EOPF_Reserve_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EOPF_UnReserve_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EOCF_AutoClose_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_EOCF_NotToClose_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PTE_Futures_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_PTE_Options_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_O_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_T_get() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_P_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_N_get() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_L_get() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_F_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_C_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CUFN_CUFN_M_get() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_O_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_T_get() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_P_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_F_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_C_get() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_D_get() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_M_get() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_DUFN_DUFN_S_get() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SUFN_SUFN_O_get() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SUFN_SUFN_T_get() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SUFN_SUFN_P_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_SUFN_SUFN_F_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFUFN_SUFN_T_get() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFUFN_SUFN_P_get() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFUFN_SUFN_F_get() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CFUFN_SUFN_S_get() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CMDR_Comb_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CMDR_UnComb_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_CMDR_DelComb_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STOV_RealValue_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STOV_ProfitValue_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STOV_RealRatio_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_STOV_ProfitRatio_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ROAST_Processing_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ROAST_Cancelled_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ROAST_Opened_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_ROAST_Invalid_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_WPSR_Lib_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_WPSR_Manual_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSCF_CloseSelfOptionPosition_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSCF_ReserveOptionPosition_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSCF_SellCloseSelfFuturePosition_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OSCF_ReserveFuturePosition_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BZTP_Future_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_BZTP_Stock_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APP_TYPE_Investor_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APP_TYPE_InvestorRelay_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APP_TYPE_OperatorRelay_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_APP_TYPE_UnKnown_get() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RV_Right_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_RV_Refuse_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTC_TRDT_Block_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTC_TRDT_EFP_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTC_MT_DV01_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_OTC_MT_ParValue_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AU_WHITE_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_AU_BLACK_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_INS_ALL_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_INS_FUTURE_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_INS_OPTION_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_INS_COMB_get() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TD_ALL_get() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TD_TRADE_get() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_THOST_FTDC_TD_UNTRADE_get() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDisseminationField_SequenceSeries_set(void * jarg1, short jarg2) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  arg2 = (TThostFtdcSequenceSeriesType)jarg2; 
  if (arg1) (arg1)->SequenceSeries = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CThostFtdcDisseminationField_SequenceSeries_get(void * jarg1) {
  short jresult ;
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDisseminationField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDisseminationField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcDisseminationField() {
  void * jresult ;
  CThostFtdcDisseminationField *result = 0 ;
  
  result = (CThostFtdcDisseminationField *)new CThostFtdcDisseminationField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcDisseminationField(void * jarg1) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_InterfaceProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_InterfaceProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_ProtocolInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_ProtocolInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_OneTimePassword_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OneTimePassword, (const char *)arg2, 41-1);
      arg1->OneTimePassword[41-1] = 0;
    } else {
      arg1->OneTimePassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_OneTimePassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->OneTimePassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_LoginRemark_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_LoginRemark_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->LoginRemark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_ClientIPPort_set(void * jarg1, int jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  TThostFtdcIPPortType arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (TThostFtdcIPPortType)jarg2; 
  if (arg1) (arg1)->ClientIPPort = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_ClientIPPort_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  TThostFtdcIPPortType result;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (TThostFtdcIPPortType) ((arg1)->ClientIPPort);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_ClientIPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIPAddress, (const char *)arg2, 33-1);
      arg1->ClientIPAddress[33-1] = 0;
    } else {
      arg1->ClientIPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginField_ClientIPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->ClientIPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqUserLoginField() {
  void * jresult ;
  CThostFtdcReqUserLoginField *result = 0 ;
  
  result = (CThostFtdcReqUserLoginField *)new CThostFtdcReqUserLoginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqUserLoginField(void * jarg1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_LoginTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_LoginTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->LoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_SystemName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_SystemName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->SystemName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_MaxOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderRef, (const char *)arg2, 13-1);
      arg1->MaxOrderRef[13-1] = 0;
    } else {
      arg1->MaxOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_MaxOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_SHFETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SHFETime, (const char *)arg2, 9-1);
      arg1->SHFETime[9-1] = 0;
    } else {
      arg1->SHFETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_SHFETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->SHFETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_DCETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DCETime, (const char *)arg2, 9-1);
      arg1->DCETime[9-1] = 0;
    } else {
      arg1->DCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_DCETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->DCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_CZCETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CZCETime, (const char *)arg2, 9-1);
      arg1->CZCETime[9-1] = 0;
    } else {
      arg1->CZCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_CZCETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->CZCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_FFEXTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FFEXTime, (const char *)arg2, 9-1);
      arg1->FFEXTime[9-1] = 0;
    } else {
      arg1->FFEXTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_FFEXTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->FFEXTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_INETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->INETime, (const char *)arg2, 9-1);
      arg1->INETime[9-1] = 0;
    } else {
      arg1->INETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLoginField_INETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->INETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspUserLoginField() {
  void * jresult ;
  CThostFtdcRspUserLoginField *result = 0 ;
  
  result = (CThostFtdcRspUserLoginField *)new CThostFtdcRspUserLoginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspUserLoginField(void * jarg1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserLogoutField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserLogoutField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserLogoutField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserLogoutField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcUserLogoutField() {
  void * jresult ;
  CThostFtdcUserLogoutField *result = 0 ;
  
  result = (CThostFtdcUserLogoutField *)new CThostFtdcUserLogoutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcUserLogoutField(void * jarg1) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForceUserLogoutField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForceUserLogoutField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForceUserLogoutField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForceUserLogoutField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcForceUserLogoutField() {
  void * jresult ;
  CThostFtdcForceUserLogoutField *result = 0 ;
  
  result = (CThostFtdcForceUserLogoutField *)new CThostFtdcForceUserLogoutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcForceUserLogoutField(void * jarg1) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_AuthCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthCode, (const char *)arg2, 17-1);
      arg1->AuthCode[17-1] = 0;
    } else {
      arg1->AuthCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_AuthCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->AuthCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_AppID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AppID, (const char *)arg2, 33-1);
      arg1->AppID[33-1] = 0;
    } else {
      arg1->AppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqAuthenticateField_AppID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->AppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqAuthenticateField() {
  void * jresult ;
  CThostFtdcReqAuthenticateField *result = 0 ;
  
  result = (CThostFtdcReqAuthenticateField *)new CThostFtdcReqAuthenticateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqAuthenticateField(void * jarg1) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_AppID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AppID, (const char *)arg2, 33-1);
      arg1->AppID[33-1] = 0;
    } else {
      arg1->AppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_AppID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->AppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_AppType_set(void * jarg1, char jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  TThostFtdcAppTypeType arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (TThostFtdcAppTypeType)jarg2; 
  if (arg1) (arg1)->AppType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspAuthenticateField_AppType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  TThostFtdcAppTypeType result;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (TThostFtdcAppTypeType) ((arg1)->AppType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspAuthenticateField() {
  void * jresult ;
  CThostFtdcRspAuthenticateField *result = 0 ;
  
  result = (CThostFtdcRspAuthenticateField *)new CThostFtdcRspAuthenticateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspAuthenticateField(void * jarg1) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_AuthInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthInfo, (const char *)arg2, 129-1);
      arg1->AuthInfo[129-1] = 0;
    } else {
      arg1->AuthInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_AuthInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->AuthInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_IsResult_set(void * jarg1, int jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsResult = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_IsResult_get(void * jarg1) {
  int jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_AppID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AppID, (const char *)arg2, 33-1);
      arg1->AppID[33-1] = 0;
    } else {
      arg1->AppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_AppID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->AppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_AppType_set(void * jarg1, char jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcAppTypeType arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (TThostFtdcAppTypeType)jarg2; 
  if (arg1) (arg1)->AppType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_AppType_get(void * jarg1) {
  char jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcAppTypeType result;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (TThostFtdcAppTypeType) ((arg1)->AppType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_ClientIPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIPAddress, (const char *)arg2, 33-1);
      arg1->ClientIPAddress[33-1] = 0;
    } else {
      arg1->ClientIPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthenticationInfoField_ClientIPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->ClientIPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcAuthenticationInfoField() {
  void * jresult ;
  CThostFtdcAuthenticationInfoField *result = 0 ;
  
  result = (CThostFtdcAuthenticationInfoField *)new CThostFtdcAuthenticationInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcAuthenticationInfoField(void * jarg1) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_LoginTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_LoginTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->LoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_SystemName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_SystemName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->SystemName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_MaxOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderRef, (const char *)arg2, 13-1);
      arg1->MaxOrderRef[13-1] = 0;
    } else {
      arg1->MaxOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_MaxOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->MaxOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_SHFETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SHFETime, (const char *)arg2, 9-1);
      arg1->SHFETime[9-1] = 0;
    } else {
      arg1->SHFETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_SHFETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->SHFETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_DCETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DCETime, (const char *)arg2, 9-1);
      arg1->DCETime[9-1] = 0;
    } else {
      arg1->DCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_DCETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->DCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_CZCETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CZCETime, (const char *)arg2, 9-1);
      arg1->CZCETime[9-1] = 0;
    } else {
      arg1->CZCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_CZCETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->CZCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_FFEXTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FFEXTime, (const char *)arg2, 9-1);
      arg1->FFEXTime[9-1] = 0;
    } else {
      arg1->FFEXTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_FFEXTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->FFEXTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_INETime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->INETime, (const char *)arg2, 9-1);
      arg1->INETime[9-1] = 0;
    } else {
      arg1->INETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_INETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->INETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_RandomString_set(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RandomString, (const char *)arg2, 17-1);
      arg1->RandomString[17-1] = 0;
    } else {
      arg1->RandomString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspUserLogin2Field_RandomString_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  result = (char *) ((arg1)->RandomString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspUserLogin2Field() {
  void * jresult ;
  CThostFtdcRspUserLogin2Field *result = 0 ;
  
  result = (CThostFtdcRspUserLogin2Field *)new CThostFtdcRspUserLogin2Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspUserLogin2Field(void * jarg1) {
  CThostFtdcRspUserLogin2Field *arg1 = (CThostFtdcRspUserLogin2Field *) 0 ;
  
  arg1 = (CThostFtdcRspUserLogin2Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_Version_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Version, (const char *)arg2, 4-1);
      arg1->Version[4-1] = 0;
    } else {
      arg1->Version[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_Version_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->Version);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeSerial, (const char *)arg2, 9-1);
      arg1->TradeSerial[9-1] = 0;
    } else {
      arg1->TradeSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_TradeSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_FutureID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureID, (const char *)arg2, 11-1);
      arg1->FutureID[11-1] = 0;
    } else {
      arg1->FutureID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_FutureID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->FutureID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_BankBrchID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_BankBrchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_RecordNum_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RecordNum, (const char *)arg2, 7-1);
      arg1->RecordNum[7-1] = 0;
    } else {
      arg1->RecordNum[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_RecordNum_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->RecordNum);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferHeaderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferHeaderField() {
  void * jresult ;
  CThostFtdcTransferHeaderField *result = 0 ;
  
  result = (CThostFtdcTransferHeaderField *)new CThostFtdcTransferHeaderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferHeaderField(void * jarg1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (TThostFtdcFuturePwdFlagType)jarg2; 
  if (arg1) (arg1)->FuturePwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_FutureAccPwd_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_FutureAccPwd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccPwd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_TradeAmt_set(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_TradeAmt_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_CurrencyCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureReqField_CurrencyCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferBankToFutureReqField() {
  void * jresult ;
  CThostFtdcTransferBankToFutureReqField *result = 0 ;
  
  result = (CThostFtdcTransferBankToFutureReqField *)new CThostFtdcTransferBankToFutureReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferBankToFutureReqField(void * jarg1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_RetCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_RetCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->RetCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_RetInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_RetInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->RetInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_TradeAmt_set(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_TradeAmt_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_CurrencyCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankToFutureRspField_CurrencyCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferBankToFutureRspField() {
  void * jresult ;
  CThostFtdcTransferBankToFutureRspField *result = 0 ;
  
  result = (CThostFtdcTransferBankToFutureRspField *)new CThostFtdcTransferBankToFutureRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferBankToFutureRspField(void * jarg1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (TThostFtdcFuturePwdFlagType)jarg2; 
  if (arg1) (arg1)->FuturePwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_FutureAccPwd_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_FutureAccPwd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccPwd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_TradeAmt_set(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_TradeAmt_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_CurrencyCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankReqField_CurrencyCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferFutureToBankReqField() {
  void * jresult ;
  CThostFtdcTransferFutureToBankReqField *result = 0 ;
  
  result = (CThostFtdcTransferFutureToBankReqField *)new CThostFtdcTransferFutureToBankReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferFutureToBankReqField(void * jarg1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_RetCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_RetCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_RetInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_RetInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_TradeAmt_set(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_TradeAmt_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_CurrencyCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferFutureToBankRspField_CurrencyCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferFutureToBankRspField() {
  void * jresult ;
  CThostFtdcTransferFutureToBankRspField *result = 0 ;
  
  result = (CThostFtdcTransferFutureToBankRspField *)new CThostFtdcTransferFutureToBankRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferFutureToBankRspField(void * jarg1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_FuturePwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (TThostFtdcFuturePwdFlagType)jarg2; 
  if (arg1) (arg1)->FuturePwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_FuturePwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_FutureAccPwd_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_FutureAccPwd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccPwd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_CurrencyCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryBankReqField_CurrencyCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferQryBankReqField() {
  void * jresult ;
  CThostFtdcTransferQryBankReqField *result = 0 ;
  
  result = (CThostFtdcTransferQryBankReqField *)new CThostFtdcTransferQryBankReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferQryBankReqField(void * jarg1) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_RetCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_RetCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_RetInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_RetInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_TradeAmt_set(void * jarg1, double jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_TradeAmt_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_UseAmt_set(void * jarg1, double jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_UseAmt_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_FetchAmt_set(void * jarg1, double jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FetchAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_FetchAmt_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FetchAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_CurrencyCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryBankRspField_CurrencyCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferQryBankRspField() {
  void * jresult ;
  CThostFtdcTransferQryBankRspField *result = 0 ;
  
  result = (CThostFtdcTransferQryBankRspField *)new CThostFtdcTransferQryBankRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferQryBankRspField(void * jarg1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailReqField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailReqField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferQryDetailReqField() {
  void * jresult ;
  CThostFtdcTransferQryDetailReqField *result = 0 ;
  
  result = (CThostFtdcTransferQryDetailReqField *)new CThostFtdcTransferQryDetailReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferQryDetailReqField(void * jarg1) {
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcTradeSerialNoType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcTradeSerialNoType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_FutureID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureID, (const char *)arg2, 11-1);
      arg1->FutureID[11-1] = 0;
    } else {
      arg1->FutureID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_FutureID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->FutureID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_FutureAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 22-1);
      arg1->FutureAccount[22-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_FutureAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankSerial_set(void * jarg1, int jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcTradeSerialNoType)jarg2; 
  if (arg1) (arg1)->BankSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcTradeSerialNoType) ((arg1)->BankSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankBrchID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankBrchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_CertCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CertCode, (const char *)arg2, 21-1);
      arg1->CertCode[21-1] = 0;
    } else {
      arg1->CertCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_CertCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->CertCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_CurrencyCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_CurrencyCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TxAmount_set(void * jarg1, double jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TxAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_TxAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TxAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_Flag_set(void * jarg1, char jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTransferValidFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcTransferValidFlagType)jarg2; 
  if (arg1) (arg1)->Flag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferQryDetailRspField_Flag_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTransferValidFlagType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcTransferValidFlagType) ((arg1)->Flag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferQryDetailRspField() {
  void * jresult ;
  CThostFtdcTransferQryDetailRspField *result = 0 ;
  
  result = (CThostFtdcTransferQryDetailRspField *)new CThostFtdcTransferQryDetailRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferQryDetailRspField(void * jarg1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspInfoField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspInfoField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspInfoField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspInfoField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspInfoField() {
  void * jresult ;
  CThostFtdcRspInfoField *result = 0 ;
  
  result = (CThostFtdcRspInfoField *)new CThostFtdcRspInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspInfoField(void * jarg1) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeField_ExchangeName_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeName, (const char *)arg2, 61-1);
      arg1->ExchangeName[61-1] = 0;
    } else {
      arg1->ExchangeName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeField_ExchangeName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeField_ExchangeProperty_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  TThostFtdcExchangePropertyType arg2 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  arg2 = (TThostFtdcExchangePropertyType)jarg2; 
  if (arg1) (arg1)->ExchangeProperty = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeField_ExchangeProperty_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  TThostFtdcExchangePropertyType result;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  result = (TThostFtdcExchangePropertyType) ((arg1)->ExchangeProperty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeField() {
  void * jresult ;
  CThostFtdcExchangeField *result = 0 ;
  
  result = (CThostFtdcExchangeField *)new CThostFtdcExchangeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeField(void * jarg1) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_ProductName_set(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductName, (const char *)arg2, 21-1);
      arg1->ProductName[21-1] = 0;
    } else {
      arg1->ProductName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductField_ProductName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ProductName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_ProductClass_set(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcProductClassType)jarg2; 
  if (arg1) (arg1)->ProductClass = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcProductField_ProductClass_get(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcProductClassType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_VolumeMultiple_set(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeMultipleType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeMultipleType)jarg2; 
  if (arg1) (arg1)->VolumeMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcProductField_VolumeMultiple_get(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeMultipleType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeMultipleType) ((arg1)->VolumeMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_PriceTick_set(void * jarg1, double jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PriceTick = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcProductField_PriceTick_get(void * jarg1) {
  double jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PriceTick);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_MaxMarketOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcProductField_MaxMarketOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_MinMarketOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcProductField_MinMarketOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_MaxLimitOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcProductField_MaxLimitOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_MinLimitOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcProductField_MinLimitOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_PositionType_set(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionTypeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcPositionTypeType)jarg2; 
  if (arg1) (arg1)->PositionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcProductField_PositionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionTypeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcPositionTypeType) ((arg1)->PositionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_PositionDateType_set(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionDateTypeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcPositionDateTypeType)jarg2; 
  if (arg1) (arg1)->PositionDateType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcProductField_PositionDateType_get(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionDateTypeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcPositionDateTypeType) ((arg1)->PositionDateType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_CloseDealType_set(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcCloseDealTypeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcCloseDealTypeType)jarg2; 
  if (arg1) (arg1)->CloseDealType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcProductField_CloseDealType_get(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcCloseDealTypeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcCloseDealTypeType) ((arg1)->CloseDealType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_TradeCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCurrencyID, (const char *)arg2, 4-1);
      arg1->TradeCurrencyID[4-1] = 0;
    } else {
      arg1->TradeCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductField_TradeCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->TradeCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_MortgageFundUseRange_set(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcMortgageFundUseRangeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcMortgageFundUseRangeType)jarg2; 
  if (arg1) (arg1)->MortgageFundUseRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcProductField_MortgageFundUseRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcMortgageFundUseRangeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcMortgageFundUseRangeType) ((arg1)->MortgageFundUseRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_UnderlyingMultiple_set(void * jarg1, double jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcUnderlyingMultipleType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcUnderlyingMultipleType)jarg2; 
  if (arg1) (arg1)->UnderlyingMultiple = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcProductField_UnderlyingMultiple_get(void * jarg1) {
  double jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcUnderlyingMultipleType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcUnderlyingMultipleType) ((arg1)->UnderlyingMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductField_ExchangeProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeProductID, (const char *)arg2, 81-1);
      arg1->ExchangeProductID[81-1] = 0;
    } else {
      arg1->ExchangeProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductField_ExchangeProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ExchangeProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcProductField() {
  void * jresult ;
  CThostFtdcProductField *result = 0 ;
  
  result = (CThostFtdcProductField *)new CThostFtdcProductField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcProductField(void * jarg1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_InstrumentName_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentName, (const char *)arg2, 21-1);
      arg1->InstrumentName[21-1] = 0;
    } else {
      arg1->InstrumentName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_InstrumentName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 31-1);
      arg1->reserve3[31-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ProductClass_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcProductClassType)jarg2; 
  if (arg1) (arg1)->ProductClass = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ProductClass_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcProductClassType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_DeliveryYear_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcYearType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcYearType)jarg2; 
  if (arg1) (arg1)->DeliveryYear = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_DeliveryYear_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcYearType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcYearType) ((arg1)->DeliveryYear);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_DeliveryMonth_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMonthType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcMonthType)jarg2; 
  if (arg1) (arg1)->DeliveryMonth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_DeliveryMonth_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMonthType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcMonthType) ((arg1)->DeliveryMonth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MaxMarketOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MaxMarketOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MinMarketOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MinMarketOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MaxLimitOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MaxLimitOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MinLimitOrderVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MinLimitOrderVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_VolumeMultiple_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeMultipleType)jarg2; 
  if (arg1) (arg1)->VolumeMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_VolumeMultiple_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeMultipleType) ((arg1)->VolumeMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_PriceTick_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PriceTick = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentField_PriceTick_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PriceTick);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_CreateDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CreateDate, (const char *)arg2, 9-1);
      arg1->CreateDate[9-1] = 0;
    } else {
      arg1->CreateDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_CreateDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->CreateDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_OpenDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_OpenDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ExpireDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireDate, (const char *)arg2, 9-1);
      arg1->ExpireDate[9-1] = 0;
    } else {
      arg1->ExpireDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ExpireDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExpireDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_StartDelivDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartDelivDate, (const char *)arg2, 9-1);
      arg1->StartDelivDate[9-1] = 0;
    } else {
      arg1->StartDelivDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_StartDelivDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->StartDelivDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_EndDelivDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EndDelivDate, (const char *)arg2, 9-1);
      arg1->EndDelivDate[9-1] = 0;
    } else {
      arg1->EndDelivDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_EndDelivDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->EndDelivDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_InstLifePhase_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcInstLifePhaseType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcInstLifePhaseType)jarg2; 
  if (arg1) (arg1)->InstLifePhase = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentField_InstLifePhase_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcInstLifePhaseType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcInstLifePhaseType) ((arg1)->InstLifePhase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_IsTrading_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsTrading = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentField_IsTrading_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsTrading);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_PositionType_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPositionTypeType)jarg2; 
  if (arg1) (arg1)->PositionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentField_PositionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPositionTypeType) ((arg1)->PositionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_PositionDateType_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionDateTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPositionDateTypeType)jarg2; 
  if (arg1) (arg1)->PositionDateType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentField_PositionDateType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionDateTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPositionDateTypeType) ((arg1)->PositionDateType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_LongMarginRatio_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentField_LongMarginRatio_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ShortMarginRatio_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ShortMarginRatio_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MaxMarginSideAlgorithm_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMaxMarginSideAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcMaxMarginSideAlgorithmType)jarg2; 
  if (arg1) (arg1)->MaxMarginSideAlgorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentField_MaxMarginSideAlgorithm_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMaxMarginSideAlgorithmType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcMaxMarginSideAlgorithmType) ((arg1)->MaxMarginSideAlgorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve4_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve4, (const char *)arg2, 31-1);
      arg1->reserve4[31-1] = 0;
    } else {
      arg1->reserve4[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_reserve4_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve4);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_StrikePrice_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StrikePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentField_StrikePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StrikePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_OptionsType_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcOptionsTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcOptionsTypeType)jarg2; 
  if (arg1) (arg1)->OptionsType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentField_OptionsType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcOptionsTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcOptionsTypeType) ((arg1)->OptionsType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_UnderlyingMultiple_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcUnderlyingMultipleType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcUnderlyingMultipleType)jarg2; 
  if (arg1) (arg1)->UnderlyingMultiple = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentField_UnderlyingMultiple_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcUnderlyingMultipleType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcUnderlyingMultipleType) ((arg1)->UnderlyingMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_CombinationType_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcCombinationTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcCombinationTypeType)jarg2; 
  if (arg1) (arg1)->CombinationType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentField_CombinationType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcCombinationTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcCombinationTypeType) ((arg1)->CombinationType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentField_UnderlyingInstrID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UnderlyingInstrID, (const char *)arg2, 81-1);
      arg1->UnderlyingInstrID[81-1] = 0;
    } else {
      arg1->UnderlyingInstrID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentField_UnderlyingInstrID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->UnderlyingInstrID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentField() {
  void * jresult ;
  CThostFtdcInstrumentField *result = 0 ;
  
  result = (CThostFtdcInstrumentField *)new CThostFtdcInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentField(void * jarg1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerField_BrokerAbbr_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerAbbr, (const char *)arg2, 9-1);
      arg1->BrokerAbbr[9-1] = 0;
    } else {
      arg1->BrokerAbbr[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerField_BrokerAbbr_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerAbbr);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerField_BrokerName_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerName, (const char *)arg2, 81-1);
      arg1->BrokerName[81-1] = 0;
    } else {
      arg1->BrokerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerField_BrokerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerField() {
  void * jresult ;
  CThostFtdcBrokerField *result = 0 ;
  
  result = (CThostFtdcBrokerField *)new CThostFtdcBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerField(void * jarg1) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderField_InstallCount_set(void * jarg1, int jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  TThostFtdcInstallCountType arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (TThostFtdcInstallCountType)jarg2; 
  if (arg1) (arg1)->InstallCount = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTraderField_InstallCount_get(void * jarg1) {
  int jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  TThostFtdcInstallCountType result;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (TThostFtdcInstallCountType) ((arg1)->InstallCount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTraderField() {
  void * jresult ;
  CThostFtdcTraderField *result = 0 ;
  
  result = (CThostFtdcTraderField *)new CThostFtdcTraderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTraderField(void * jarg1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_InvestorGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_InvestorGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_InvestorName_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorName, (const char *)arg2, 81-1);
      arg1->InvestorName[81-1] = 0;
    } else {
      arg1->InvestorName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_InvestorName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_IdentifiedCardType_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdentifiedCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorField_IdentifiedCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_OpenDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_OpenDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_Mobile_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Mobile, (const char *)arg2, 41-1);
      arg1->Mobile[41-1] = 0;
    } else {
      arg1->Mobile[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_Mobile_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->Mobile);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_CommModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_CommModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorField_MarginModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorField_MarginModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorField() {
  void * jresult ;
  CThostFtdcInvestorField *result = 0 ;
  
  result = (CThostFtdcInvestorField *)new CThostFtdcInvestorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorField(void * jarg1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_ClientIDType_set(void * jarg1, char jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcClientIDTypeType)jarg2; 
  if (arg1) (arg1)->ClientIDType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_ClientIDType_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_BizType_set(void * jarg1, char jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBizTypeType arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcBizTypeType)jarg2; 
  if (arg1) (arg1)->BizType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_BizType_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBizTypeType result;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (TThostFtdcBizTypeType) ((arg1)->BizType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingCodeField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingCodeField() {
  void * jresult ;
  CThostFtdcTradingCodeField *result = 0 ;
  
  result = (CThostFtdcTradingCodeField *)new CThostFtdcTradingCodeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingCodeField(void * jarg1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcPartBrokerField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcPartBrokerField() {
  void * jresult ;
  CThostFtdcPartBrokerField *result = 0 ;
  
  result = (CThostFtdcPartBrokerField *)new CThostFtdcPartBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcPartBrokerField(void * jarg1) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSuperUserField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSuperUserField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSuperUserField_UserName_set(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 81-1);
      arg1->UserName[81-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSuperUserField_UserName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (char *) ((arg1)->UserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSuperUserField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSuperUserField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSuperUserField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSuperUserField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSuperUserField() {
  void * jresult ;
  CThostFtdcSuperUserField *result = 0 ;
  
  result = (CThostFtdcSuperUserField *)new CThostFtdcSuperUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSuperUserField(void * jarg1) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSuperUserFunctionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSuperUserFunctionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSuperUserFunctionField_FunctionCode_set(void * jarg1, char jarg2) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  TThostFtdcFunctionCodeType arg2 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  arg2 = (TThostFtdcFunctionCodeType)jarg2; 
  if (arg1) (arg1)->FunctionCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSuperUserFunctionField_FunctionCode_get(void * jarg1) {
  char jresult ;
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  TThostFtdcFunctionCodeType result;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  result = (TThostFtdcFunctionCodeType) ((arg1)->FunctionCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSuperUserFunctionField() {
  void * jresult ;
  CThostFtdcSuperUserFunctionField *result = 0 ;
  
  result = (CThostFtdcSuperUserFunctionField *)new CThostFtdcSuperUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSuperUserFunctionField(void * jarg1) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorGroupField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorGroupField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorGroupField_InvestorGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorGroupField_InvestorGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorGroupField_InvestorGroupName_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupName, (const char *)arg2, 41-1);
      arg1->InvestorGroupName[41-1] = 0;
    } else {
      arg1->InvestorGroupName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorGroupField_InvestorGroupName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorGroupField() {
  void * jresult ;
  CThostFtdcInvestorGroupField *result = 0 ;
  
  result = (CThostFtdcInvestorGroupField *)new CThostFtdcInvestorGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorGroupField(void * jarg1) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreMortgage_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreMortgage_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreCredit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreCredit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreCredit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreCredit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreDeposit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreDeposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreDeposit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreDeposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreBalance_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreBalance_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_InterestBase_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->InterestBase = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_InterestBase_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->InterestBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Interest_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Interest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Interest_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Interest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Deposit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Deposit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Withdraw_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Withdraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Withdraw_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenCash_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenCash_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenCommission_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CurrMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CurrMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CurrMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CashIn_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CashIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Commission_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Commission_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PositionProfit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PositionProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Balance_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Balance_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Available_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Available_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_WithdrawQuota_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->WithdrawQuota = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_WithdrawQuota_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->WithdrawQuota);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Reserve_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Reserve_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Credit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Credit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Credit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Credit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Mortgage_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Mortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_Mortgage_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Mortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_ExchangeMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_ExchangeMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_DeliveryMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->DeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_DeliveryMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->DeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_ExchangeDeliveryMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeDeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_ExchangeDeliveryMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeDeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_ReserveBalance_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ReserveBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_ReserveBalance_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ReserveBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreFundMortgageIn_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreFundMortgageIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreFundMortgageOut_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_PreFundMortgageOut_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FundMortgageIn_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FundMortgageIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FundMortgageOut_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FundMortgageOut_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FundMortgageAvailable_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageAvailable = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FundMortgageAvailable_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageAvailable);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_MortgageableFund_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MortgageableFund = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_MortgageableFund_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MortgageableFund);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductFrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductFrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductCommission_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductFrozenCommission_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductFrozenCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductPositionProfit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductPositionProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductCloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductCloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfitByAlg = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfitByAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductExchangeMargin_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_SpecProductExchangeMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_BizType_set(void * jarg1, char jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcBizTypeType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcBizTypeType)jarg2; 
  if (arg1) (arg1)->BizType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_BizType_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcBizTypeType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcBizTypeType) ((arg1)->BizType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenSwap_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenSwap = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_FrozenSwap_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_RemainSwap_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->RemainSwap = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountField_RemainSwap_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->RemainSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingAccountField() {
  void * jresult ;
  CThostFtdcTradingAccountField *result = 0 ;
  
  result = (CThostFtdcTradingAccountField *)new CThostFtdcTradingAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingAccountField(void * jarg1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PosiDirection_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PosiDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionDate_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPositionDateType)jarg2; 
  if (arg1) (arg1)->PositionDate = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionDate_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPositionDateType) ((arg1)->PositionDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_YdPosition_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->YdPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_YdPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->YdPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_Position_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Position = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_Position_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Position);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_LongFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->LongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_LongFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->LongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ShortFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ShortFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_LongFrozenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_LongFrozenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ShortFrozenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ShortFrozenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_OpenVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->OpenVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_OpenVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->OpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CloseVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_OpenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_OpenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionCost_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionCost_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PreMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PreMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_UseMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_UseMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_FrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_FrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_FrozenCash_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_FrozenCash_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_FrozenCommission_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_FrozenCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CashIn_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CashIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_Commission_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_Commission_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionProfit_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PreSettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PreSettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_SettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_SettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_OpenCost_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_OpenCost_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ExchangeMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ExchangeMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CombPosition_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CombPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CombLongFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombLongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CombLongFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombLongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CombShortFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CombShortFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseProfitByDate_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseProfitByDate_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseProfitByTrade_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_CloseProfitByTrade_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TodayPosition_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TodayPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TodayPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TodayPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_MarginRateByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_MarginRateByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_MarginRateByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_MarginRateByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_StrikeFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->StrikeFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_StrikeFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->StrikeFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_StrikeFrozenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->StrikeFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_StrikeFrozenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->StrikeFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_AbandonFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AbandonFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_AbandonFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AbandonFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_YdStrikeFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->YdStrikeFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_YdStrikeFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->YdStrikeFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionCostOffset_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionCostOffset = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_PositionCostOffset_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionCostOffset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TasPosition_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TasPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TasPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TasPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TasPositionCost_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TasPositionCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_TasPositionCost_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TasPositionCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorPositionField() {
  void * jresult ;
  CThostFtdcInvestorPositionField *result = 0 ;
  
  result = (CThostFtdcInvestorPositionField *)new CThostFtdcInvestorPositionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorPositionField(void * jarg1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_IsRelative_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_IsRelative_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentMarginRateField() {
  void * jresult ;
  CThostFtdcInstrumentMarginRateField *result = 0 ;
  
  result = (CThostFtdcInstrumentMarginRateField *)new CThostFtdcInstrumentMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentMarginRateField(void * jarg1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_BizType_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcBizTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcBizTypeType)jarg2; 
  if (arg1) (arg1)->BizType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_BizType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcBizTypeType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcBizTypeType) ((arg1)->BizType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentCommissionRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentCommissionRateField() {
  void * jresult ;
  CThostFtdcInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcInstrumentCommissionRateField *)new CThostFtdcInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentCommissionRateField(void * jarg1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_LastPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_LastPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreSettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreSettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreClosePrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreClosePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreOpenInterest_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->PreOpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreOpenInterest_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_OpenPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_OpenPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_HighestPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->HighestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_HighestPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_LowestPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_LowestPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_Turnover_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_Turnover_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_OpenInterest_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->OpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_OpenInterest_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ClosePrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ClosePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_SettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_SettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_UpperLimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UpperLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_UpperLimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_LowerLimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowerLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_LowerLimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreDelta_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->PreDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_PreDelta_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_CurrDelta_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CurrDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_CurrDelta_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_UpdateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_UpdateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_UpdateMillisec_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->UpdateMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_UpdateMillisec_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice1_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice1_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume1_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume1_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice1_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice1_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume1_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume1_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice2_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice2_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume2_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume2_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice2_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice2_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume2_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume2_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice3_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice3_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume3_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume3_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice3_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice3_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume3_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume3_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice4_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice4_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume4_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume4_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice4_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice4_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume4_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume4_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice5_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidPrice5_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume5_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_BidVolume5_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice5_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskPrice5_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume5_set(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AskVolume5_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AveragePrice_set(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AveragePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_AveragePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AveragePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ActionDay_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ActionDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepthMarketDataField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcDepthMarketDataField() {
  void * jresult ;
  CThostFtdcDepthMarketDataField *result = 0 ;
  
  result = (CThostFtdcDepthMarketDataField *)new CThostFtdcDepthMarketDataField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcDepthMarketDataField(void * jarg1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_TradingRight_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcTradingRightType)jarg2; 
  if (arg1) (arg1)->TradingRight = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_TradingRight_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentTradingRightField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentTradingRightField() {
  void * jresult ;
  CThostFtdcInstrumentTradingRightField *result = 0 ;
  
  result = (CThostFtdcInstrumentTradingRightField *)new CThostFtdcInstrumentTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentTradingRightField(void * jarg1) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_UserName_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 81-1);
      arg1->UserName[81-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_UserName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->UserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_UserType_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (TThostFtdcUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_UserType_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcUserTypeType result;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_IsUsingOTP_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsUsingOTP = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_IsUsingOTP_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsUsingOTP);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_IsAuthForce_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAuthForce = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserField_IsAuthForce_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAuthForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerUserField() {
  void * jresult ;
  CThostFtdcBrokerUserField *result = 0 ;
  
  result = (CThostFtdcBrokerUserField *)new CThostFtdcBrokerUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerUserField(void * jarg1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_LastUpdateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastUpdateTime, (const char *)arg2, 17-1);
      arg1->LastUpdateTime[17-1] = 0;
    } else {
      arg1->LastUpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_LastUpdateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->LastUpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_LastLoginTime_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLoginTime, (const char *)arg2, 17-1);
      arg1->LastLoginTime[17-1] = 0;
    } else {
      arg1->LastLoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_LastLoginTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->LastLoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_ExpireDate_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireDate, (const char *)arg2, 9-1);
      arg1->ExpireDate[9-1] = 0;
    } else {
      arg1->ExpireDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_ExpireDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->ExpireDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_WeakExpireDate_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->WeakExpireDate, (const char *)arg2, 9-1);
      arg1->WeakExpireDate[9-1] = 0;
    } else {
      arg1->WeakExpireDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserPasswordField_WeakExpireDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->WeakExpireDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerUserPasswordField() {
  void * jresult ;
  CThostFtdcBrokerUserPasswordField *result = 0 ;
  
  result = (CThostFtdcBrokerUserPasswordField *)new CThostFtdcBrokerUserPasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerUserPasswordField(void * jarg1) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserFunctionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserFunctionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserFunctionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserFunctionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  TThostFtdcBrokerFunctionCodeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  arg2 = (TThostFtdcBrokerFunctionCodeType)jarg2; 
  if (arg1) (arg1)->BrokerFunctionCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  TThostFtdcBrokerFunctionCodeType result;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  result = (TThostFtdcBrokerFunctionCodeType) ((arg1)->BrokerFunctionCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerUserFunctionField() {
  void * jresult ;
  CThostFtdcBrokerUserFunctionField *result = 0 ;
  
  result = (CThostFtdcBrokerUserFunctionField *)new CThostFtdcBrokerUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerUserFunctionField(void * jarg1) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_TraderConnectStatus_set(void * jarg1, char jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcTraderConnectStatusType)jarg2; 
  if (arg1) (arg1)->TraderConnectStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_TraderConnectStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType result;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (TThostFtdcTraderConnectStatusType) ((arg1)->TraderConnectStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectRequestDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestDate, (const char *)arg2, 9-1);
      arg1->ConnectRequestDate[9-1] = 0;
    } else {
      arg1->ConnectRequestDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectRequestDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectRequestTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestTime, (const char *)arg2, 9-1);
      arg1->ConnectRequestTime[9-1] = 0;
    } else {
      arg1->ConnectRequestTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectRequestTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_LastReportDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_LastReportDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_LastReportTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_LastReportTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectDate, (const char *)arg2, 9-1);
      arg1->ConnectDate[9-1] = 0;
    } else {
      arg1->ConnectDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectTime, (const char *)arg2, 9-1);
      arg1->ConnectTime[9-1] = 0;
    } else {
      arg1->ConnectTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_ConnectTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_StartDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartDate, (const char *)arg2, 9-1);
      arg1->StartDate[9-1] = 0;
    } else {
      arg1->StartDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_StartDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_StartTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 9-1);
      arg1->StartTime[9-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_StartTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_MaxTradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxTradeID, (const char *)arg2, 21-1);
      arg1->MaxTradeID[21-1] = 0;
    } else {
      arg1->MaxTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_MaxTradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_MaxOrderMessageReference_set(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderMessageReference, (const char *)arg2, 7-1);
      arg1->MaxOrderMessageReference[7-1] = 0;
    } else {
      arg1->MaxOrderMessageReference[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTraderOfferField_MaxOrderMessageReference_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderMessageReference);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTraderOfferField() {
  void * jresult ;
  CThostFtdcTraderOfferField *result = 0 ;
  
  result = (CThostFtdcTraderOfferField *)new CThostFtdcTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTraderOfferField(void * jarg1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_Content_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_Content_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->Content);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSettlementInfoField() {
  void * jresult ;
  CThostFtdcSettlementInfoField *result = 0 ;
  
  result = (CThostFtdcSettlementInfoField *)new CThostFtdcSettlementInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSettlementInfoField(void * jarg1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_IsRelative_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_IsRelative_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentMarginRateAdjustField() {
  void * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *result = 0 ;
  
  result = (CThostFtdcInstrumentMarginRateAdjustField *)new CThostFtdcInstrumentMarginRateAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentMarginRateAdjustField(void * jarg1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeMarginRateField() {
  void * jresult ;
  CThostFtdcExchangeMarginRateField *result = 0 ;
  
  result = (CThostFtdcExchangeMarginRateField *)new CThostFtdcExchangeMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeMarginRateField(void * jarg1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ExchLongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ExchLongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchLongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchLongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ExchShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ExchShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->NoLongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->NoLongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->NoLongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->NoLongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->NoShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->NoShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->NoShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->NoShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeMarginRateAdjustField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeMarginRateAdjustField() {
  void * jresult ;
  CThostFtdcExchangeMarginRateAdjustField *result = 0 ;
  
  result = (CThostFtdcExchangeMarginRateAdjustField *)new CThostFtdcExchangeMarginRateAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeMarginRateAdjustField(void * jarg1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_FromCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_FromCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_FromCurrencyUnit_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcCurrencyUnitType arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (TThostFtdcCurrencyUnitType)jarg2; 
  if (arg1) (arg1)->FromCurrencyUnit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_FromCurrencyUnit_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcCurrencyUnitType result;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (TThostFtdcCurrencyUnitType) ((arg1)->FromCurrencyUnit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_ToCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_ToCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->ToCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_ExchangeRate_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcExchangeRateType arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (TThostFtdcExchangeRateType)jarg2; 
  if (arg1) (arg1)->ExchangeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeRateField_ExchangeRate_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcExchangeRateType result;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (TThostFtdcExchangeRateType) ((arg1)->ExchangeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeRateField() {
  void * jresult ;
  CThostFtdcExchangeRateField *result = 0 ;
  
  result = (CThostFtdcExchangeRateField *)new CThostFtdcExchangeRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeRateField(void * jarg1) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementRefField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementRefField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementRefField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSettlementRefField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSettlementRefField() {
  void * jresult ;
  CThostFtdcSettlementRefField *result = 0 ;
  
  result = (CThostFtdcSettlementRefField *)new CThostFtdcSettlementRefField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSettlementRefField(void * jarg1) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_CurrDate_set(void * jarg1, char * jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrDate, (const char *)arg2, 9-1);
      arg1->CurrDate[9-1] = 0;
    } else {
      arg1->CurrDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_CurrDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (char *) ((arg1)->CurrDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_CurrTime_set(void * jarg1, char * jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrTime, (const char *)arg2, 9-1);
      arg1->CurrTime[9-1] = 0;
    } else {
      arg1->CurrTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_CurrTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (char *) ((arg1)->CurrTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_CurrMillisec_set(void * jarg1, int jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->CurrMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_CurrMillisec_get(void * jarg1) {
  int jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->CurrMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_ActionDay_set(void * jarg1, char * jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCurrentTimeField_ActionDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCurrentTimeField() {
  void * jresult ;
  CThostFtdcCurrentTimeField *result = 0 ;
  
  result = (CThostFtdcCurrentTimeField *)new CThostFtdcCurrentTimeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCurrentTimeField(void * jarg1) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCommPhaseField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCommPhaseField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCommPhaseField_CommPhaseNo_set(void * jarg1, short jarg2) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  TThostFtdcCommPhaseNoType arg2 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  arg2 = (TThostFtdcCommPhaseNoType)jarg2; 
  if (arg1) (arg1)->CommPhaseNo = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CThostFtdcCommPhaseField_CommPhaseNo_get(void * jarg1) {
  short jresult ;
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  TThostFtdcCommPhaseNoType result;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  result = (TThostFtdcCommPhaseNoType) ((arg1)->CommPhaseNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCommPhaseField_SystemID_set(void * jarg1, char * jarg2) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemID, (const char *)arg2, 21-1);
      arg1->SystemID[21-1] = 0;
    } else {
      arg1->SystemID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCommPhaseField_SystemID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  result = (char *) ((arg1)->SystemID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCommPhaseField() {
  void * jresult ;
  CThostFtdcCommPhaseField *result = 0 ;
  
  result = (CThostFtdcCommPhaseField *)new CThostFtdcCommPhaseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCommPhaseField(void * jarg1) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_LoginDate_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginDate, (const char *)arg2, 9-1);
      arg1->LoginDate[9-1] = 0;
    } else {
      arg1->LoginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_LoginDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->LoginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_LoginTime_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_LoginTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->LoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_InterfaceProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_InterfaceProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_ProtocolInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_ProtocolInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_SystemName_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_SystemName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->SystemName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_PasswordDeprecated_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PasswordDeprecated, (const char *)arg2, 41-1);
      arg1->PasswordDeprecated[41-1] = 0;
    } else {
      arg1->PasswordDeprecated[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_PasswordDeprecated_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->PasswordDeprecated);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_MaxOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderRef, (const char *)arg2, 13-1);
      arg1->MaxOrderRef[13-1] = 0;
    } else {
      arg1->MaxOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_MaxOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_SHFETime_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SHFETime, (const char *)arg2, 9-1);
      arg1->SHFETime[9-1] = 0;
    } else {
      arg1->SHFETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_SHFETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->SHFETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_DCETime_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DCETime, (const char *)arg2, 9-1);
      arg1->DCETime[9-1] = 0;
    } else {
      arg1->DCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_DCETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->DCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_CZCETime_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CZCETime, (const char *)arg2, 9-1);
      arg1->CZCETime[9-1] = 0;
    } else {
      arg1->CZCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_CZCETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->CZCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_FFEXTime_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FFEXTime, (const char *)arg2, 9-1);
      arg1->FFEXTime[9-1] = 0;
    } else {
      arg1->FFEXTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_FFEXTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->FFEXTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_OneTimePassword_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OneTimePassword, (const char *)arg2, 41-1);
      arg1->OneTimePassword[41-1] = 0;
    } else {
      arg1->OneTimePassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_OneTimePassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->OneTimePassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_INETime_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->INETime, (const char *)arg2, 9-1);
      arg1->INETime[9-1] = 0;
    } else {
      arg1->INETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_INETime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->INETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_IsQryControl_set(void * jarg1, int jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsQryControl = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_IsQryControl_get(void * jarg1) {
  int jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsQryControl);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_LoginRemark_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_LoginRemark_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->LoginRemark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginInfoField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcLoginInfoField() {
  void * jresult ;
  CThostFtdcLoginInfoField *result = 0 ;
  
  result = (CThostFtdcLoginInfoField *)new CThostFtdcLoginInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcLoginInfoField(void * jarg1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLogoutAllField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcLogoutAllField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLogoutAllField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcLogoutAllField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLogoutAllField_SystemName_set(void * jarg1, char * jarg2) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLogoutAllField_SystemName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  result = (char *) ((arg1)->SystemName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcLogoutAllField() {
  void * jresult ;
  CThostFtdcLogoutAllField *result = 0 ;
  
  result = (CThostFtdcLogoutAllField *)new CThostFtdcLogoutAllField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcLogoutAllField(void * jarg1) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_LastReportDate_set(void * jarg1, char * jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_LastReportDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (char *) ((arg1)->LastReportDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_LastReportTime_set(void * jarg1, char * jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_LastReportTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (char *) ((arg1)->LastReportTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFrontStatusField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcFrontStatusField() {
  void * jresult ;
  CThostFtdcFrontStatusField *result = 0 ;
  
  result = (CThostFtdcFrontStatusField *)new CThostFtdcFrontStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcFrontStatusField(void * jarg1) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_OldPassword_set(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_OldPassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_NewPassword_set(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserPasswordUpdateField_NewPassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcUserPasswordUpdateField() {
  void * jresult ;
  CThostFtdcUserPasswordUpdateField *result = 0 ;
  
  result = (CThostFtdcUserPasswordUpdateField *)new CThostFtdcUserPasswordUpdateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcUserPasswordUpdateField(void * jarg1) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_OrderPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOrderField_OrderPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOrderField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_CombOffsetFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_CombOffsetFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_CombHedgeFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_CombHedgeFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInputOrderField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_VolumeTotalOriginal_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderField_VolumeTotalOriginal_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_TimeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOrderField_TimeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_GTDDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_GTDDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_VolumeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOrderField_VolumeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_MinVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderField_MinVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ContingentCondition_set(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ContingentCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_StopPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInputOrderField_StopPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ForceCloseReason_set(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ForceCloseReason_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_IsAutoSuspend_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderField_IsAutoSuspend_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_UserForceClose_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderField_UserForceClose_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_IsSwapOrder_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderField_IsSwapOrder_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputOrderField() {
  void * jresult ;
  CThostFtdcInputOrderField *result = 0 ;
  
  result = (CThostFtdcInputOrderField *)new CThostFtdcInputOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputOrderField(void * jarg1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_CombOffsetFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_CombOffsetFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_CombHedgeFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_CombHedgeFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOrderField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeTotalOriginal_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeTotalOriginal_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_TimeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_TimeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_GTDDate_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_GTDDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_MinVolume_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_MinVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ContingentCondition_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_ContingentCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_StopPrice_set(void * jarg1, double jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOrderField_StopPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ForceCloseReason_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_ForceCloseReason_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_IsAutoSuspend_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_IsAutoSuspend_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderSource_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderSource_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderStatus_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->OrderStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderType_set(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderField_OrderType_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeTraded_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTraded = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeTraded_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeTotal_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_VolumeTotal_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ActiveTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ActiveTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_SuspendTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_SuspendTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->SuspendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_UpdateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_UpdateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ActiveTraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ActiveTraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_UserForceClose_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_UserForceClose_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ActiveUserID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ActiveUserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_BrokerOrderSeq_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_BrokerOrderSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_RelativeOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelativeOrderSysID, (const char *)arg2, 21-1);
      arg1->RelativeOrderSysID[21-1] = 0;
    } else {
      arg1->RelativeOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_RelativeOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->RelativeOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ZCETotalTradedVolume_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ZCETotalTradedVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_ZCETotalTradedVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ZCETotalTradedVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_IsSwapOrder_set(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderField_IsSwapOrder_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 16-1);
      arg1->reserve3[16-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOrderField() {
  void * jresult ;
  CThostFtdcOrderField *result = 0 ;
  
  result = (CThostFtdcOrderField *)new CThostFtdcOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOrderField(void * jarg1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_CombOffsetFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_CombOffsetFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_CombHedgeFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_CombHedgeFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeTotalOriginal_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeTotalOriginal_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_TimeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_TimeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_GTDDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_GTDDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_MinVolume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_MinVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ContingentCondition_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ContingentCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_StopPrice_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_StopPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ForceCloseReason_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ForceCloseReason_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_IsAutoSuspend_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_IsAutoSuspend_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderSource_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderSource_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->OrderStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderType_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_OrderType_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeTraded_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTraded = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeTraded_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeTotal_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_VolumeTotal_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ActiveTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ActiveTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_SuspendTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_SuspendTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->SuspendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_UpdateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_UpdateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ActiveTraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ActiveTraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeOrderField() {
  void * jresult ;
  CThostFtdcExchangeOrderField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderField *)new CThostFtdcExchangeOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeOrderField(void * jarg1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeOrderInsertErrorField() {
  void * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderInsertErrorField *)new CThostFtdcExchangeOrderInsertErrorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeOrderInsertErrorField(void * jarg1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_OrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_OrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_VolumeChange_set(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_VolumeChange_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputOrderActionField() {
  void * jresult ;
  CThostFtdcInputOrderActionField *result = 0 ;
  
  result = (CThostFtdcInputOrderActionField *)new CThostFtdcInputOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputOrderActionField(void * jarg1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOrderActionField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_VolumeChange_set(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderActionField_VolumeChange_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOrderActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOrderActionField() {
  void * jresult ;
  CThostFtdcOrderActionField *result = 0 ;
  
  result = (CThostFtdcOrderActionField *)new CThostFtdcOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOrderActionField(void * jarg1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_VolumeChange_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_VolumeChange_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeOrderActionField() {
  void * jresult ;
  CThostFtdcExchangeOrderActionField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderActionField *)new CThostFtdcExchangeOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeOrderActionField(void * jarg1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOrderActionErrorField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeOrderActionErrorField() {
  void * jresult ;
  CThostFtdcExchangeOrderActionErrorField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderActionErrorField *)new CThostFtdcExchangeOrderActionErrorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeOrderActionErrorField(void * jarg1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradingRole_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradingRoleType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcTradingRoleType)jarg2; 
  if (arg1) (arg1)->TradingRole = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradingRole_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradingRoleType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcTradingRoleType) ((arg1)->TradingRole);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_Price_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->Price = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_Price_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->Price);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeType_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeTypeType)jarg2; 
  if (arg1) (arg1)->TradeType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeType_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeTypeType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_PriceSource_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceSourceType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceSourceType)jarg2; 
  if (arg1) (arg1)->PriceSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_PriceSource_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceSourceType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcPriceSourceType) ((arg1)->PriceSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeSource_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeSourceType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeSourceType)jarg2; 
  if (arg1) (arg1)->TradeSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_TradeSource_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeSourceType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcTradeSourceType) ((arg1)->TradeSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeTradeField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeTradeField() {
  void * jresult ;
  CThostFtdcExchangeTradeField *result = 0 ;
  
  result = (CThostFtdcExchangeTradeField *)new CThostFtdcExchangeTradeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeTradeField(void * jarg1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TradingRole_set(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradingRoleType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcTradingRoleType)jarg2; 
  if (arg1) (arg1)->TradingRole = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeField_TradingRole_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradingRoleType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcTradingRoleType) ((arg1)->TradingRole);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_Price_set(void * jarg1, double jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->Price = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradeField_Price_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->Price);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradeField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeType_set(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeTypeType)jarg2; 
  if (arg1) (arg1)->TradeType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeType_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeTypeType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_PriceSource_set(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceSourceType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceSourceType)jarg2; 
  if (arg1) (arg1)->PriceSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeField_PriceSource_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceSourceType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcPriceSourceType) ((arg1)->PriceSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradeField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradeField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_BrokerOrderSeq_set(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradeField_BrokerOrderSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeSource_set(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeSourceType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeSourceType)jarg2; 
  if (arg1) (arg1)->TradeSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeField_TradeSource_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeSourceType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcTradeSourceType) ((arg1)->TradeSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradeField() {
  void * jresult ;
  CThostFtdcTradeField *result = 0 ;
  
  result = (CThostFtdcTradeField *)new CThostFtdcTradeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradeField(void * jarg1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcUserSessionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcUserSessionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_LoginDate_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginDate, (const char *)arg2, 9-1);
      arg1->LoginDate[9-1] = 0;
    } else {
      arg1->LoginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_LoginDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->LoginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_LoginTime_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_LoginTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->LoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_InterfaceProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_InterfaceProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_ProtocolInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_ProtocolInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_LoginRemark_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_LoginRemark_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->LoginRemark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSessionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSessionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcUserSessionField() {
  void * jresult ;
  CThostFtdcUserSessionField *result = 0 ;
  
  result = (CThostFtdcUserSessionField *)new CThostFtdcUserSessionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcUserSessionField(void * jarg1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_MaxVolume_set(void * jarg1, int jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_MaxVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryMaxOrderVolumeField() {
  void * jresult ;
  CThostFtdcQryMaxOrderVolumeField *result = 0 ;
  
  result = (CThostFtdcQryMaxOrderVolumeField *)new CThostFtdcQryMaxOrderVolumeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryMaxOrderVolumeField(void * jarg1) {
  CThostFtdcQryMaxOrderVolumeField *arg1 = (CThostFtdcQryMaxOrderVolumeField *) 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_ConfirmDate_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConfirmDate, (const char *)arg2, 9-1);
      arg1->ConfirmDate[9-1] = 0;
    } else {
      arg1->ConfirmDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_ConfirmDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->ConfirmDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_ConfirmTime_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConfirmTime, (const char *)arg2, 9-1);
      arg1->ConfirmTime[9-1] = 0;
    } else {
      arg1->ConfirmTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_ConfirmTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->ConfirmTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSettlementInfoConfirmField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSettlementInfoConfirmField() {
  void * jresult ;
  CThostFtdcSettlementInfoConfirmField *result = 0 ;
  
  result = (CThostFtdcSettlementInfoConfirmField *)new CThostFtdcSettlementInfoConfirmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSettlementInfoConfirmField(void * jarg1) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_DepositSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_DepositSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->DepositSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_Deposit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_Deposit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_IsForce_set(void * jarg1, int jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsForce = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_IsForce_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDepositField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncDepositField() {
  void * jresult ;
  CThostFtdcSyncDepositField *result = 0 ;
  
  result = (CThostFtdcSyncDepositField *)new CThostFtdcSyncDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncDepositField(void * jarg1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_MortgageSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MortgageSeqNo, (const char *)arg2, 15-1);
      arg1->MortgageSeqNo[15-1] = 0;
    } else {
      arg1->MortgageSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_MortgageSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->MortgageSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_FromCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_FromCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_MortgageAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MortgageAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_MortgageAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MortgageAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_ToCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncFundMortgageField_ToCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->ToCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncFundMortgageField() {
  void * jresult ;
  CThostFtdcSyncFundMortgageField *result = 0 ;
  
  result = (CThostFtdcSyncFundMortgageField *)new CThostFtdcSyncFundMortgageField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncFundMortgageField(void * jarg1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerSyncField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerSyncField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerSyncField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerSyncField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerSyncField() {
  void * jresult ;
  CThostFtdcBrokerSyncField *result = 0 ;
  
  result = (CThostFtdcBrokerSyncField *)new CThostFtdcBrokerSyncField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerSyncField(void * jarg1) {
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  
  arg1 = (CThostFtdcBrokerSyncField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_InvestorGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_InvestorGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_InvestorName_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorName, (const char *)arg2, 81-1);
      arg1->InvestorName[81-1] = 0;
    } else {
      arg1->InvestorName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_InvestorName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_IdentifiedCardType_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdentifiedCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_IdentifiedCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_OpenDate_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_OpenDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_Mobile_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Mobile, (const char *)arg2, 41-1);
      arg1->Mobile[41-1] = 0;
    } else {
      arg1->Mobile[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_Mobile_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->Mobile);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_CommModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_CommModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_MarginModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorField_MarginModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingInvestorField() {
  void * jresult ;
  CThostFtdcSyncingInvestorField *result = 0 ;
  
  result = (CThostFtdcSyncingInvestorField *)new CThostFtdcSyncingInvestorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingInvestorField(void * jarg1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_ClientIDType_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcClientIDTypeType)jarg2; 
  if (arg1) (arg1)->ClientIDType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingTradingCodeField_ClientIDType_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingTradingCodeField() {
  void * jresult ;
  CThostFtdcSyncingTradingCodeField *result = 0 ;
  
  result = (CThostFtdcSyncingTradingCodeField *)new CThostFtdcSyncingTradingCodeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingTradingCodeField(void * jarg1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorGroupField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorGroupField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorGroupField_InvestorGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorGroupField_InvestorGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorGroupField_InvestorGroupName_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupName, (const char *)arg2, 41-1);
      arg1->InvestorGroupName[41-1] = 0;
    } else {
      arg1->InvestorGroupName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorGroupField_InvestorGroupName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingInvestorGroupField() {
  void * jresult ;
  CThostFtdcSyncingInvestorGroupField *result = 0 ;
  
  result = (CThostFtdcSyncingInvestorGroupField *)new CThostFtdcSyncingInvestorGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingInvestorGroupField(void * jarg1) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreMortgage_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreMortgage_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreCredit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreCredit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreCredit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreCredit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreDeposit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreDeposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreDeposit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreDeposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreBalance_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreBalance_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_InterestBase_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->InterestBase = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_InterestBase_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->InterestBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Interest_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Interest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Interest_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Interest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Deposit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Deposit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Withdraw_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Withdraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Withdraw_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenCash_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenCash_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenCommission_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CurrMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CurrMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CurrMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CashIn_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CashIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Commission_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Commission_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PositionProfit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PositionProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Balance_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Balance_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Available_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Available_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_WithdrawQuota_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->WithdrawQuota = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_WithdrawQuota_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->WithdrawQuota);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Reserve_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Reserve_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Credit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Credit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Credit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Credit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Mortgage_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Mortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_Mortgage_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Mortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_ExchangeMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_ExchangeMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_DeliveryMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->DeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_DeliveryMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->DeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeDeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeDeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_ReserveBalance_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ReserveBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_ReserveBalance_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ReserveBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FundMortgageIn_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FundMortgageIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FundMortgageOut_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FundMortgageOut_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageAvailable = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageAvailable);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_MortgageableFund_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MortgageableFund = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_MortgageableFund_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MortgageableFund);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductCommission_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfitByAlg = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfitByAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenSwap_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenSwap = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_FrozenSwap_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_RemainSwap_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->RemainSwap = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingTradingAccountField_RemainSwap_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->RemainSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingTradingAccountField() {
  void * jresult ;
  CThostFtdcSyncingTradingAccountField *result = 0 ;
  
  result = (CThostFtdcSyncingTradingAccountField *)new CThostFtdcSyncingTradingAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingTradingAccountField(void * jarg1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PosiDirection_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PosiDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionDate_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPositionDateType)jarg2; 
  if (arg1) (arg1)->PositionDate = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionDate_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPositionDateType) ((arg1)->PositionDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_YdPosition_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->YdPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_YdPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->YdPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_Position_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Position = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_Position_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Position);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_LongFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->LongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_LongFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->LongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ShortFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ShortFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_OpenVolume_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->OpenVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_OpenVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->OpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseVolume_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CloseVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_OpenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_OpenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionCost_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionCost_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PreMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PreMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_UseMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_UseMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_FrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_FrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_FrozenCash_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_FrozenCash_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_FrozenCommission_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_FrozenCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CashIn_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CashIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_Commission_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_Commission_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionProfit_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_SettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_SettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_OpenCost_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_OpenCost_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ExchangeMargin_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ExchangeMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CombPosition_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CombPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CombLongFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombLongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CombLongFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombLongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CombShortFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CombShortFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TodayPosition_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TodayPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TodayPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TodayPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_StrikeFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->StrikeFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_StrikeFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->StrikeFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->StrikeFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->StrikeFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_AbandonFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AbandonFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_AbandonFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AbandonFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_YdStrikeFrozen_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->YdStrikeFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_YdStrikeFrozen_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->YdStrikeFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionCostOffset_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionCostOffset = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_PositionCostOffset_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionCostOffset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TasPosition_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TasPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TasPosition_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TasPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TasPositionCost_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TasPositionCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_TasPositionCost_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TasPositionCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInvestorPositionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingInvestorPositionField() {
  void * jresult ;
  CThostFtdcSyncingInvestorPositionField *result = 0 ;
  
  result = (CThostFtdcSyncingInvestorPositionField *)new CThostFtdcSyncingInvestorPositionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingInvestorPositionField(void * jarg1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_IsRelative_set(void * jarg1, int jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_IsRelative_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingInstrumentMarginRateField() {
  void * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *result = 0 ;
  
  result = (CThostFtdcSyncingInstrumentMarginRateField *)new CThostFtdcSyncingInstrumentMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingInstrumentMarginRateField(void * jarg1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingInstrumentCommissionRateField() {
  void * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcSyncingInstrumentCommissionRateField *)new CThostFtdcSyncingInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingInstrumentCommissionRateField(void * jarg1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_TradingRight_set(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcTradingRightType)jarg2; 
  if (arg1) (arg1)->TradingRight = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_TradingRight_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncingInstrumentTradingRightField() {
  void * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *result = 0 ;
  
  result = (CThostFtdcSyncingInstrumentTradingRightField *)new CThostFtdcSyncingInstrumentTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncingInstrumentTradingRightField(void * jarg1) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InsertTimeStart_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InsertTimeStart_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InsertTimeEnd_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InsertTimeEnd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryOrderField() {
  void * jresult ;
  CThostFtdcQryOrderField *result = 0 ;
  
  result = (CThostFtdcQryOrderField *)new CThostFtdcQryOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryOrderField(void * jarg1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_TradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_TradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_TradeTimeStart_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTimeStart, (const char *)arg2, 9-1);
      arg1->TradeTimeStart[9-1] = 0;
    } else {
      arg1->TradeTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_TradeTimeStart_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_TradeTimeEnd_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTimeEnd, (const char *)arg2, 9-1);
      arg1->TradeTimeEnd[9-1] = 0;
    } else {
      arg1->TradeTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_TradeTimeEnd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradeField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradeField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTradeField() {
  void * jresult ;
  CThostFtdcQryTradeField *result = 0 ;
  
  result = (CThostFtdcQryTradeField *)new CThostFtdcQryTradeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTradeField(void * jarg1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInvestorPositionField() {
  void * jresult ;
  CThostFtdcQryInvestorPositionField *result = 0 ;
  
  result = (CThostFtdcQryInvestorPositionField *)new CThostFtdcQryInvestorPositionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInvestorPositionField(void * jarg1) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_BizType_set(void * jarg1, char jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  TThostFtdcBizTypeType arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcBizTypeType)jarg2; 
  if (arg1) (arg1)->BizType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_BizType_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  TThostFtdcBizTypeType result;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (TThostFtdcBizTypeType) ((arg1)->BizType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTradingAccountField() {
  void * jresult ;
  CThostFtdcQryTradingAccountField *result = 0 ;
  
  result = (CThostFtdcQryTradingAccountField *)new CThostFtdcQryTradingAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTradingAccountField(void * jarg1) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInvestorField() {
  void * jresult ;
  CThostFtdcQryInvestorField *result = 0 ;
  
  result = (CThostFtdcQryInvestorField *)new CThostFtdcQryInvestorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInvestorField(void * jarg1) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_ClientIDType_set(void * jarg1, char jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcClientIDTypeType)jarg2; 
  if (arg1) (arg1)->ClientIDType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_ClientIDType_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingCodeField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTradingCodeField() {
  void * jresult ;
  CThostFtdcQryTradingCodeField *result = 0 ;
  
  result = (CThostFtdcQryTradingCodeField *)new CThostFtdcQryTradingCodeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTradingCodeField(void * jarg1) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorGroupField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorGroupField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInvestorGroupField() {
  void * jresult ;
  CThostFtdcQryInvestorGroupField *result = 0 ;
  
  result = (CThostFtdcQryInvestorGroupField *)new CThostFtdcQryInvestorGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInvestorGroupField(void * jarg1) {
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentMarginRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInstrumentMarginRateField() {
  void * jresult ;
  CThostFtdcQryInstrumentMarginRateField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentMarginRateField *)new CThostFtdcQryInstrumentMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInstrumentMarginRateField(void * jarg1) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentCommissionRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInstrumentCommissionRateField() {
  void * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentCommissionRateField *)new CThostFtdcQryInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInstrumentCommissionRateField(void * jarg1) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentTradingRightField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInstrumentTradingRightField() {
  void * jresult ;
  CThostFtdcQryInstrumentTradingRightField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentTradingRightField *)new CThostFtdcQryInstrumentTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInstrumentTradingRightField(void * jarg1) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBrokerField() {
  void * jresult ;
  CThostFtdcQryBrokerField *result = 0 ;
  
  result = (CThostFtdcQryBrokerField *)new CThostFtdcQryBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBrokerField(void * jarg1) {
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTraderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTraderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTraderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTraderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTraderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTraderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTraderField() {
  void * jresult ;
  CThostFtdcQryTraderField *result = 0 ;
  
  result = (CThostFtdcQryTraderField *)new CThostFtdcQryTraderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTraderField(void * jarg1) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySuperUserFunctionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySuperUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySuperUserFunctionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySuperUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySuperUserFunctionField() {
  void * jresult ;
  CThostFtdcQrySuperUserFunctionField *result = 0 ;
  
  result = (CThostFtdcQrySuperUserFunctionField *)new CThostFtdcQrySuperUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySuperUserFunctionField(void * jarg1) {
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcQrySuperUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryUserSessionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryUserSessionField() {
  void * jresult ;
  CThostFtdcQryUserSessionField *result = 0 ;
  
  result = (CThostFtdcQryUserSessionField *)new CThostFtdcQryUserSessionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryUserSessionField(void * jarg1) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryPartBrokerField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryPartBrokerField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryPartBrokerField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryPartBrokerField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryPartBrokerField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryPartBrokerField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryPartBrokerField() {
  void * jresult ;
  CThostFtdcQryPartBrokerField *result = 0 ;
  
  result = (CThostFtdcQryPartBrokerField *)new CThostFtdcQryPartBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryPartBrokerField(void * jarg1) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryFrontStatusField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQryFrontStatusField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryFrontStatusField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQryFrontStatusField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryFrontStatusField() {
  void * jresult ;
  CThostFtdcQryFrontStatusField *result = 0 ;
  
  result = (CThostFtdcQryFrontStatusField *)new CThostFtdcQryFrontStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryFrontStatusField(void * jarg1) {
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  
  arg1 = (CThostFtdcQryFrontStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeOrderField() {
  void * jresult ;
  CThostFtdcQryExchangeOrderField *result = 0 ;
  
  result = (CThostFtdcQryExchangeOrderField *)new CThostFtdcQryExchangeOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeOrderField(void * jarg1) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryOrderActionField() {
  void * jresult ;
  CThostFtdcQryOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryOrderActionField *)new CThostFtdcQryOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryOrderActionField(void * jarg1) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeOrderActionField() {
  void * jresult ;
  CThostFtdcQryExchangeOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeOrderActionField *)new CThostFtdcQryExchangeOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeOrderActionField(void * jarg1) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySuperUserField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySuperUserField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySuperUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySuperUserField() {
  void * jresult ;
  CThostFtdcQrySuperUserField *result = 0 ;
  
  result = (CThostFtdcQrySuperUserField *)new CThostFtdcQrySuperUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySuperUserField(void * jarg1) {
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  
  arg1 = (CThostFtdcQrySuperUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeField() {
  void * jresult ;
  CThostFtdcQryExchangeField *result = 0 ;
  
  result = (CThostFtdcQryExchangeField *)new CThostFtdcQryExchangeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeField(void * jarg1) {
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductField_ProductClass_set(void * jarg1, char jarg2) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  arg2 = (TThostFtdcProductClassType)jarg2; 
  if (arg1) (arg1)->ProductClass = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryProductField_ProductClass_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  TThostFtdcProductClassType result;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryProductField() {
  void * jresult ;
  CThostFtdcQryProductField *result = 0 ;
  
  result = (CThostFtdcQryProductField *)new CThostFtdcQryProductField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryProductField(void * jarg1) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 31-1);
      arg1->reserve3[31-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInstrumentField() {
  void * jresult ;
  CThostFtdcQryInstrumentField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentField *)new CThostFtdcQryInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInstrumentField(void * jarg1) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryDepthMarketDataField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryDepthMarketDataField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryDepthMarketDataField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryDepthMarketDataField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryDepthMarketDataField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryDepthMarketDataField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryDepthMarketDataField() {
  void * jresult ;
  CThostFtdcQryDepthMarketDataField *result = 0 ;
  
  result = (CThostFtdcQryDepthMarketDataField *)new CThostFtdcQryDepthMarketDataField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryDepthMarketDataField(void * jarg1) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBrokerUserField() {
  void * jresult ;
  CThostFtdcQryBrokerUserField *result = 0 ;
  
  result = (CThostFtdcQryBrokerUserField *)new CThostFtdcQryBrokerUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBrokerUserField(void * jarg1) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserFunctionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserFunctionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserFunctionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserFunctionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBrokerUserFunctionField() {
  void * jresult ;
  CThostFtdcQryBrokerUserFunctionField *result = 0 ;
  
  result = (CThostFtdcQryBrokerUserFunctionField *)new CThostFtdcQryBrokerUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBrokerUserFunctionField(void * jarg1) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTraderOfferField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTraderOfferField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTraderOfferField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTraderOfferField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTraderOfferField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTraderOfferField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTraderOfferField() {
  void * jresult ;
  CThostFtdcQryTraderOfferField *result = 0 ;
  
  result = (CThostFtdcQryTraderOfferField *)new CThostFtdcQryTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTraderOfferField(void * jarg1) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySyncDepositField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySyncDepositField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySyncDepositField_DepositSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySyncDepositField_DepositSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  result = (char *) ((arg1)->DepositSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySyncDepositField() {
  void * jresult ;
  CThostFtdcQrySyncDepositField *result = 0 ;
  
  result = (CThostFtdcQrySyncDepositField *)new CThostFtdcQrySyncDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySyncDepositField(void * jarg1) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySettlementInfoField() {
  void * jresult ;
  CThostFtdcQrySettlementInfoField *result = 0 ;
  
  result = (CThostFtdcQrySettlementInfoField *)new CThostFtdcQrySettlementInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySettlementInfoField(void * jarg1) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeMarginRateField() {
  void * jresult ;
  CThostFtdcQryExchangeMarginRateField *result = 0 ;
  
  result = (CThostFtdcQryExchangeMarginRateField *)new CThostFtdcQryExchangeMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeMarginRateField(void * jarg1) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeMarginRateAdjustField() {
  void * jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *result = 0 ;
  
  result = (CThostFtdcQryExchangeMarginRateAdjustField *)new CThostFtdcQryExchangeMarginRateAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeMarginRateAdjustField(void * jarg1) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeRateField_FromCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeRateField_FromCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeRateField_ToCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeRateField_ToCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->ToCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeRateField() {
  void * jresult ;
  CThostFtdcQryExchangeRateField *result = 0 ;
  
  result = (CThostFtdcQryExchangeRateField *)new CThostFtdcQryExchangeRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeRateField(void * jarg1) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySyncFundMortgageField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySyncFundMortgageField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MortgageSeqNo, (const char *)arg2, 15-1);
      arg1->MortgageSeqNo[15-1] = 0;
    } else {
      arg1->MortgageSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->MortgageSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySyncFundMortgageField() {
  void * jresult ;
  CThostFtdcQrySyncFundMortgageField *result = 0 ;
  
  result = (CThostFtdcQrySyncFundMortgageField *)new CThostFtdcQrySyncFundMortgageField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySyncFundMortgageField(void * jarg1) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InsertTimeStart_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InsertTimeStart_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InsertTimeEnd_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InsertTimeEnd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryHisOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryHisOrderField() {
  void * jresult ;
  CThostFtdcQryHisOrderField *result = 0 ;
  
  result = (CThostFtdcQryHisOrderField *)new CThostFtdcQryHisOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryHisOrderField(void * jarg1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_MinMargin_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MinMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_MinMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MinMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_ValueMethod_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcValueMethodType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcValueMethodType)jarg2; 
  if (arg1) (arg1)->ValueMethod = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_ValueMethod_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcValueMethodType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcValueMethodType) ((arg1)->ValueMethod);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_IsRelative_set(void * jarg1, int jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_IsRelative_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMiniMarginField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionInstrMiniMarginField() {
  void * jresult ;
  CThostFtdcOptionInstrMiniMarginField *result = 0 ;
  
  result = (CThostFtdcOptionInstrMiniMarginField *)new CThostFtdcOptionInstrMiniMarginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionInstrMiniMarginField(void * jarg1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->SShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->SShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->HShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->HShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->HShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->HShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->AShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->AShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->AShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->AShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_IsRelative_set(void * jarg1, int jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_IsRelative_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrMarginAdjustField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionInstrMarginAdjustField() {
  void * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *result = 0 ;
  
  result = (CThostFtdcOptionInstrMarginAdjustField *)new CThostFtdcOptionInstrMarginAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionInstrMarginAdjustField(void * jarg1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->StrikeRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->StrikeRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrCommRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionInstrCommRateField() {
  void * jresult ;
  CThostFtdcOptionInstrCommRateField *result = 0 ;
  
  result = (CThostFtdcOptionInstrCommRateField *)new CThostFtdcOptionInstrCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionInstrCommRateField(void * jarg1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_FixedMargin_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FixedMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_FixedMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FixedMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_MiniMargin_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MiniMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_MiniMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MiniMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_Royalty_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Royalty = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_Royalty_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Royalty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchFixedMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchFixedMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMiniMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMiniMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradeCostField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionInstrTradeCostField() {
  void * jresult ;
  CThostFtdcOptionInstrTradeCostField *result = 0 ;
  
  result = (CThostFtdcOptionInstrTradeCostField *)new CThostFtdcOptionInstrTradeCostField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionInstrTradeCostField(void * jarg1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InputPrice_set(void * jarg1, double jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->InputPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InputPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->InputPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_set(void * jarg1, double jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UnderlyingPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UnderlyingPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradeCostField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryOptionInstrTradeCostField() {
  void * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *result = 0 ;
  
  result = (CThostFtdcQryOptionInstrTradeCostField *)new CThostFtdcQryOptionInstrTradeCostField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryOptionInstrTradeCostField(void * jarg1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrCommRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryOptionInstrCommRateField() {
  void * jresult ;
  CThostFtdcQryOptionInstrCommRateField *result = 0 ;
  
  result = (CThostFtdcQryOptionInstrCommRateField *)new CThostFtdcQryOptionInstrCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryOptionInstrCommRateField(void * jarg1) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_ClosePrice_set(void * jarg1, double jarg2) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_ClosePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcIndexPriceField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcIndexPriceField() {
  void * jresult ;
  CThostFtdcIndexPriceField *result = 0 ;
  
  result = (CThostFtdcIndexPriceField *)new CThostFtdcIndexPriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcIndexPriceField(void * jarg1) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ExecOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ExecOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ActionType_set(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ActionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_PosiDirection_set(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_PosiDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ReservePositionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ReservePositionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_CloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_CloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputExecOrderField() {
  void * jresult ;
  CThostFtdcInputExecOrderField *result = 0 ;
  
  result = (CThostFtdcInputExecOrderField *)new CThostFtdcInputExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputExecOrderField(void * jarg1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExecOrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExecOrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExecOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExecOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExecOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ExecOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputExecOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputExecOrderActionField() {
  void * jresult ;
  CThostFtdcInputExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcInputExecOrderActionField *)new CThostFtdcInputExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputExecOrderActionField(void * jarg1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ActionType_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ActionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_PosiDirection_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_PosiDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ReservePositionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ReservePositionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_CloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_CloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecOrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecOrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecResult_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecResultType)jarg2; 
  if (arg1) (arg1)->ExecResult = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExecResult_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecResultType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ActiveUserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ActiveUserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BrokerExecOrderSeq_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerExecOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BrokerExecOrderSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerExecOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 16-1);
      arg1->reserve3[16-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExecOrderField() {
  void * jresult ;
  CThostFtdcExecOrderField *result = 0 ;
  
  result = (CThostFtdcExecOrderField *)new CThostFtdcExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExecOrderField(void * jarg1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ExecOrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionType_set(void * jarg1, char jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_ActionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExecOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExecOrderActionField() {
  void * jresult ;
  CThostFtdcExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcExecOrderActionField *)new CThostFtdcExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExecOrderActionField(void * jarg1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_ExecOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_ExecOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InsertTimeStart_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InsertTimeStart_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InsertTimeEnd_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InsertTimeEnd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExecOrderField() {
  void * jresult ;
  CThostFtdcQryExecOrderField *result = 0 ;
  
  result = (CThostFtdcQryExecOrderField *)new CThostFtdcQryExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExecOrderField(void * jarg1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ActionType_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ActionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_PosiDirection_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_PosiDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ReservePositionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ReservePositionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_CloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_CloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExecOrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExecOrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExecOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExecOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExecResult_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecResultType)jarg2; 
  if (arg1) (arg1)->ExecResult = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExecResult_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecResultType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeExecOrderField() {
  void * jresult ;
  CThostFtdcExchangeExecOrderField *result = 0 ;
  
  result = (CThostFtdcExchangeExecOrderField *)new CThostFtdcExchangeExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeExecOrderField(void * jarg1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeExecOrderField() {
  void * jresult ;
  CThostFtdcQryExchangeExecOrderField *result = 0 ;
  
  result = (CThostFtdcQryExchangeExecOrderField *)new CThostFtdcQryExchangeExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeExecOrderField(void * jarg1) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExecOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExecOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExecOrderActionField() {
  void * jresult ;
  CThostFtdcQryExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryExecOrderActionField *)new CThostFtdcQryExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExecOrderActionField(void * jarg1) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionType_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ActionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeExecOrderActionField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeExecOrderActionField() {
  void * jresult ;
  CThostFtdcExchangeExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcExchangeExecOrderActionField *)new CThostFtdcExchangeExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeExecOrderActionField(void * jarg1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeExecOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeExecOrderActionField() {
  void * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeExecOrderActionField *)new CThostFtdcQryExchangeExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeExecOrderActionField(void * jarg1) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ExecOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ExecOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ActionType_set(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ActionType_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_PosiDirection_set(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_PosiDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ReservePositionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ReservePositionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_CloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_CloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcErrExecOrderField() {
  void * jresult ;
  CThostFtdcErrExecOrderField *result = 0 ;
  
  result = (CThostFtdcErrExecOrderField *)new CThostFtdcErrExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcErrExecOrderField(void * jarg1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryErrExecOrderField() {
  void * jresult ;
  CThostFtdcQryErrExecOrderField *result = 0 ;
  
  result = (CThostFtdcQryErrExecOrderField *)new CThostFtdcQryErrExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryErrExecOrderField(void * jarg1) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExecOrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExecOrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExecOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExecOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExecOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ExecOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrExecOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcErrExecOrderActionField() {
  void * jresult ;
  CThostFtdcErrExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcErrExecOrderActionField *)new CThostFtdcErrExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcErrExecOrderActionField(void * jarg1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrExecOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryErrExecOrderActionField() {
  void * jresult ;
  CThostFtdcQryErrExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryErrExecOrderActionField *)new CThostFtdcQryErrExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryErrExecOrderActionField(void * jarg1) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_TradingRight_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcTradingRightType)jarg2; 
  if (arg1) (arg1)->TradingRight = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_TradingRight_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrTradingRightField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionInstrTradingRightField() {
  void * jresult ;
  CThostFtdcOptionInstrTradingRightField *result = 0 ;
  
  result = (CThostFtdcOptionInstrTradingRightField *)new CThostFtdcOptionInstrTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionInstrTradingRightField(void * jarg1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionInstrTradingRightField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryOptionInstrTradingRightField() {
  void * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *result = 0 ;
  
  result = (CThostFtdcQryOptionInstrTradingRightField *)new CThostFtdcQryOptionInstrTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryOptionInstrTradingRightField(void * jarg1) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_ForQuoteRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteRef, (const char *)arg2, 13-1);
      arg1->ForQuoteRef[13-1] = 0;
    } else {
      arg1->ForQuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_ForQuoteRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputForQuoteField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputForQuoteField() {
  void * jresult ;
  CThostFtdcInputForQuoteField *result = 0 ;
  
  result = (CThostFtdcInputForQuoteField *)new CThostFtdcInputForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputForQuoteField(void * jarg1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ForQuoteRef_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteRef, (const char *)arg2, 13-1);
      arg1->ForQuoteRef[13-1] = 0;
    } else {
      arg1->ForQuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ForQuoteRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ForQuoteLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteLocalID, (const char *)arg2, 13-1);
      arg1->ForQuoteLocalID[13-1] = 0;
    } else {
      arg1->ForQuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ForQuoteLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ForQuoteStatus_set(void * jarg1, char jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcForQuoteStatusType)jarg2; 
  if (arg1) (arg1)->ForQuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ForQuoteStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcForQuoteStatusType) ((arg1)->ForQuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcForQuoteField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcForQuoteField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ActiveUserID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ActiveUserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_BrokerForQutoSeq_set(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerForQutoSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcForQuoteField_BrokerForQutoSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerForQutoSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 16-1);
      arg1->reserve3[16-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcForQuoteField() {
  void * jresult ;
  CThostFtdcForQuoteField *result = 0 ;
  
  result = (CThostFtdcForQuoteField *)new CThostFtdcForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcForQuoteField(void * jarg1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InsertTimeStart_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InsertTimeStart_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InsertTimeEnd_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InsertTimeEnd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryForQuoteField() {
  void * jresult ;
  CThostFtdcQryForQuoteField *result = 0 ;
  
  result = (CThostFtdcQryForQuoteField *)new CThostFtdcQryForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryForQuoteField(void * jarg1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ForQuoteLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteLocalID, (const char *)arg2, 13-1);
      arg1->ForQuoteLocalID[13-1] = 0;
    } else {
      arg1->ForQuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ForQuoteLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ForQuoteStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (TThostFtdcForQuoteStatusType)jarg2; 
  if (arg1) (arg1)->ForQuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ForQuoteStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType result;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (TThostFtdcForQuoteStatusType) ((arg1)->ForQuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeForQuoteField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeForQuoteField() {
  void * jresult ;
  CThostFtdcExchangeForQuoteField *result = 0 ;
  
  result = (CThostFtdcExchangeForQuoteField *)new CThostFtdcExchangeForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeForQuoteField(void * jarg1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeForQuoteField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeForQuoteField() {
  void * jresult ;
  CThostFtdcQryExchangeForQuoteField *result = 0 ;
  
  result = (CThostFtdcQryExchangeForQuoteField *)new CThostFtdcQryExchangeForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeForQuoteField(void * jarg1) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_QuoteRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_QuoteRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskOffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->AskOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskOffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidOffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->BidOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidOffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskHedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->AskHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskHedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidHedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->BidHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidHedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderRef, (const char *)arg2, 13-1);
      arg1->AskOrderRef[13-1] = 0;
    } else {
      arg1->AskOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_AskOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderRef, (const char *)arg2, 13-1);
      arg1->BidOrderRef[13-1] = 0;
    } else {
      arg1->BidOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_BidOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_ForQuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_ForQuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputQuoteField() {
  void * jresult ;
  CThostFtdcInputQuoteField *result = 0 ;
  
  result = (CThostFtdcInputQuoteField *)new CThostFtdcInputQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputQuoteField(void * jarg1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_QuoteActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->QuoteActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_QuoteActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->QuoteActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_QuoteRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_QuoteRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_QuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_QuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputQuoteActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputQuoteActionField() {
  void * jresult ;
  CThostFtdcInputQuoteActionField *result = 0 ;
  
  result = (CThostFtdcInputQuoteActionField *)new CThostFtdcInputQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputQuoteActionField(void * jarg1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteRef_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskPrice_set(void * jarg1, double jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidPrice_set(void * jarg1, double jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskVolume_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidVolume_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskOffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->AskOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskOffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidOffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->BidOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidOffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskHedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->AskHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskHedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidHedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->BidHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidHedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteStatus_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->QuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteField_QuoteStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->QuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderSysID, (const char *)arg2, 21-1);
      arg1->AskOrderSysID[21-1] = 0;
    } else {
      arg1->AskOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderSysID, (const char *)arg2, 21-1);
      arg1->BidOrderSysID[21-1] = 0;
    } else {
      arg1->BidOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_ActiveUserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_ActiveUserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BrokerQuoteSeq_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerQuoteSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteField_BrokerQuoteSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerQuoteSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderRef, (const char *)arg2, 13-1);
      arg1->AskOrderRef[13-1] = 0;
    } else {
      arg1->AskOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_AskOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidOrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderRef, (const char *)arg2, 13-1);
      arg1->BidOrderRef[13-1] = 0;
    } else {
      arg1->BidOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_BidOrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_ForQuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_ForQuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 16-1);
      arg1->reserve3[16-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQuoteField() {
  void * jresult ;
  CThostFtdcQuoteField *result = 0 ;
  
  result = (CThostFtdcQuoteField *)new CThostFtdcQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQuoteField(void * jarg1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->QuoteActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->QuoteActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteRef_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_QuoteLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQuoteActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQuoteActionField() {
  void * jresult ;
  CThostFtdcQuoteActionField *result = 0 ;
  
  result = (CThostFtdcQuoteActionField *)new CThostFtdcQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQuoteActionField(void * jarg1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_QuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_QuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InsertTimeStart_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InsertTimeStart_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InsertTimeEnd_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InsertTimeEnd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryQuoteField() {
  void * jresult ;
  CThostFtdcQryQuoteField *result = 0 ;
  
  result = (CThostFtdcQryQuoteField *)new CThostFtdcQryQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryQuoteField(void * jarg1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskPrice_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidPrice_set(void * jarg1, double jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskVolume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidVolume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskOffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->AskOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskOffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidOffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->BidOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidOffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskHedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->AskHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskHedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidHedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->BidHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidHedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_QuoteLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_QuoteLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_QuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_QuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_QuoteStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->QuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_QuoteStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->QuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderSysID, (const char *)arg2, 21-1);
      arg1->AskOrderSysID[21-1] = 0;
    } else {
      arg1->AskOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_AskOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderSysID, (const char *)arg2, 21-1);
      arg1->BidOrderSysID[21-1] = 0;
    } else {
      arg1->BidOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BidOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ForQuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ForQuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeQuoteField() {
  void * jresult ;
  CThostFtdcExchangeQuoteField *result = 0 ;
  
  result = (CThostFtdcExchangeQuoteField *)new CThostFtdcExchangeQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeQuoteField(void * jarg1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeQuoteField() {
  void * jresult ;
  CThostFtdcQryExchangeQuoteField *result = 0 ;
  
  result = (CThostFtdcQryExchangeQuoteField *)new CThostFtdcQryExchangeQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeQuoteField(void * jarg1) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryQuoteActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryQuoteActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryQuoteActionField() {
  void * jresult ;
  CThostFtdcQryQuoteActionField *result = 0 ;
  
  result = (CThostFtdcQryQuoteActionField *)new CThostFtdcQryQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryQuoteActionField(void * jarg1) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_QuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_QuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_QuoteLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_QuoteLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeQuoteActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeQuoteActionField() {
  void * jresult ;
  CThostFtdcExchangeQuoteActionField *result = 0 ;
  
  result = (CThostFtdcExchangeQuoteActionField *)new CThostFtdcExchangeQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeQuoteActionField(void * jarg1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeQuoteActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeQuoteActionField() {
  void * jresult ;
  CThostFtdcQryExchangeQuoteActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeQuoteActionField *)new CThostFtdcQryExchangeQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeQuoteActionField(void * jarg1) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_Delta_set(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->Delta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_Delta_get(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->Delta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionInstrDeltaField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionInstrDeltaField() {
  void * jresult ;
  CThostFtdcOptionInstrDeltaField *result = 0 ;
  
  result = (CThostFtdcOptionInstrDeltaField *)new CThostFtdcOptionInstrDeltaField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionInstrDeltaField(void * jarg1) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ForQuoteSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ForQuoteSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ForQuoteTime_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteTime, (const char *)arg2, 9-1);
      arg1->ForQuoteTime[9-1] = 0;
    } else {
      arg1->ForQuoteTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ForQuoteTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ActionDay_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ActionDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteRspField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcForQuoteRspField() {
  void * jresult ;
  CThostFtdcForQuoteRspField *result = 0 ;
  
  result = (CThostFtdcForQuoteRspField *)new CThostFtdcForQuoteRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcForQuoteRspField(void * jarg1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_Offset_set(void * jarg1, double jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Offset = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_Offset_get(void * jarg1) {
  double jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Offset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_OffsetType_set(void * jarg1, char jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcStrikeOffsetTypeType arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (TThostFtdcStrikeOffsetTypeType)jarg2; 
  if (arg1) (arg1)->OffsetType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_OffsetType_get(void * jarg1) {
  char jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcStrikeOffsetTypeType result;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (TThostFtdcStrikeOffsetTypeType) ((arg1)->OffsetType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcStrikeOffsetField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcStrikeOffsetField() {
  void * jresult ;
  CThostFtdcStrikeOffsetField *result = 0 ;
  
  result = (CThostFtdcStrikeOffsetField *)new CThostFtdcStrikeOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcStrikeOffsetField(void * jarg1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryStrikeOffsetField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryStrikeOffsetField() {
  void * jresult ;
  CThostFtdcQryStrikeOffsetField *result = 0 ;
  
  result = (CThostFtdcQryStrikeOffsetField *)new CThostFtdcQryStrikeOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryStrikeOffsetField(void * jarg1) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_OrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_OrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputBatchOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputBatchOrderActionField() {
  void * jresult ;
  CThostFtdcInputBatchOrderActionField *result = 0 ;
  
  result = (CThostFtdcInputBatchOrderActionField *)new CThostFtdcInputBatchOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputBatchOrderActionField(void * jarg1) {
  CThostFtdcInputBatchOrderActionField *arg1 = (CThostFtdcInputBatchOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcInputBatchOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_OrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_OrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBatchOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBatchOrderActionField() {
  void * jresult ;
  CThostFtdcBatchOrderActionField *result = 0 ;
  
  result = (CThostFtdcBatchOrderActionField *)new CThostFtdcBatchOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBatchOrderActionField(void * jarg1) {
  CThostFtdcBatchOrderActionField *arg1 = (CThostFtdcBatchOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcBatchOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeBatchOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeBatchOrderActionField() {
  void * jresult ;
  CThostFtdcExchangeBatchOrderActionField *result = 0 ;
  
  result = (CThostFtdcExchangeBatchOrderActionField *)new CThostFtdcExchangeBatchOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeBatchOrderActionField(void * jarg1) {
  CThostFtdcExchangeBatchOrderActionField *arg1 = (CThostFtdcExchangeBatchOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeBatchOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBatchOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBatchOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBatchOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBatchOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBatchOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBatchOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBatchOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBatchOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBatchOrderActionField() {
  void * jresult ;
  CThostFtdcQryBatchOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryBatchOrderActionField *)new CThostFtdcQryBatchOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBatchOrderActionField(void * jarg1) {
  CThostFtdcQryBatchOrderActionField *arg1 = (CThostFtdcQryBatchOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryBatchOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_GuarantRatio_set(void * jarg1, double jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->GuarantRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_GuarantRatio_get(void * jarg1) {
  double jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->GuarantRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombInstrumentGuardField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCombInstrumentGuardField() {
  void * jresult ;
  CThostFtdcCombInstrumentGuardField *result = 0 ;
  
  result = (CThostFtdcCombInstrumentGuardField *)new CThostFtdcCombInstrumentGuardField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCombInstrumentGuardField(void * jarg1) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombInstrumentGuardField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCombInstrumentGuardField() {
  void * jresult ;
  CThostFtdcQryCombInstrumentGuardField *result = 0 ;
  
  result = (CThostFtdcQryCombInstrumentGuardField *)new CThostFtdcQryCombInstrumentGuardField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCombInstrumentGuardField(void * jarg1) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_CombActionRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombActionRef, (const char *)arg2, 13-1);
      arg1->CombActionRef[13-1] = 0;
    } else {
      arg1->CombActionRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_CombActionRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->CombActionRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_CombDirection_set(void * jarg1, char jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcCombDirectionType)jarg2; 
  if (arg1) (arg1)->CombDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_CombDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputCombActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputCombActionField() {
  void * jresult ;
  CThostFtdcInputCombActionField *result = 0 ;
  
  result = (CThostFtdcInputCombActionField *)new CThostFtdcInputCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputCombActionField(void * jarg1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_CombActionRef_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombActionRef, (const char *)arg2, 13-1);
      arg1->CombActionRef[13-1] = 0;
    } else {
      arg1->CombActionRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_CombActionRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->CombActionRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCombActionField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombActionField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_CombDirection_set(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcCombDirectionType)jarg2; 
  if (arg1) (arg1)->CombDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCombActionField_CombDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCombActionField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_ActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->ActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCombActionField_ActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->ActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombActionField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombActionField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombActionField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 16-1);
      arg1->reserve3[16-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_ComTradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ComTradeID, (const char *)arg2, 21-1);
      arg1->ComTradeID[21-1] = 0;
    } else {
      arg1->ComTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_ComTradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ComTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCombActionField() {
  void * jresult ;
  CThostFtdcCombActionField *result = 0 ;
  
  result = (CThostFtdcCombActionField *)new CThostFtdcCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCombActionField(void * jarg1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCombActionField() {
  void * jresult ;
  CThostFtdcQryCombActionField *result = 0 ;
  
  result = (CThostFtdcQryCombActionField *)new CThostFtdcQryCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCombActionField(void * jarg1) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_CombDirection_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcCombDirectionType)jarg2; 
  if (arg1) (arg1)->CombDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_CombDirection_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->ActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->ActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ComTradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ComTradeID, (const char *)arg2, 21-1);
      arg1->ComTradeID[21-1] = 0;
    } else {
      arg1->ComTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ComTradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ComTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeCombActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeCombActionField() {
  void * jresult ;
  CThostFtdcExchangeCombActionField *result = 0 ;
  
  result = (CThostFtdcExchangeCombActionField *)new CThostFtdcExchangeCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeCombActionField(void * jarg1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeCombActionField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeCombActionField() {
  void * jresult ;
  CThostFtdcQryExchangeCombActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeCombActionField *)new CThostFtdcQryExchangeCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeCombActionField(void * jarg1) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_QuoteCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteCurrencyID, (const char *)arg2, 4-1);
      arg1->QuoteCurrencyID[4-1] = 0;
    } else {
      arg1->QuoteCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_QuoteCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->QuoteCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_ExchangeRate_set(void * jarg1, double jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  TThostFtdcExchangeRateType arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (TThostFtdcExchangeRateType)jarg2; 
  if (arg1) (arg1)->ExchangeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_ExchangeRate_get(void * jarg1) {
  double jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  TThostFtdcExchangeRateType result;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (TThostFtdcExchangeRateType) ((arg1)->ExchangeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductExchRateField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcProductExchRateField() {
  void * jresult ;
  CThostFtdcProductExchRateField *result = 0 ;
  
  result = (CThostFtdcProductExchRateField *)new CThostFtdcProductExchRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcProductExchRateField(void * jarg1) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductExchRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductExchRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductExchRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductExchRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductExchRateField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductExchRateField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryProductExchRateField() {
  void * jresult ;
  CThostFtdcQryProductExchRateField *result = 0 ;
  
  result = (CThostFtdcQryProductExchRateField *)new CThostFtdcQryProductExchRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryProductExchRateField(void * jarg1) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryForQuoteParamField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryForQuoteParamField() {
  void * jresult ;
  CThostFtdcQryForQuoteParamField *result = 0 ;
  
  result = (CThostFtdcQryForQuoteParamField *)new CThostFtdcQryForQuoteParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryForQuoteParamField(void * jarg1) {
  CThostFtdcQryForQuoteParamField *arg1 = (CThostFtdcQryForQuoteParamField *) 0 ;
  
  arg1 = (CThostFtdcQryForQuoteParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_LastPrice_set(void * jarg1, double jarg2) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_LastPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_PriceInterval_set(void * jarg1, double jarg2) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PriceInterval = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_PriceInterval_get(void * jarg1) {
  double jresult ;
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PriceInterval);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcForQuoteParamField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcForQuoteParamField() {
  void * jresult ;
  CThostFtdcForQuoteParamField *result = 0 ;
  
  result = (CThostFtdcForQuoteParamField *)new CThostFtdcForQuoteParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcForQuoteParamField(void * jarg1) {
  CThostFtdcForQuoteParamField *arg1 = (CThostFtdcForQuoteParamField *) 0 ;
  
  arg1 = (CThostFtdcForQuoteParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->StrikeRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->StrikeRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMOptionInstrCommRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMMOptionInstrCommRateField() {
  void * jresult ;
  CThostFtdcMMOptionInstrCommRateField *result = 0 ;
  
  result = (CThostFtdcMMOptionInstrCommRateField *)new CThostFtdcMMOptionInstrCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMMOptionInstrCommRateField(void * jarg1) {
  CThostFtdcMMOptionInstrCommRateField *arg1 = (CThostFtdcMMOptionInstrCommRateField *) 0 ;
  
  arg1 = (CThostFtdcMMOptionInstrCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryMMOptionInstrCommRateField() {
  void * jresult ;
  CThostFtdcQryMMOptionInstrCommRateField *result = 0 ;
  
  result = (CThostFtdcQryMMOptionInstrCommRateField *)new CThostFtdcQryMMOptionInstrCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryMMOptionInstrCommRateField(void * jarg1) {
  CThostFtdcQryMMOptionInstrCommRateField *arg1 = (CThostFtdcQryMMOptionInstrCommRateField *) 0 ;
  
  arg1 = (CThostFtdcQryMMOptionInstrCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMMInstrumentCommissionRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMMInstrumentCommissionRateField() {
  void * jresult ;
  CThostFtdcMMInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcMMInstrumentCommissionRateField *)new CThostFtdcMMInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMMInstrumentCommissionRateField(void * jarg1) {
  CThostFtdcMMInstrumentCommissionRateField *arg1 = (CThostFtdcMMInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcMMInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryMMInstrumentCommissionRateField() {
  void * jresult ;
  CThostFtdcQryMMInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcQryMMInstrumentCommissionRateField *)new CThostFtdcQryMMInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryMMInstrumentCommissionRateField(void * jarg1) {
  CThostFtdcQryMMInstrumentCommissionRateField *arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcQryMMInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OrderCommByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OrderCommByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OrderActionCommByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OrderActionCommByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentOrderCommRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentOrderCommRateField() {
  void * jresult ;
  CThostFtdcInstrumentOrderCommRateField *result = 0 ;
  
  result = (CThostFtdcInstrumentOrderCommRateField *)new CThostFtdcInstrumentOrderCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentOrderCommRateField(void * jarg1) {
  CThostFtdcInstrumentOrderCommRateField *arg1 = (CThostFtdcInstrumentOrderCommRateField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentOrderCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInstrumentOrderCommRateField() {
  void * jresult ;
  CThostFtdcQryInstrumentOrderCommRateField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentOrderCommRateField *)new CThostFtdcQryInstrumentOrderCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInstrumentOrderCommRateField(void * jarg1) {
  CThostFtdcQryInstrumentOrderCommRateField *arg1 = (CThostFtdcQryInstrumentOrderCommRateField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentOrderCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeParamField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeParamField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeParamField_TradeParamID_set(void * jarg1, char jarg2) {
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  TThostFtdcTradeParamIDType arg2 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  arg2 = (TThostFtdcTradeParamIDType)jarg2; 
  if (arg1) (arg1)->TradeParamID = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradeParamField_TradeParamID_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  TThostFtdcTradeParamIDType result;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  result = (TThostFtdcTradeParamIDType) ((arg1)->TradeParamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeParamField_TradeParamValue_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeParamValue, (const char *)arg2, 256-1);
      arg1->TradeParamValue[256-1] = 0;
    } else {
      arg1->TradeParamValue[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeParamField_TradeParamValue_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  result = (char *) ((arg1)->TradeParamValue);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradeParamField_Memo_set(void * jarg1, char * jarg2) {
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Memo, (const char *)arg2, 161-1);
      arg1->Memo[161-1] = 0;
    } else {
      arg1->Memo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradeParamField_Memo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  result = (char *) ((arg1)->Memo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradeParamField() {
  void * jresult ;
  CThostFtdcTradeParamField *result = 0 ;
  
  result = (CThostFtdcTradeParamField *)new CThostFtdcTradeParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradeParamField(void * jarg1) {
  CThostFtdcTradeParamField *arg1 = (CThostFtdcTradeParamField *) 0 ;
  
  arg1 = (CThostFtdcTradeParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_LongMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_LongMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_LongMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_LongMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentMarginRateULField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentMarginRateULField() {
  void * jresult ;
  CThostFtdcInstrumentMarginRateULField *result = 0 ;
  
  result = (CThostFtdcInstrumentMarginRateULField *)new CThostFtdcInstrumentMarginRateULField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentMarginRateULField(void * jarg1) {
  CThostFtdcInstrumentMarginRateULField *arg1 = (CThostFtdcInstrumentMarginRateULField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateULField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_SpecOpenVolume_set(void * jarg1, int jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->SpecOpenVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_SpecOpenVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->SpecOpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_ArbiOpenVolume_set(void * jarg1, int jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ArbiOpenVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_ArbiOpenVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ArbiOpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_OpenVolume_set(void * jarg1, int jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->OpenVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_OpenVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->OpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureLimitPosiParamField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcFutureLimitPosiParamField() {
  void * jresult ;
  CThostFtdcFutureLimitPosiParamField *result = 0 ;
  
  result = (CThostFtdcFutureLimitPosiParamField *)new CThostFtdcFutureLimitPosiParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcFutureLimitPosiParamField(void * jarg1) {
  CThostFtdcFutureLimitPosiParamField *arg1 = (CThostFtdcFutureLimitPosiParamField *) 0 ;
  
  arg1 = (CThostFtdcFutureLimitPosiParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenIPField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenIPField *arg1 = (CThostFtdcLoginForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenIPField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenIPField *arg1 = (CThostFtdcLoginForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenIPField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenIPField *arg1 = (CThostFtdcLoginForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenIPField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenIPField *arg1 = (CThostFtdcLoginForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcLoginForbiddenIPField() {
  void * jresult ;
  CThostFtdcLoginForbiddenIPField *result = 0 ;
  
  result = (CThostFtdcLoginForbiddenIPField *)new CThostFtdcLoginForbiddenIPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcLoginForbiddenIPField(void * jarg1) {
  CThostFtdcLoginForbiddenIPField *arg1 = (CThostFtdcLoginForbiddenIPField *) 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenIPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcIPListField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcIPListField *arg1 = (CThostFtdcIPListField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcIPListField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcIPListField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcIPListField *arg1 = (CThostFtdcIPListField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcIPListField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcIPListField_IsWhite_set(void * jarg1, int jarg2) {
  CThostFtdcIPListField *arg1 = (CThostFtdcIPListField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcIPListField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsWhite = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcIPListField_IsWhite_get(void * jarg1) {
  int jresult ;
  CThostFtdcIPListField *arg1 = (CThostFtdcIPListField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcIPListField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsWhite);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcIPListField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcIPListField *arg1 = (CThostFtdcIPListField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcIPListField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcIPListField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcIPListField *arg1 = (CThostFtdcIPListField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcIPListField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcIPListField() {
  void * jresult ;
  CThostFtdcIPListField *result = 0 ;
  
  result = (CThostFtdcIPListField *)new CThostFtdcIPListField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcIPListField(void * jarg1) {
  CThostFtdcIPListField *arg1 = (CThostFtdcIPListField *) 0 ;
  
  arg1 = (CThostFtdcIPListField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_OptionSelfCloseRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseRef, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseRef[13-1] = 0;
    } else {
      arg1->OptionSelfCloseRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_OptionSelfCloseRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_OptSelfCloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcOptSelfCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcOptSelfCloseFlagType)jarg2; 
  if (arg1) (arg1)->OptSelfCloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_OptSelfCloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  TThostFtdcOptSelfCloseFlagType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcOptSelfCloseFlagType) ((arg1)->OptSelfCloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputOptionSelfCloseField() {
  void * jresult ;
  CThostFtdcInputOptionSelfCloseField *result = 0 ;
  
  result = (CThostFtdcInputOptionSelfCloseField *)new CThostFtdcInputOptionSelfCloseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputOptionSelfCloseField(void * jarg1) {
  CThostFtdcInputOptionSelfCloseField *arg1 = (CThostFtdcInputOptionSelfCloseField *) 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OptionSelfCloseActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OptionSelfCloseActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseRef_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseRef, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseRef[13-1] = 0;
    } else {
      arg1->OptionSelfCloseRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseSysID, (const char *)arg2, 21-1);
      arg1->OptionSelfCloseSysID[21-1] = 0;
    } else {
      arg1->OptionSelfCloseSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInputOptionSelfCloseActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInputOptionSelfCloseActionField() {
  void * jresult ;
  CThostFtdcInputOptionSelfCloseActionField *result = 0 ;
  
  result = (CThostFtdcInputOptionSelfCloseActionField *)new CThostFtdcInputOptionSelfCloseActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInputOptionSelfCloseActionField(void * jarg1) {
  CThostFtdcInputOptionSelfCloseActionField *arg1 = (CThostFtdcInputOptionSelfCloseActionField *) 0 ;
  
  arg1 = (CThostFtdcInputOptionSelfCloseActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptionSelfCloseRef_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseRef, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseRef[13-1] = 0;
    } else {
      arg1->OptionSelfCloseRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptionSelfCloseRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptSelfCloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcOptSelfCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcOptSelfCloseFlagType)jarg2; 
  if (arg1) (arg1)->OptSelfCloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptSelfCloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcOptSelfCloseFlagType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcOptSelfCloseFlagType) ((arg1)->OptSelfCloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptionSelfCloseLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseLocalID, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseLocalID[13-1] = 0;
    } else {
      arg1->OptionSelfCloseLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptionSelfCloseLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptionSelfCloseSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseSysID, (const char *)arg2, 21-1);
      arg1->OptionSelfCloseSysID[21-1] = 0;
    } else {
      arg1->OptionSelfCloseSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_OptionSelfCloseSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ExecResult_set(void * jarg1, char jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcExecResultType)jarg2; 
  if (arg1) (arg1)->ExecResult = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ExecResult_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcExecResultType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ActiveUserID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ActiveUserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerOptionSelfCloseSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOptionSelfCloseSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 16-1);
      arg1->reserve3[16-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionSelfCloseField() {
  void * jresult ;
  CThostFtdcOptionSelfCloseField *result = 0 ;
  
  result = (CThostFtdcOptionSelfCloseField *)new CThostFtdcOptionSelfCloseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionSelfCloseField(void * jarg1) {
  CThostFtdcOptionSelfCloseField *arg1 = (CThostFtdcOptionSelfCloseField *) 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OptionSelfCloseActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OptionSelfCloseActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseRef_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseRef, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseRef[13-1] = 0;
    } else {
      arg1->OptionSelfCloseRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseSysID, (const char *)arg2, 21-1);
      arg1->OptionSelfCloseSysID[21-1] = 0;
    } else {
      arg1->OptionSelfCloseSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseLocalID, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseLocalID[13-1] = 0;
    } else {
      arg1->OptionSelfCloseLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OptionSelfCloseLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOptionSelfCloseActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOptionSelfCloseActionField() {
  void * jresult ;
  CThostFtdcOptionSelfCloseActionField *result = 0 ;
  
  result = (CThostFtdcOptionSelfCloseActionField *)new CThostFtdcOptionSelfCloseActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOptionSelfCloseActionField(void * jarg1) {
  CThostFtdcOptionSelfCloseActionField *arg1 = (CThostFtdcOptionSelfCloseActionField *) 0 ;
  
  arg1 = (CThostFtdcOptionSelfCloseActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseSysID, (const char *)arg2, 21-1);
      arg1->OptionSelfCloseSysID[21-1] = 0;
    } else {
      arg1->OptionSelfCloseSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InsertTimeStart_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InsertTimeStart_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InsertTimeEnd_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InsertTimeEnd_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryOptionSelfCloseField() {
  void * jresult ;
  CThostFtdcQryOptionSelfCloseField *result = 0 ;
  
  result = (CThostFtdcQryOptionSelfCloseField *)new CThostFtdcQryOptionSelfCloseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryOptionSelfCloseField(void * jarg1) {
  CThostFtdcQryOptionSelfCloseField *arg1 = (CThostFtdcQryOptionSelfCloseField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OptSelfCloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcOptSelfCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcOptSelfCloseFlagType)jarg2; 
  if (arg1) (arg1)->OptSelfCloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OptSelfCloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcOptSelfCloseFlagType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcOptSelfCloseFlagType) ((arg1)->OptSelfCloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseLocalID, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseLocalID[13-1] = 0;
    } else {
      arg1->OptionSelfCloseLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseSysID, (const char *)arg2, 21-1);
      arg1->OptionSelfCloseSysID[21-1] = 0;
    } else {
      arg1->OptionSelfCloseSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ExecResult_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcExecResultType)jarg2; 
  if (arg1) (arg1)->ExecResult = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ExecResult_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcExecResultType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeOptionSelfCloseField() {
  void * jresult ;
  CThostFtdcExchangeOptionSelfCloseField *result = 0 ;
  
  result = (CThostFtdcExchangeOptionSelfCloseField *)new CThostFtdcExchangeOptionSelfCloseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeOptionSelfCloseField(void * jarg1) {
  CThostFtdcExchangeOptionSelfCloseField *arg1 = (CThostFtdcExchangeOptionSelfCloseField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseActionField *arg1 = (CThostFtdcQryOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseActionField *arg1 = (CThostFtdcQryOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseActionField *arg1 = (CThostFtdcQryOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseActionField *arg1 = (CThostFtdcQryOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionSelfCloseActionField *arg1 = (CThostFtdcQryOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryOptionSelfCloseActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionSelfCloseActionField *arg1 = (CThostFtdcQryOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryOptionSelfCloseActionField() {
  void * jresult ;
  CThostFtdcQryOptionSelfCloseActionField *result = 0 ;
  
  result = (CThostFtdcQryOptionSelfCloseActionField *)new CThostFtdcQryOptionSelfCloseActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryOptionSelfCloseActionField(void * jarg1) {
  CThostFtdcQryOptionSelfCloseActionField *arg1 = (CThostFtdcQryOptionSelfCloseActionField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionSelfCloseActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseSysID, (const char *)arg2, 21-1);
      arg1->OptionSelfCloseSysID[21-1] = 0;
    } else {
      arg1->OptionSelfCloseSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OptionSelfCloseLocalID, (const char *)arg2, 13-1);
      arg1->OptionSelfCloseLocalID[13-1] = 0;
    } else {
      arg1->OptionSelfCloseLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->OptionSelfCloseLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OptSelfCloseFlag_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcOptSelfCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (TThostFtdcOptSelfCloseFlagType)jarg2; 
  if (arg1) (arg1)->OptSelfCloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_OptSelfCloseFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  TThostFtdcOptSelfCloseFlagType result;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (TThostFtdcOptSelfCloseFlagType) ((arg1)->OptSelfCloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeOptionSelfCloseActionField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeOptionSelfCloseActionField() {
  void * jresult ;
  CThostFtdcExchangeOptionSelfCloseActionField *result = 0 ;
  
  result = (CThostFtdcExchangeOptionSelfCloseActionField *)new CThostFtdcExchangeOptionSelfCloseActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeOptionSelfCloseActionField(void * jarg1) {
  CThostFtdcExchangeOptionSelfCloseActionField *arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOptionSelfCloseActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_DelaySwapSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DelaySwapSeqNo, (const char *)arg2, 15-1);
      arg1->DelaySwapSeqNo[15-1] = 0;
    } else {
      arg1->DelaySwapSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_DelaySwapSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (char *) ((arg1)->DelaySwapSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FromAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FromAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromFrozenSwap_set(void * jarg1, double jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FromFrozenSwap = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromFrozenSwap_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FromFrozenSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromRemainSwap_set(void * jarg1, double jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FromRemainSwap = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_FromRemainSwap_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FromRemainSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_ToCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_ToCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (char *) ((arg1)->ToCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_ToAmount_set(void * jarg1, double jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ToAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_ToAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ToAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_IsManualSwap_set(void * jarg1, int jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsManualSwap = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_IsManualSwap_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsManualSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_IsAllRemainSetZero_set(void * jarg1, int jarg2) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAllRemainSetZero = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapField_IsAllRemainSetZero_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAllRemainSetZero);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncDelaySwapField() {
  void * jresult ;
  CThostFtdcSyncDelaySwapField *result = 0 ;
  
  result = (CThostFtdcSyncDelaySwapField *)new CThostFtdcSyncDelaySwapField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncDelaySwapField(void * jarg1) {
  CThostFtdcSyncDelaySwapField *arg1 = (CThostFtdcSyncDelaySwapField *) 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySyncDelaySwapField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncDelaySwapField *arg1 = (CThostFtdcQrySyncDelaySwapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncDelaySwapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySyncDelaySwapField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncDelaySwapField *arg1 = (CThostFtdcQrySyncDelaySwapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncDelaySwapField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySyncDelaySwapField_DelaySwapSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncDelaySwapField *arg1 = (CThostFtdcQrySyncDelaySwapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncDelaySwapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DelaySwapSeqNo, (const char *)arg2, 15-1);
      arg1->DelaySwapSeqNo[15-1] = 0;
    } else {
      arg1->DelaySwapSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySyncDelaySwapField_DelaySwapSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncDelaySwapField *arg1 = (CThostFtdcQrySyncDelaySwapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncDelaySwapField *)jarg1; 
  result = (char *) ((arg1)->DelaySwapSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySyncDelaySwapField() {
  void * jresult ;
  CThostFtdcQrySyncDelaySwapField *result = 0 ;
  
  result = (CThostFtdcQrySyncDelaySwapField *)new CThostFtdcQrySyncDelaySwapField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySyncDelaySwapField(void * jarg1) {
  CThostFtdcQrySyncDelaySwapField *arg1 = (CThostFtdcQrySyncDelaySwapField *) 0 ;
  
  arg1 = (CThostFtdcQrySyncDelaySwapField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestorUnitName_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorUnitName, (const char *)arg2, 81-1);
      arg1->InvestorUnitName[81-1] = 0;
    } else {
      arg1->InvestorUnitName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestorUnitName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->InvestorUnitName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestorGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_InvestorGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_CommModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_CommModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_MarginModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_MarginModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestUnitField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestUnitField() {
  void * jresult ;
  CThostFtdcInvestUnitField *result = 0 ;
  
  result = (CThostFtdcInvestUnitField *)new CThostFtdcInvestUnitField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestUnitField(void * jarg1) {
  CThostFtdcInvestUnitField *arg1 = (CThostFtdcInvestUnitField *) 0 ;
  
  arg1 = (CThostFtdcInvestUnitField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestUnitField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestUnitField *arg1 = (CThostFtdcQryInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestUnitField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestUnitField *arg1 = (CThostFtdcQryInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestUnitField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestUnitField *arg1 = (CThostFtdcQryInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestUnitField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestUnitField *arg1 = (CThostFtdcQryInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestUnitField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestUnitField *arg1 = (CThostFtdcQryInvestUnitField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestUnitField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestUnitField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestUnitField *arg1 = (CThostFtdcQryInvestUnitField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestUnitField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInvestUnitField() {
  void * jresult ;
  CThostFtdcQryInvestUnitField *result = 0 ;
  
  result = (CThostFtdcQryInvestUnitField *)new CThostFtdcQryInvestUnitField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInvestUnitField(void * jarg1) {
  CThostFtdcQryInvestUnitField *arg1 = (CThostFtdcQryInvestUnitField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestUnitField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_BrokerSecAgentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerSecAgentID, (const char *)arg2, 13-1);
      arg1->BrokerSecAgentID[13-1] = 0;
    } else {
      arg1->BrokerSecAgentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_BrokerSecAgentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  result = (char *) ((arg1)->BrokerSecAgentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_CheckSelfAccount_set(void * jarg1, int jarg2) {
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->CheckSelfAccount = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSecAgentCheckModeField_CheckSelfAccount_get(void * jarg1) {
  int jresult ;
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->CheckSelfAccount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSecAgentCheckModeField() {
  void * jresult ;
  CThostFtdcSecAgentCheckModeField *result = 0 ;
  
  result = (CThostFtdcSecAgentCheckModeField *)new CThostFtdcSecAgentCheckModeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSecAgentCheckModeField(void * jarg1) {
  CThostFtdcSecAgentCheckModeField *arg1 = (CThostFtdcSecAgentCheckModeField *) 0 ;
  
  arg1 = (CThostFtdcSecAgentCheckModeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_BrokerSecAgentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerSecAgentID, (const char *)arg2, 13-1);
      arg1->BrokerSecAgentID[13-1] = 0;
    } else {
      arg1->BrokerSecAgentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_BrokerSecAgentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerSecAgentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentTradeInfoField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSecAgentTradeInfoField() {
  void * jresult ;
  CThostFtdcSecAgentTradeInfoField *result = 0 ;
  
  result = (CThostFtdcSecAgentTradeInfoField *)new CThostFtdcSecAgentTradeInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSecAgentTradeInfoField(void * jarg1) {
  CThostFtdcSecAgentTradeInfoField *arg1 = (CThostFtdcSecAgentTradeInfoField *) 0 ;
  
  arg1 = (CThostFtdcSecAgentTradeInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_LastPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_LastPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreSettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreSettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreClosePrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreClosePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreOpenInterest_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->PreOpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreOpenInterest_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_OpenPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_OpenPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_HighestPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->HighestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_HighestPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_LowestPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_LowestPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_Turnover_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_Turnover_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_OpenInterest_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->OpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_OpenInterest_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ClosePrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ClosePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_SettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_SettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_UpperLimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UpperLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_UpperLimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_LowerLimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowerLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_LowerLimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreDelta_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->PreDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_PreDelta_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_CurrDelta_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CurrDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataField_CurrDelta_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_UpdateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_UpdateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_UpdateMillisec_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->UpdateMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataField_UpdateMillisec_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ActionDay_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ActionDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataField() {
  void * jresult ;
  CThostFtdcMarketDataField *result = 0 ;
  
  result = (CThostFtdcMarketDataField *)new CThostFtdcMarketDataField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataField(void * jarg1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreSettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreSettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreClosePrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreClosePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreOpenInterest_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->PreOpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreOpenInterest_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreDelta_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->PreDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBaseField_PreDelta_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataBaseField() {
  void * jresult ;
  CThostFtdcMarketDataBaseField *result = 0 ;
  
  result = (CThostFtdcMarketDataBaseField *)new CThostFtdcMarketDataBaseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataBaseField(void * jarg1) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_OpenPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_OpenPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_HighestPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->HighestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_HighestPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_LowestPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_LowestPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_ClosePrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_ClosePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_UpperLimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UpperLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_UpperLimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_LowerLimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowerLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_LowerLimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_SettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_SettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_CurrDelta_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CurrDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataStaticField_CurrDelta_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataStaticField() {
  void * jresult ;
  CThostFtdcMarketDataStaticField *result = 0 ;
  
  result = (CThostFtdcMarketDataStaticField *)new CThostFtdcMarketDataStaticField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataStaticField(void * jarg1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_LastPrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_LastPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_Turnover_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_Turnover_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_OpenInterest_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->OpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataLastMatchField_OpenInterest_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataLastMatchField() {
  void * jresult ;
  CThostFtdcMarketDataLastMatchField *result = 0 ;
  
  result = (CThostFtdcMarketDataLastMatchField *)new CThostFtdcMarketDataLastMatchField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataLastMatchField(void * jarg1) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_BidPrice1_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_BidPrice1_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_BidVolume1_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_BidVolume1_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_AskPrice1_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_AskPrice1_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_AskVolume1_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataBestPriceField_AskVolume1_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataBestPriceField() {
  void * jresult ;
  CThostFtdcMarketDataBestPriceField *result = 0 ;
  
  result = (CThostFtdcMarketDataBestPriceField *)new CThostFtdcMarketDataBestPriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataBestPriceField(void * jarg1) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidPrice2_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidPrice2_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidVolume2_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidVolume2_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidPrice3_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidPrice3_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidVolume3_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataBid23Field_BidVolume3_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataBid23Field() {
  void * jresult ;
  CThostFtdcMarketDataBid23Field *result = 0 ;
  
  result = (CThostFtdcMarketDataBid23Field *)new CThostFtdcMarketDataBid23Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataBid23Field(void * jarg1) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskPrice2_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskPrice2_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskVolume2_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskVolume2_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskPrice3_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskPrice3_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskVolume3_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk23Field_AskVolume3_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataAsk23Field() {
  void * jresult ;
  CThostFtdcMarketDataAsk23Field *result = 0 ;
  
  result = (CThostFtdcMarketDataAsk23Field *)new CThostFtdcMarketDataAsk23Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataAsk23Field(void * jarg1) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidPrice4_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidPrice4_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidVolume4_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidVolume4_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidPrice5_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidPrice5_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidVolume5_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataBid45Field_BidVolume5_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataBid45Field() {
  void * jresult ;
  CThostFtdcMarketDataBid45Field *result = 0 ;
  
  result = (CThostFtdcMarketDataBid45Field *)new CThostFtdcMarketDataBid45Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataBid45Field(void * jarg1) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskPrice4_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskPrice4_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskVolume4_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskVolume4_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskPrice5_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskPrice5_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskVolume5_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataAsk45Field_AskVolume5_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataAsk45Field() {
  void * jresult ;
  CThostFtdcMarketDataAsk45Field *result = 0 ;
  
  result = (CThostFtdcMarketDataAsk45Field *)new CThostFtdcMarketDataAsk45Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataAsk45Field(void * jarg1) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_UpdateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_UpdateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_set(void * jarg1, int jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->UpdateMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_get(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_ActionDay_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_ActionDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataUpdateTimeField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataUpdateTimeField() {
  void * jresult ;
  CThostFtdcMarketDataUpdateTimeField *result = 0 ;
  
  result = (CThostFtdcMarketDataUpdateTimeField *)new CThostFtdcMarketDataUpdateTimeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataUpdateTimeField(void * jarg1) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataExchangeField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarketDataExchangeField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataExchangeField() {
  void * jresult ;
  CThostFtdcMarketDataExchangeField *result = 0 ;
  
  result = (CThostFtdcMarketDataExchangeField *)new CThostFtdcMarketDataExchangeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataExchangeField(void * jarg1) {
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataExchangeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSpecificInstrumentField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSpecificInstrumentField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSpecificInstrumentField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSpecificInstrumentField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSpecificInstrumentField() {
  void * jresult ;
  CThostFtdcSpecificInstrumentField *result = 0 ;
  
  result = (CThostFtdcSpecificInstrumentField *)new CThostFtdcSpecificInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSpecificInstrumentField(void * jarg1) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_SettlementGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettlementGroupID, (const char *)arg2, 9-1);
      arg1->SettlementGroupID[9-1] = 0;
    } else {
      arg1->SettlementGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_SettlementGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->SettlementGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_InstrumentStatus_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstrumentStatusType arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (TThostFtdcInstrumentStatusType)jarg2; 
  if (arg1) (arg1)->InstrumentStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_InstrumentStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstrumentStatusType result;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (TThostFtdcInstrumentStatusType) ((arg1)->InstrumentStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_TradingSegmentSN_set(void * jarg1, int jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcTradingSegmentSNType arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (TThostFtdcTradingSegmentSNType)jarg2; 
  if (arg1) (arg1)->TradingSegmentSN = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_TradingSegmentSN_get(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcTradingSegmentSNType result;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (TThostFtdcTradingSegmentSNType) ((arg1)->TradingSegmentSN);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_EnterTime_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EnterTime, (const char *)arg2, 9-1);
      arg1->EnterTime[9-1] = 0;
    } else {
      arg1->EnterTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_EnterTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->EnterTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_EnterReason_set(void * jarg1, char jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstStatusEnterReasonType arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (TThostFtdcInstStatusEnterReasonType)jarg2; 
  if (arg1) (arg1)->EnterReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_EnterReason_get(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstStatusEnterReasonType result;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (TThostFtdcInstStatusEnterReasonType) ((arg1)->EnterReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInstrumentStatusField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInstrumentStatusField() {
  void * jresult ;
  CThostFtdcInstrumentStatusField *result = 0 ;
  
  result = (CThostFtdcInstrumentStatusField *)new CThostFtdcInstrumentStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInstrumentStatusField(void * jarg1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentStatusField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentStatusField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentStatusField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentStatusField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInstrumentStatusField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInstrumentStatusField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInstrumentStatusField() {
  void * jresult ;
  CThostFtdcQryInstrumentStatusField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentStatusField *)new CThostFtdcQryInstrumentStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInstrumentStatusField(void * jarg1) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorAccountField() {
  void * jresult ;
  CThostFtdcInvestorAccountField *result = 0 ;
  
  result = (CThostFtdcInvestorAccountField *)new CThostFtdcInvestorAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorAccountField(void * jarg1) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_Algorithm_set(void * jarg1, char jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcAlgorithmType)jarg2; 
  if (arg1) (arg1)->Algorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_Algorithm_get(void * jarg1) {
  char jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType result;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (TThostFtdcAlgorithmType) ((arg1)->Algorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_Memo_set(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Memo, (const char *)arg2, 161-1);
      arg1->Memo[161-1] = 0;
    } else {
      arg1->Memo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_Memo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->Memo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcPositionProfitAlgorithmField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcPositionProfitAlgorithmField() {
  void * jresult ;
  CThostFtdcPositionProfitAlgorithmField *result = 0 ;
  
  result = (CThostFtdcPositionProfitAlgorithmField *)new CThostFtdcPositionProfitAlgorithmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcPositionProfitAlgorithmField(void * jarg1) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDiscountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDiscountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDiscountField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcDiscountField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDiscountField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDiscountField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDiscountField_Discount_set(void * jarg1, double jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->Discount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDiscountField_Discount_get(void * jarg1) {
  double jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->Discount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcDiscountField() {
  void * jresult ;
  CThostFtdcDiscountField *result = 0 ;
  
  result = (CThostFtdcDiscountField *)new CThostFtdcDiscountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcDiscountField(void * jarg1) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTransferBankField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTransferBankField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTransferBankField_BankBrchID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTransferBankField_BankBrchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTransferBankField() {
  void * jresult ;
  CThostFtdcQryTransferBankField *result = 0 ;
  
  result = (CThostFtdcQryTransferBankField *)new CThostFtdcQryTransferBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTransferBankField(void * jarg1) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankField_BankBrchID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankField_BankBrchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankField_BankName_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankName, (const char *)arg2, 101-1);
      arg1->BankName[101-1] = 0;
    } else {
      arg1->BankName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferBankField_BankName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferBankField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferBankField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferBankField() {
  void * jresult ;
  CThostFtdcTransferBankField *result = 0 ;
  
  result = (CThostFtdcTransferBankField *)new CThostFtdcTransferBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferBankField(void * jarg1) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionDetailField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInvestorPositionDetailField() {
  void * jresult ;
  CThostFtdcQryInvestorPositionDetailField *result = 0 ;
  
  result = (CThostFtdcQryInvestorPositionDetailField *)new CThostFtdcQryInvestorPositionDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInvestorPositionDetailField(void * jarg1) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_OpenDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_OpenDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_OpenPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_OpenPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TradeType_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcTradeTypeType)jarg2; 
  if (arg1) (arg1)->TradeType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TradeType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcTradeTypeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseProfitByDate_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseProfitByDate_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_PositionProfitByDate_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_PositionProfitByDate_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_Margin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Margin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_Margin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Margin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_ExchMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_ExchMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_MarginRateByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_MarginRateByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_MarginRateByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_MarginRateByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_LastSettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_LastSettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_SettlementPrice_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_SettlementPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CloseVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CloseAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TimeFirstVolume_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TimeFirstVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_TimeFirstVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TimeFirstVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_SpecPosiType_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSpecPosiTypeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcSpecPosiTypeType)jarg2; 
  if (arg1) (arg1)->SpecPosiType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_SpecPosiType_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSpecPosiTypeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcSpecPosiTypeType) ((arg1)->SpecPosiType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CombInstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 81-1);
      arg1->CombInstrumentID[81-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionDetailField_CombInstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorPositionDetailField() {
  void * jresult ;
  CThostFtdcInvestorPositionDetailField *result = 0 ;
  
  result = (CThostFtdcInvestorPositionDetailField *)new CThostFtdcInvestorPositionDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorPositionDetailField(void * jarg1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingAccountPasswordField() {
  void * jresult ;
  CThostFtdcTradingAccountPasswordField *result = 0 ;
  
  result = (CThostFtdcTradingAccountPasswordField *)new CThostFtdcTradingAccountPasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingAccountPasswordField(void * jarg1) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_TraderConnectStatus_set(void * jarg1, char jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcTraderConnectStatusType)jarg2; 
  if (arg1) (arg1)->TraderConnectStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_TraderConnectStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType result;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (TThostFtdcTraderConnectStatusType) ((arg1)->TraderConnectStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectRequestDate_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestDate, (const char *)arg2, 9-1);
      arg1->ConnectRequestDate[9-1] = 0;
    } else {
      arg1->ConnectRequestDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectRequestDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectRequestTime_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestTime, (const char *)arg2, 9-1);
      arg1->ConnectRequestTime[9-1] = 0;
    } else {
      arg1->ConnectRequestTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectRequestTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_LastReportDate_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_LastReportDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_LastReportTime_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_LastReportTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectDate_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectDate, (const char *)arg2, 9-1);
      arg1->ConnectDate[9-1] = 0;
    } else {
      arg1->ConnectDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectTime_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectTime, (const char *)arg2, 9-1);
      arg1->ConnectTime[9-1] = 0;
    } else {
      arg1->ConnectTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_ConnectTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_StartDate_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartDate, (const char *)arg2, 9-1);
      arg1->StartDate[9-1] = 0;
    } else {
      arg1->StartDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_StartDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_StartTime_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 9-1);
      arg1->StartTime[9-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_StartTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_MaxTradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxTradeID, (const char *)arg2, 21-1);
      arg1->MaxTradeID[21-1] = 0;
    } else {
      arg1->MaxTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_MaxTradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_MaxOrderMessageReference_set(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderMessageReference, (const char *)arg2, 7-1);
      arg1->MaxOrderMessageReference[7-1] = 0;
    } else {
      arg1->MaxOrderMessageReference[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMDTraderOfferField_MaxOrderMessageReference_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderMessageReference);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMDTraderOfferField() {
  void * jresult ;
  CThostFtdcMDTraderOfferField *result = 0 ;
  
  result = (CThostFtdcMDTraderOfferField *)new CThostFtdcMDTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMDTraderOfferField(void * jarg1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMDTraderOfferField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMDTraderOfferField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMDTraderOfferField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMDTraderOfferField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMDTraderOfferField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMDTraderOfferField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryMDTraderOfferField() {
  void * jresult ;
  CThostFtdcQryMDTraderOfferField *result = 0 ;
  
  result = (CThostFtdcQryMDTraderOfferField *)new CThostFtdcQryMDTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryMDTraderOfferField(void * jarg1) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryNoticeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryNoticeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryNoticeField() {
  void * jresult ;
  CThostFtdcQryNoticeField *result = 0 ;
  
  result = (CThostFtdcQryNoticeField *)new CThostFtdcQryNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryNoticeField(void * jarg1) {
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  
  arg1 = (CThostFtdcQryNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNoticeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNoticeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNoticeField_Content_set(void * jarg1, char * jarg2) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNoticeField_Content_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  result = (char *) ((arg1)->Content);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNoticeField_SequenceLabel_set(void * jarg1, char * jarg2) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SequenceLabel, (const char *)arg2, 2-1);
      arg1->SequenceLabel[2-1] = 0;
    } else {
      arg1->SequenceLabel[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNoticeField_SequenceLabel_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  result = (char *) ((arg1)->SequenceLabel);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcNoticeField() {
  void * jresult ;
  CThostFtdcNoticeField *result = 0 ;
  
  result = (CThostFtdcNoticeField *)new CThostFtdcNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcNoticeField(void * jarg1) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserRightField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserRightField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserRightField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserRightField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserRightField_UserRightType_set(void * jarg1, char jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcUserRightTypeType arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (TThostFtdcUserRightTypeType)jarg2; 
  if (arg1) (arg1)->UserRightType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcUserRightField_UserRightType_get(void * jarg1) {
  char jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcUserRightTypeType result;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (TThostFtdcUserRightTypeType) ((arg1)->UserRightType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserRightField_IsForbidden_set(void * jarg1, int jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsForbidden = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcUserRightField_IsForbidden_get(void * jarg1) {
  int jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsForbidden);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcUserRightField() {
  void * jresult ;
  CThostFtdcUserRightField *result = 0 ;
  
  result = (CThostFtdcUserRightField *)new CThostFtdcUserRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcUserRightField(void * jarg1) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySettlementInfoConfirmField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySettlementInfoConfirmField() {
  void * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *result = 0 ;
  
  result = (CThostFtdcQrySettlementInfoConfirmField *)new CThostFtdcQrySettlementInfoConfirmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySettlementInfoConfirmField(void * jarg1) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoadSettlementInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoadSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoadSettlementInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoadSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcLoadSettlementInfoField() {
  void * jresult ;
  CThostFtdcLoadSettlementInfoField *result = 0 ;
  
  result = (CThostFtdcLoadSettlementInfoField *)new CThostFtdcLoadSettlementInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcLoadSettlementInfoField(void * jarg1) {
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  
  arg1 = (CThostFtdcLoadSettlementInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcAlgorithmType)jarg2; 
  if (arg1) (arg1)->WithdrawAlgorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcAlgorithmType) ((arg1)->WithdrawAlgorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->UsingRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->UsingRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcIncludeCloseProfitType)jarg2; 
  if (arg1) (arg1)->IncludeCloseProfit = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->IncludeCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAllWithoutTradeType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcAllWithoutTradeType)jarg2; 
  if (arg1) (arg1)->AllWithoutTrade = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAllWithoutTradeType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcAllWithoutTradeType) ((arg1)->AllWithoutTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcIncludeCloseProfitType)jarg2; 
  if (arg1) (arg1)->AvailIncludeCloseProfit = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->AvailIncludeCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsBrokerUserEvent = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsBrokerUserEvent);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->FundMortgageRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->FundMortgageRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBalanceAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcBalanceAlgorithmType)jarg2; 
  if (arg1) (arg1)->BalanceAlgorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBalanceAlgorithmType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcBalanceAlgorithmType) ((arg1)->BalanceAlgorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerWithdrawAlgorithmField() {
  void * jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *result = 0 ;
  
  result = (CThostFtdcBrokerWithdrawAlgorithmField *)new CThostFtdcBrokerWithdrawAlgorithmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerWithdrawAlgorithmField(void * jarg1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingAccountPasswordUpdateV1Field() {
  void * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *result = 0 ;
  
  result = (CThostFtdcTradingAccountPasswordUpdateV1Field *)new CThostFtdcTradingAccountPasswordUpdateV1Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingAccountPasswordUpdateV1Field(void * jarg1) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_OldPassword_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_OldPassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_NewPassword_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_NewPassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingAccountPasswordUpdateField() {
  void * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *result = 0 ;
  
  result = (CThostFtdcTradingAccountPasswordUpdateField *)new CThostFtdcTradingAccountPasswordUpdateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingAccountPasswordUpdateField(void * jarg1) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_LegID_set(void * jarg1, int jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcLegIDType)jarg2; 
  if (arg1) (arg1)->LegID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_LegID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  TThostFtdcLegIDType result;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_CombInstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 81-1);
      arg1->CombInstrumentID[81-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_CombInstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_LegInstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LegInstrumentID, (const char *)arg2, 81-1);
      arg1->LegInstrumentID[81-1] = 0;
    } else {
      arg1->LegInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombinationLegField_LegInstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->LegInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCombinationLegField() {
  void * jresult ;
  CThostFtdcQryCombinationLegField *result = 0 ;
  
  result = (CThostFtdcQryCombinationLegField *)new CThostFtdcQryCombinationLegField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCombinationLegField(void * jarg1) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySyncStatusField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySyncStatusField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncStatusField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySyncStatusField() {
  void * jresult ;
  CThostFtdcQrySyncStatusField *result = 0 ;
  
  result = (CThostFtdcQrySyncStatusField *)new CThostFtdcQrySyncStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySyncStatusField(void * jarg1) {
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  
  arg1 = (CThostFtdcQrySyncStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_LegID_set(void * jarg1, int jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcLegIDType)jarg2; 
  if (arg1) (arg1)->LegID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_LegID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegIDType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_LegMultiple_set(void * jarg1, int jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegMultipleType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcLegMultipleType)jarg2; 
  if (arg1) (arg1)->LegMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_LegMultiple_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegMultipleType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcLegMultipleType) ((arg1)->LegMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_ImplyLevel_set(void * jarg1, int jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcImplyLevelType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcImplyLevelType)jarg2; 
  if (arg1) (arg1)->ImplyLevel = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_ImplyLevel_get(void * jarg1) {
  int jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcImplyLevelType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcImplyLevelType) ((arg1)->ImplyLevel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_CombInstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 81-1);
      arg1->CombInstrumentID[81-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_CombInstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_LegInstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LegInstrumentID, (const char *)arg2, 81-1);
      arg1->LegInstrumentID[81-1] = 0;
    } else {
      arg1->LegInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombinationLegField_LegInstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->LegInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCombinationLegField() {
  void * jresult ;
  CThostFtdcCombinationLegField *result = 0 ;
  
  result = (CThostFtdcCombinationLegField *)new CThostFtdcCombinationLegField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCombinationLegField(void * jarg1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncStatusField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncStatusField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncStatusField_DataSyncStatus_set(void * jarg1, char jarg2) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  TThostFtdcDataSyncStatusType arg2 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  arg2 = (TThostFtdcDataSyncStatusType)jarg2; 
  if (arg1) (arg1)->DataSyncStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcSyncStatusField_DataSyncStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  TThostFtdcDataSyncStatusType result;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  result = (TThostFtdcDataSyncStatusType) ((arg1)->DataSyncStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncStatusField() {
  void * jresult ;
  CThostFtdcSyncStatusField *result = 0 ;
  
  result = (CThostFtdcSyncStatusField *)new CThostFtdcSyncStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncStatusField(void * jarg1) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryLinkManField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryLinkManField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryLinkManField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryLinkManField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryLinkManField() {
  void * jresult ;
  CThostFtdcQryLinkManField *result = 0 ;
  
  result = (CThostFtdcQryLinkManField *)new CThostFtdcQryLinkManField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryLinkManField(void * jarg1) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_PersonType_set(void * jarg1, char jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPersonTypeType arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (TThostFtdcPersonTypeType)jarg2; 
  if (arg1) (arg1)->PersonType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcLinkManField_PersonType_get(void * jarg1) {
  char jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPersonTypeType result;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (TThostFtdcPersonTypeType) ((arg1)->PersonType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_IdentifiedCardType_set(void * jarg1, char jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdentifiedCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcLinkManField_IdentifiedCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_PersonName_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PersonName, (const char *)arg2, 81-1);
      arg1->PersonName[81-1] = 0;
    } else {
      arg1->PersonName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_PersonName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->PersonName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_Priority_set(void * jarg1, int jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPriorityType arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (TThostFtdcPriorityType)jarg2; 
  if (arg1) (arg1)->Priority = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcLinkManField_Priority_get(void * jarg1) {
  int jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPriorityType result;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (TThostFtdcPriorityType) ((arg1)->Priority);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_UOAZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UOAZipCode, (const char *)arg2, 11-1);
      arg1->UOAZipCode[11-1] = 0;
    } else {
      arg1->UOAZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_UOAZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->UOAZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLinkManField_PersonFullName_set(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PersonFullName, (const char *)arg2, 101-1);
      arg1->PersonFullName[101-1] = 0;
    } else {
      arg1->PersonFullName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLinkManField_PersonFullName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->PersonFullName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcLinkManField() {
  void * jresult ;
  CThostFtdcLinkManField *result = 0 ;
  
  result = (CThostFtdcLinkManField *)new CThostFtdcLinkManField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcLinkManField(void * jarg1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserEventField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserEventField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserEventField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserEventField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserEventField_UserEventType_set(void * jarg1, char jarg2) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  arg2 = (TThostFtdcUserEventTypeType)jarg2; 
  if (arg1) (arg1)->UserEventType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryBrokerUserEventField_UserEventType_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType result;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  result = (TThostFtdcUserEventTypeType) ((arg1)->UserEventType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBrokerUserEventField() {
  void * jresult ;
  CThostFtdcQryBrokerUserEventField *result = 0 ;
  
  result = (CThostFtdcQryBrokerUserEventField *)new CThostFtdcQryBrokerUserEventField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBrokerUserEventField(void * jarg1) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_UserEventType_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (TThostFtdcUserEventTypeType)jarg2; 
  if (arg1) (arg1)->UserEventType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_UserEventType_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType result;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (TThostFtdcUserEventTypeType) ((arg1)->UserEventType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_EventSequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->EventSequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_EventSequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->EventSequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_EventDate_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EventDate, (const char *)arg2, 9-1);
      arg1->EventDate[9-1] = 0;
    } else {
      arg1->EventDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_EventDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->EventDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_EventTime_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EventTime, (const char *)arg2, 9-1);
      arg1->EventTime[9-1] = 0;
    } else {
      arg1->EventTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_EventTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->EventTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_UserEventInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserEventInfo, (const char *)arg2, 1025-1);
      arg1->UserEventInfo[1025-1] = 0;
    } else {
      arg1->UserEventInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_UserEventInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->UserEventInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserEventField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerUserEventField() {
  void * jresult ;
  CThostFtdcBrokerUserEventField *result = 0 ;
  
  result = (CThostFtdcBrokerUserEventField *)new CThostFtdcBrokerUserEventField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerUserEventField(void * jarg1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryContractBankField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryContractBankField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryContractBankField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryContractBankField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryContractBankField_BankBrchID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryContractBankField_BankBrchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryContractBankField() {
  void * jresult ;
  CThostFtdcQryContractBankField *result = 0 ;
  
  result = (CThostFtdcQryContractBankField *)new CThostFtdcQryContractBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryContractBankField(void * jarg1) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcContractBankField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcContractBankField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcContractBankField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcContractBankField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcContractBankField_BankBrchID_set(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcContractBankField_BankBrchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcContractBankField_BankName_set(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankName, (const char *)arg2, 101-1);
      arg1->BankName[101-1] = 0;
    } else {
      arg1->BankName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcContractBankField_BankName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcContractBankField() {
  void * jresult ;
  CThostFtdcContractBankField *result = 0 ;
  
  result = (CThostFtdcContractBankField *)new CThostFtdcContractBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcContractBankField(void * jarg1) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_OpenDate_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_OpenDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_ComTradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ComTradeID, (const char *)arg2, 21-1);
      arg1->ComTradeID[21-1] = 0;
    } else {
      arg1->ComTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_ComTradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->ComTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TradeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TradeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TotalAmt_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TotalAmt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TotalAmt_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TotalAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_Margin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Margin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_Margin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Margin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_ExchMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_ExchMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_LegID_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcLegIDType)jarg2; 
  if (arg1) (arg1)->LegID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_LegID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegIDType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_LegMultiple_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegMultipleType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcLegMultipleType)jarg2; 
  if (arg1) (arg1)->LegMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_LegMultiple_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegMultipleType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcLegMultipleType) ((arg1)->LegMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcTradeGroupIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcTradeGroupIDType)jarg2; 
  if (arg1) (arg1)->TradeGroupID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcTradeGroupIDType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcTradeGroupIDType) ((arg1)->TradeGroupID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 81-1);
      arg1->CombInstrumentID[81-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorPositionCombineDetailField() {
  void * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *result = 0 ;
  
  result = (CThostFtdcInvestorPositionCombineDetailField *)new CThostFtdcInvestorPositionCombineDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorPositionCombineDetailField(void * jarg1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_OrderPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_OrderPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_CombOffsetFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_CombOffsetFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_CombHedgeFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_CombHedgeFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_VolumeTotalOriginal_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_VolumeTotalOriginal_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_TimeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_TimeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_GTDDate_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_GTDDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_VolumeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_VolumeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_MinVolume_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_MinVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ContingentCondition_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ContingentCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_StopPrice_set(void * jarg1, double jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_StopPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ForceCloseReason_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ForceCloseReason_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_IsAutoSuspend_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_IsAutoSuspend_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_UserForceClose_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_UserForceClose_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ParkedOrderID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderID, (const char *)arg2, 13-1);
      arg1->ParkedOrderID[13-1] = 0;
    } else {
      arg1->ParkedOrderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ParkedOrderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_UserType_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_UserType_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcUserTypeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_Status_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcParkedOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcParkedOrderStatusType)jarg2; 
  if (arg1) (arg1)->Status = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_Status_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcParkedOrderStatusType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcParkedOrderStatusType) ((arg1)->Status);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_IsSwapOrder_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_IsSwapOrder_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcParkedOrderField() {
  void * jresult ;
  CThostFtdcParkedOrderField *result = 0 ;
  
  result = (CThostFtdcParkedOrderField *)new CThostFtdcParkedOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcParkedOrderField(void * jarg1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_OrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_OrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_VolumeChange_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_VolumeChange_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ParkedOrderActionID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderActionID, (const char *)arg2, 13-1);
      arg1->ParkedOrderActionID[13-1] = 0;
    } else {
      arg1->ParkedOrderActionID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ParkedOrderActionID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderActionID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_UserType_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_UserType_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcUserTypeType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_Status_set(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcParkedOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcParkedOrderStatusType)jarg2; 
  if (arg1) (arg1)->Status = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_Status_get(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcParkedOrderStatusType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcParkedOrderStatusType) ((arg1)->Status);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcParkedOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcParkedOrderActionField() {
  void * jresult ;
  CThostFtdcParkedOrderActionField *result = 0 ;
  
  result = (CThostFtdcParkedOrderActionField *)new CThostFtdcParkedOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcParkedOrderActionField(void * jarg1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryParkedOrderField() {
  void * jresult ;
  CThostFtdcQryParkedOrderField *result = 0 ;
  
  result = (CThostFtdcQryParkedOrderField *)new CThostFtdcQryParkedOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryParkedOrderField(void * jarg1) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryParkedOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryParkedOrderActionField() {
  void * jresult ;
  CThostFtdcQryParkedOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryParkedOrderActionField *)new CThostFtdcQryParkedOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryParkedOrderActionField(void * jarg1) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_ParkedOrderID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderID, (const char *)arg2, 13-1);
      arg1->ParkedOrderID[13-1] = 0;
    } else {
      arg1->ParkedOrderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_ParkedOrderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRemoveParkedOrderField() {
  void * jresult ;
  CThostFtdcRemoveParkedOrderField *result = 0 ;
  
  result = (CThostFtdcRemoveParkedOrderField *)new CThostFtdcRemoveParkedOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRemoveParkedOrderField(void * jarg1) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderActionID, (const char *)arg2, 13-1);
      arg1->ParkedOrderActionID[13-1] = 0;
    } else {
      arg1->ParkedOrderActionID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderActionID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRemoveParkedOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRemoveParkedOrderActionField() {
  void * jresult ;
  CThostFtdcRemoveParkedOrderActionField *result = 0 ;
  
  result = (CThostFtdcRemoveParkedOrderActionField *)new CThostFtdcRemoveParkedOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRemoveParkedOrderActionField(void * jarg1) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->UsingRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->UsingRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->FundMortgageRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->FundMortgageRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorWithdrawAlgorithmField() {
  void * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *result = 0 ;
  
  result = (CThostFtdcInvestorWithdrawAlgorithmField *)new CThostFtdcInvestorWithdrawAlgorithmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorWithdrawAlgorithmField(void * jarg1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 81-1);
      arg1->CombInstrumentID[81-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInvestorPositionCombineDetailField() {
  void * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *result = 0 ;
  
  result = (CThostFtdcQryInvestorPositionCombineDetailField *)new CThostFtdcQryInvestorPositionCombineDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInvestorPositionCombineDetailField(void * jarg1) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarketDataAveragePriceField_AveragePrice_set(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAveragePriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AveragePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMarketDataAveragePriceField_AveragePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAveragePriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AveragePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarketDataAveragePriceField() {
  void * jresult ;
  CThostFtdcMarketDataAveragePriceField *result = 0 ;
  
  result = (CThostFtdcMarketDataAveragePriceField *)new CThostFtdcMarketDataAveragePriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarketDataAveragePriceField(void * jarg1) {
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataAveragePriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyInvestorPasswordField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyInvestorPasswordField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyInvestorPasswordField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyInvestorPasswordField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyInvestorPasswordField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyInvestorPasswordField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcVerifyInvestorPasswordField() {
  void * jresult ;
  CThostFtdcVerifyInvestorPasswordField *result = 0 ;
  
  result = (CThostFtdcVerifyInvestorPasswordField *)new CThostFtdcVerifyInvestorPasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcVerifyInvestorPasswordField(void * jarg1) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserIPField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserIPField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserIPField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserIPField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserIPField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserIPField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserIPField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserIPField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserIPField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserIPField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserIPField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserIPField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserIPField_IPMask_set(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPMask, (const char *)arg2, 33-1);
      arg1->IPMask[33-1] = 0;
    } else {
      arg1->IPMask[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserIPField_IPMask_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->IPMask);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcUserIPField() {
  void * jresult ;
  CThostFtdcUserIPField *result = 0 ;
  
  result = (CThostFtdcUserIPField *)new CThostFtdcUserIPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcUserIPField(void * jarg1) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_SendTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_SendTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->SendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_FieldContent_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FieldContent, (const char *)arg2, 501-1);
      arg1->FieldContent[501-1] = 0;
    } else {
      arg1->FieldContent[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_FieldContent_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->FieldContent);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_SequenceSeries_set(void * jarg1, short jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (TThostFtdcSequenceSeriesType)jarg2; 
  if (arg1) (arg1)->SequenceSeries = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_SequenceSeries_get(void * jarg1) {
  short jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeInfoField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingNoticeInfoField() {
  void * jresult ;
  CThostFtdcTradingNoticeInfoField *result = 0 ;
  
  result = (CThostFtdcTradingNoticeInfoField *)new CThostFtdcTradingNoticeInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingNoticeInfoField(void * jarg1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_SequenceSeries_set(void * jarg1, short jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (TThostFtdcSequenceSeriesType)jarg2; 
  if (arg1) (arg1)->SequenceSeries = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_SequenceSeries_get(void * jarg1) {
  short jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_SendTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_SendTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->SendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_FieldContent_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FieldContent, (const char *)arg2, 501-1);
      arg1->FieldContent[501-1] = 0;
    } else {
      arg1->FieldContent[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_FieldContent_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->FieldContent);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingNoticeField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingNoticeField() {
  void * jresult ;
  CThostFtdcTradingNoticeField *result = 0 ;
  
  result = (CThostFtdcTradingNoticeField *)new CThostFtdcTradingNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingNoticeField(void * jarg1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingNoticeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingNoticeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingNoticeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingNoticeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTradingNoticeField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTradingNoticeField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTradingNoticeField() {
  void * jresult ;
  CThostFtdcQryTradingNoticeField *result = 0 ;
  
  result = (CThostFtdcQryTradingNoticeField *)new CThostFtdcQryTradingNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTradingNoticeField(void * jarg1) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryErrOrderField() {
  void * jresult ;
  CThostFtdcQryErrOrderField *result = 0 ;
  
  result = (CThostFtdcQryErrOrderField *)new CThostFtdcQryErrOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryErrOrderField(void * jarg1) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_OrderPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderField_OrderPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_CombOffsetFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_CombOffsetFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_CombHedgeFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_CombHedgeFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcErrOrderField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_VolumeTotalOriginal_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderField_VolumeTotalOriginal_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_TimeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderField_TimeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_GTDDate_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_GTDDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_VolumeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderField_VolumeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_MinVolume_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderField_MinVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ContingentCondition_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ContingentCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_StopPrice_set(void * jarg1, double jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcErrOrderField_StopPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ForceCloseReason_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ForceCloseReason_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_IsAutoSuspend_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderField_IsAutoSuspend_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_UserForceClose_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderField_UserForceClose_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_IsSwapOrder_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderField_IsSwapOrder_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcErrOrderField() {
  void * jresult ;
  CThostFtdcErrOrderField *result = 0 ;
  
  result = (CThostFtdcErrOrderField *)new CThostFtdcErrOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcErrOrderField(void * jarg1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_TimeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_TimeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_GTDDate_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_GTDDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeCondition_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_MinVolume_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_MinVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ContingentCondition_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ContingentCondition_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_StopPrice_set(void * jarg1, double jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_StopPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ForceCloseReason_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ForceCloseReason_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_NotifySequence_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_NotifySequence_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderSource_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderSource_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderStatus_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->OrderStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderType_set(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_OrderType_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeTraded_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTraded = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeTraded_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeTotal_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_VolumeTotal_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InsertDate_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InsertDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InsertTime_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InsertTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ActiveTime_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ActiveTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SuspendTime_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SuspendTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->SuspendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UpdateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UpdateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CancelTime_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CancelTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ActiveTraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ActiveTraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ClearingPartID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ClearingPartID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UserForceClose_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_UserForceClose_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ActiveUserID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ActiveUserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelativeOrderSysID, (const char *)arg2, 21-1);
      arg1->RelativeOrderSysID[21-1] = 0;
    } else {
      arg1->RelativeOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->RelativeOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ZCETotalTradedVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ZCETotalTradedVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_IsSwapOrder_set(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_IsSwapOrder_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_reserve3_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve3, (const char *)arg2, 16-1);
      arg1->reserve3[16-1] = 0;
    } else {
      arg1->reserve3[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_reserve3_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->reserve3);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrorConditionalOrderField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcErrorConditionalOrderField() {
  void * jresult ;
  CThostFtdcErrorConditionalOrderField *result = 0 ;
  
  result = (CThostFtdcErrorConditionalOrderField *)new CThostFtdcErrorConditionalOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcErrorConditionalOrderField(void * jarg1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryErrOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryErrOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryErrOrderActionField() {
  void * jresult ;
  CThostFtdcQryErrOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryErrOrderActionField *)new CThostFtdcQryErrOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryErrOrderActionField(void * jarg1) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderActionRef_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderActionRef_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderRef_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderRef_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_FrontID_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_FrontID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderSysID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderSysID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionFlag_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_LimitPrice_set(void * jarg1, double jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_LimitPrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_VolumeChange_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_VolumeChange_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionDate_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionTime_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_TraderID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_TraderID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionLocalID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ActionLocalID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ClientID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ClientID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_BusinessUnit_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_BusinessUnit_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderActionStatus_set(void * jarg1, char jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_OrderActionStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_StatusMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_StatusMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_BranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BranchID, (const char *)arg2, 9-1);
      arg1->BranchID[9-1] = 0;
    } else {
      arg1->BranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_BranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 16-1);
      arg1->reserve2[16-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcErrOrderActionField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcErrOrderActionField() {
  void * jresult ;
  CThostFtdcErrOrderActionField *result = 0 ;
  
  result = (CThostFtdcErrOrderActionField *)new CThostFtdcErrOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcErrOrderActionField(void * jarg1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryExchangeSequenceField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeSequenceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryExchangeSequenceField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeSequenceField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryExchangeSequenceField() {
  void * jresult ;
  CThostFtdcQryExchangeSequenceField *result = 0 ;
  
  result = (CThostFtdcQryExchangeSequenceField *)new CThostFtdcQryExchangeSequenceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryExchangeSequenceField(void * jarg1) {
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeSequenceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeSequenceField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcExchangeSequenceField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeSequenceField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcExchangeSequenceField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcExchangeSequenceField_MarketStatus_set(void * jarg1, char jarg2) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcInstrumentStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  arg2 = (TThostFtdcInstrumentStatusType)jarg2; 
  if (arg1) (arg1)->MarketStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcExchangeSequenceField_MarketStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcInstrumentStatusType result;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  result = (TThostFtdcInstrumentStatusType) ((arg1)->MarketStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcExchangeSequenceField() {
  void * jresult ;
  CThostFtdcExchangeSequenceField *result = 0 ;
  
  result = (CThostFtdcExchangeSequenceField *)new CThostFtdcExchangeSequenceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcExchangeSequenceField(void * jarg1) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_OffsetFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_OffsetFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_MaxVolume_set(void * jarg1, int jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_MaxVolume_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_Price_set(void * jarg1, double jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->Price = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_Price_get(void * jarg1) {
  double jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->Price);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMaxOrderVolumeWithPriceField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryMaxOrderVolumeWithPriceField() {
  void * jresult ;
  CThostFtdcQryMaxOrderVolumeWithPriceField *result = 0 ;
  
  result = (CThostFtdcQryMaxOrderVolumeWithPriceField *)new CThostFtdcQryMaxOrderVolumeWithPriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryMaxOrderVolumeWithPriceField(void * jarg1) {
  CThostFtdcQryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *) 0 ;
  
  arg1 = (CThostFtdcQryMaxOrderVolumeWithPriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingParamsField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBrokerTradingParamsField() {
  void * jresult ;
  CThostFtdcQryBrokerTradingParamsField *result = 0 ;
  
  result = (CThostFtdcQryBrokerTradingParamsField *)new CThostFtdcQryBrokerTradingParamsField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBrokerTradingParamsField(void * jarg1) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_MarginPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcMarginPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcMarginPriceTypeType)jarg2; 
  if (arg1) (arg1)->MarginPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_MarginPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcMarginPriceTypeType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcMarginPriceTypeType) ((arg1)->MarginPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_Algorithm_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcAlgorithmType)jarg2; 
  if (arg1) (arg1)->Algorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_Algorithm_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcAlgorithmType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcAlgorithmType) ((arg1)->Algorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcIncludeCloseProfitType)jarg2; 
  if (arg1) (arg1)->AvailIncludeCloseProfit = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->AvailIncludeCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcOptionRoyaltyPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcOptionRoyaltyPriceTypeType)jarg2; 
  if (arg1) (arg1)->OptionRoyaltyPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcOptionRoyaltyPriceTypeType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcOptionRoyaltyPriceTypeType) ((arg1)->OptionRoyaltyPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingParamsField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerTradingParamsField() {
  void * jresult ;
  CThostFtdcBrokerTradingParamsField *result = 0 ;
  
  result = (CThostFtdcBrokerTradingParamsField *)new CThostFtdcBrokerTradingParamsField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerTradingParamsField(void * jarg1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBrokerTradingAlgosField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBrokerTradingAlgosField() {
  void * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *result = 0 ;
  
  result = (CThostFtdcQryBrokerTradingAlgosField *)new CThostFtdcQryBrokerTradingAlgosField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBrokerTradingAlgosField(void * jarg1) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandlePositionAlgoIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (TThostFtdcHandlePositionAlgoIDType)jarg2; 
  if (arg1) (arg1)->HandlePositionAlgoID = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandlePositionAlgoIDType result;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (TThostFtdcHandlePositionAlgoIDType) ((arg1)->HandlePositionAlgoID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcFindMarginRateAlgoIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (TThostFtdcFindMarginRateAlgoIDType)jarg2; 
  if (arg1) (arg1)->FindMarginRateAlgoID = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcFindMarginRateAlgoIDType result;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (TThostFtdcFindMarginRateAlgoIDType) ((arg1)->FindMarginRateAlgoID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandleTradingAccountAlgoIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (TThostFtdcHandleTradingAccountAlgoIDType)jarg2; 
  if (arg1) (arg1)->HandleTradingAccountAlgoID = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandleTradingAccountAlgoIDType result;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (TThostFtdcHandleTradingAccountAlgoIDType) ((arg1)->HandleTradingAccountAlgoID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerTradingAlgosField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerTradingAlgosField() {
  void * jresult ;
  CThostFtdcBrokerTradingAlgosField *result = 0 ;
  
  result = (CThostFtdcBrokerTradingAlgosField *)new CThostFtdcBrokerTradingAlgosField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerTradingAlgosField(void * jarg1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQueryBrokerDepositField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQueryBrokerDepositField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQueryBrokerDepositField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQueryBrokerDepositField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQueryBrokerDepositField() {
  void * jresult ;
  CThostFtdcQueryBrokerDepositField *result = 0 ;
  
  result = (CThostFtdcQueryBrokerDepositField *)new CThostFtdcQueryBrokerDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQueryBrokerDepositField(void * jarg1) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_PreBalance_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_PreBalance_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_CurrMargin_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CurrMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_CurrMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_CloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_CloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Balance_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Balance_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Deposit_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Deposit_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Withdraw_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Withdraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Withdraw_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Available_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Available_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Reserve_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_Reserve_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_FrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcBrokerDepositField_FrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerDepositField() {
  void * jresult ;
  CThostFtdcBrokerDepositField *result = 0 ;
  
  result = (CThostFtdcBrokerDepositField *)new CThostFtdcBrokerDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerDepositField(void * jarg1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCFMMCBrokerKeyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCFMMCBrokerKeyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCFMMCBrokerKeyField() {
  void * jresult ;
  CThostFtdcQryCFMMCBrokerKeyField *result = 0 ;
  
  result = (CThostFtdcQryCFMMCBrokerKeyField *)new CThostFtdcQryCFMMCBrokerKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCFMMCBrokerKeyField(void * jarg1) {
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  
  arg1 = (CThostFtdcQryCFMMCBrokerKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_CreateDate_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CreateDate, (const char *)arg2, 9-1);
      arg1->CreateDate[9-1] = 0;
    } else {
      arg1->CreateDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_CreateDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->CreateDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_CreateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CreateTime, (const char *)arg2, 9-1);
      arg1->CreateTime[9-1] = 0;
    } else {
      arg1->CreateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_CreateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->CreateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_KeyID_set(void * jarg1, int jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->KeyID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_KeyID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_CurrentKey_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrentKey, (const char *)arg2, 21-1);
      arg1->CurrentKey[21-1] = 0;
    } else {
      arg1->CurrentKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_CurrentKey_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->CurrentKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_KeyKind_set(void * jarg1, char jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcCFMMCKeyKindType arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (TThostFtdcCFMMCKeyKindType)jarg2; 
  if (arg1) (arg1)->KeyKind = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCFMMCBrokerKeyField_KeyKind_get(void * jarg1) {
  char jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcCFMMCKeyKindType result;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (TThostFtdcCFMMCKeyKindType) ((arg1)->KeyKind);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCFMMCBrokerKeyField() {
  void * jresult ;
  CThostFtdcCFMMCBrokerKeyField *result = 0 ;
  
  result = (CThostFtdcCFMMCBrokerKeyField *)new CThostFtdcCFMMCBrokerKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCFMMCBrokerKeyField(void * jarg1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_KeyID_set(void * jarg1, int jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->KeyID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_KeyID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrentKey, (const char *)arg2, 21-1);
      arg1->CurrentKey[21-1] = 0;
    } else {
      arg1->CurrentKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->CurrentKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCFMMCTradingAccountKeyField() {
  void * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *result = 0 ;
  
  result = (CThostFtdcCFMMCTradingAccountKeyField *)new CThostFtdcCFMMCTradingAccountKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCFMMCTradingAccountKeyField(void * jarg1) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCFMMCTradingAccountKeyField() {
  void * jresult ;
  CThostFtdcQryCFMMCTradingAccountKeyField *result = 0 ;
  
  result = (CThostFtdcQryCFMMCTradingAccountKeyField *)new CThostFtdcQryCFMMCTradingAccountKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCFMMCTradingAccountKeyField(void * jarg1) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_OTPVendorsID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OTPVendorsID, (const char *)arg2, 2-1);
      arg1->OTPVendorsID[2-1] = 0;
    } else {
      arg1->OTPVendorsID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_OTPVendorsID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->OTPVendorsID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_SerialNumber_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SerialNumber, (const char *)arg2, 17-1);
      arg1->SerialNumber[17-1] = 0;
    } else {
      arg1->SerialNumber[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_SerialNumber_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->SerialNumber);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_AuthKey_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthKey, (const char *)arg2, 41-1);
      arg1->AuthKey[41-1] = 0;
    } else {
      arg1->AuthKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_AuthKey_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->AuthKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_LastDrift_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastDriftType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (TThostFtdcLastDriftType)jarg2; 
  if (arg1) (arg1)->LastDrift = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_LastDrift_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastDriftType result;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (TThostFtdcLastDriftType) ((arg1)->LastDrift);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_LastSuccess_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastSuccessType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (TThostFtdcLastSuccessType)jarg2; 
  if (arg1) (arg1)->LastSuccess = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_LastSuccess_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastSuccessType result;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (TThostFtdcLastSuccessType) ((arg1)->LastSuccess);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_OTPType_set(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcOTPTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (TThostFtdcOTPTypeType)jarg2; 
  if (arg1) (arg1)->OTPType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBrokerUserOTPParamField_OTPType_get(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcOTPTypeType result;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (TThostFtdcOTPTypeType) ((arg1)->OTPType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerUserOTPParamField() {
  void * jresult ;
  CThostFtdcBrokerUserOTPParamField *result = 0 ;
  
  result = (CThostFtdcBrokerUserOTPParamField *)new CThostFtdcBrokerUserOTPParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerUserOTPParamField(void * jarg1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_OTPType_set(void * jarg1, char jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  TThostFtdcOTPTypeType arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (TThostFtdcOTPTypeType)jarg2; 
  if (arg1) (arg1)->OTPType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_OTPType_get(void * jarg1) {
  char jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  TThostFtdcOTPTypeType result;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (TThostFtdcOTPTypeType) ((arg1)->OTPType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_set(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FirstOTP, (const char *)arg2, 41-1);
      arg1->FirstOTP[41-1] = 0;
    } else {
      arg1->FirstOTP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_get(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->FirstOTP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_set(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SecondOTP, (const char *)arg2, 41-1);
      arg1->SecondOTP[41-1] = 0;
    } else {
      arg1->SecondOTP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_get(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->SecondOTP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcManualSyncBrokerUserOTPField() {
  void * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *result = 0 ;
  
  result = (CThostFtdcManualSyncBrokerUserOTPField *)new CThostFtdcManualSyncBrokerUserOTPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcManualSyncBrokerUserOTPField(void * jarg1) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCommRateModelField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCommRateModelField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCommRateModelField_CommModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCommRateModelField_CommModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCommRateModelField_CommModelName_set(void * jarg1, char * jarg2) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelName, (const char *)arg2, 161-1);
      arg1->CommModelName[161-1] = 0;
    } else {
      arg1->CommModelName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCommRateModelField_CommModelName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->CommModelName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCommRateModelField() {
  void * jresult ;
  CThostFtdcCommRateModelField *result = 0 ;
  
  result = (CThostFtdcCommRateModelField *)new CThostFtdcCommRateModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCommRateModelField(void * jarg1) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCommRateModelField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCommRateModelField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCommRateModelField_CommModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCommRateModelField_CommModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCommRateModelField() {
  void * jresult ;
  CThostFtdcQryCommRateModelField *result = 0 ;
  
  result = (CThostFtdcQryCommRateModelField *)new CThostFtdcQryCommRateModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCommRateModelField(void * jarg1) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarginModelField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarginModelField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarginModelField_MarginModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarginModelField_MarginModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMarginModelField_MarginModelName_set(void * jarg1, char * jarg2) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelName, (const char *)arg2, 161-1);
      arg1->MarginModelName[161-1] = 0;
    } else {
      arg1->MarginModelName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMarginModelField_MarginModelName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  result = (char *) ((arg1)->MarginModelName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMarginModelField() {
  void * jresult ;
  CThostFtdcMarginModelField *result = 0 ;
  
  result = (CThostFtdcMarginModelField *)new CThostFtdcMarginModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMarginModelField(void * jarg1) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMarginModelField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMarginModelField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMarginModelField_MarginModelID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMarginModelField_MarginModelID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryMarginModelField() {
  void * jresult ;
  CThostFtdcQryMarginModelField *result = 0 ;
  
  result = (CThostFtdcQryMarginModelField *)new CThostFtdcQryMarginModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryMarginModelField(void * jarg1) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_Direction_set(void * jarg1, char jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_Direction_get(void * jarg1) {
  char jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_Volume_set(void * jarg1, int jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_Volume_get(void * jarg1) {
  int jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcEWarrantOffsetField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcEWarrantOffsetField() {
  void * jresult ;
  CThostFtdcEWarrantOffsetField *result = 0 ;
  
  result = (CThostFtdcEWarrantOffsetField *)new CThostFtdcEWarrantOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcEWarrantOffsetField(void * jarg1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryEWarrantOffsetField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryEWarrantOffsetField() {
  void * jresult ;
  CThostFtdcQryEWarrantOffsetField *result = 0 ;
  
  result = (CThostFtdcQryEWarrantOffsetField *)new CThostFtdcQryEWarrantOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryEWarrantOffsetField(void * jarg1) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 81-1);
      arg1->ProductGroupID[81-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->ProductGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryInvestorProductGroupMarginField() {
  void * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *result = 0 ;
  
  result = (CThostFtdcQryInvestorProductGroupMarginField *)new CThostFtdcQryInvestorProductGroupMarginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryInvestorProductGroupMarginField(void * jarg1) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_SettlementID_set(void * jarg1, int jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_SettlementID_get(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_FrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_FrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_UseMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_UseMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongUseMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongUseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongUseMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongUseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortUseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortUseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ExchMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ExchMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongExchMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongExchMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_CloseProfit_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_CloseProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_FrozenCommission_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_FrozenCommission_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_Commission_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_Commission_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_FrozenCash_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_FrozenCash_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_CashIn_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_CashIn_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_PositionProfit_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_PositionProfit_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_OffsetAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_OffsetAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongExchOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongExchOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_set(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortExchOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortExchOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_HedgeFlag_set(void * jarg1, char jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_HedgeFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ProductGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 81-1);
      arg1->ProductGroupID[81-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcInvestorProductGroupMarginField_ProductGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->ProductGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcInvestorProductGroupMarginField() {
  void * jresult ;
  CThostFtdcInvestorProductGroupMarginField *result = 0 ;
  
  result = (CThostFtdcInvestorProductGroupMarginField *)new CThostFtdcInvestorProductGroupMarginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcInvestorProductGroupMarginField(void * jarg1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestUnitID_set(void * jarg1, char * jarg2) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestUnitID, (const char *)arg2, 17-1);
      arg1->InvestUnitID[17-1] = 0;
    } else {
      arg1->InvestUnitID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestUnitID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->InvestUnitID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQueryCFMMCTradingAccountTokenField() {
  void * jresult ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *result = 0 ;
  
  result = (CThostFtdcQueryCFMMCTradingAccountTokenField *)new CThostFtdcQueryCFMMCTradingAccountTokenField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQueryCFMMCTradingAccountTokenField(void * jarg1) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_KeyID_set(void * jarg1, int jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->KeyID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_KeyID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_Token_set(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Token, (const char *)arg2, 21-1);
      arg1->Token[21-1] = 0;
    } else {
      arg1->Token[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCFMMCTradingAccountTokenField_Token_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->Token);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCFMMCTradingAccountTokenField() {
  void * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *result = 0 ;
  
  result = (CThostFtdcCFMMCTradingAccountTokenField *)new CThostFtdcCFMMCTradingAccountTokenField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCFMMCTradingAccountTokenField(void * jarg1) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductGroupField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductGroupField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductGroupField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductGroupField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductGroupField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductGroupField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryProductGroupField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryProductGroupField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductGroupField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryProductGroupField() {
  void * jresult ;
  CThostFtdcQryProductGroupField *result = 0 ;
  
  result = (CThostFtdcQryProductGroupField *)new CThostFtdcQryProductGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryProductGroupField(void * jarg1) {
  CThostFtdcQryProductGroupField *arg1 = (CThostFtdcQryProductGroupField *) 0 ;
  
  arg1 = (CThostFtdcQryProductGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductGroupField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductGroupField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductGroupField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductGroupField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductGroupField_reserve2_set(void * jarg1, char * jarg2) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve2, (const char *)arg2, 31-1);
      arg1->reserve2[31-1] = 0;
    } else {
      arg1->reserve2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductGroupField_reserve2_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  result = (char *) ((arg1)->reserve2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductGroupField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductGroupField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcProductGroupField_ProductGroupID_set(void * jarg1, char * jarg2) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 81-1);
      arg1->ProductGroupID[81-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcProductGroupField_ProductGroupID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  result = (char *) ((arg1)->ProductGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcProductGroupField() {
  void * jresult ;
  CThostFtdcProductGroupField *result = 0 ;
  
  result = (CThostFtdcProductGroupField *)new CThostFtdcProductGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcProductGroupField(void * jarg1) {
  CThostFtdcProductGroupField *arg1 = (CThostFtdcProductGroupField *) 0 ;
  
  arg1 = (CThostFtdcProductGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_BulletinID_set(void * jarg1, int jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcBulletinIDType arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (TThostFtdcBulletinIDType)jarg2; 
  if (arg1) (arg1)->BulletinID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBulletinField_BulletinID_get(void * jarg1) {
  int jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcBulletinIDType result;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (TThostFtdcBulletinIDType) ((arg1)->BulletinID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBulletinField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_NewsType_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewsType, (const char *)arg2, 3-1);
      arg1->NewsType[3-1] = 0;
    } else {
      arg1->NewsType[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_NewsType_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->NewsType);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_NewsUrgency_set(void * jarg1, char jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (TThostFtdcNewsUrgencyType)jarg2; 
  if (arg1) (arg1)->NewsUrgency = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcBulletinField_NewsUrgency_get(void * jarg1) {
  char jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType result;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (TThostFtdcNewsUrgencyType) ((arg1)->NewsUrgency);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_SendTime_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_SendTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->SendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_Abstract_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Abstract, (const char *)arg2, 81-1);
      arg1->Abstract[81-1] = 0;
    } else {
      arg1->Abstract[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_Abstract_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->Abstract);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_ComeFrom_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ComeFrom, (const char *)arg2, 21-1);
      arg1->ComeFrom[21-1] = 0;
    } else {
      arg1->ComeFrom[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_ComeFrom_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->ComeFrom);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_Content_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_Content_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->Content);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_URLLink_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->URLLink, (const char *)arg2, 201-1);
      arg1->URLLink[201-1] = 0;
    } else {
      arg1->URLLink[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_URLLink_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->URLLink);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBulletinField_MarketID_set(void * jarg1, char * jarg2) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarketID, (const char *)arg2, 31-1);
      arg1->MarketID[31-1] = 0;
    } else {
      arg1->MarketID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBulletinField_MarketID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  result = (char *) ((arg1)->MarketID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBulletinField() {
  void * jresult ;
  CThostFtdcBulletinField *result = 0 ;
  
  result = (CThostFtdcBulletinField *)new CThostFtdcBulletinField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBulletinField(void * jarg1) {
  CThostFtdcBulletinField *arg1 = (CThostFtdcBulletinField *) 0 ;
  
  arg1 = (CThostFtdcBulletinField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_BulletinID_set(void * jarg1, int jarg2) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcBulletinIDType arg2 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  arg2 = (TThostFtdcBulletinIDType)jarg2; 
  if (arg1) (arg1)->BulletinID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_BulletinID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcBulletinIDType result;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  result = (TThostFtdcBulletinIDType) ((arg1)->BulletinID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_SequenceNo_set(void * jarg1, int jarg2) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_SequenceNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_NewsType_set(void * jarg1, char * jarg2) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewsType, (const char *)arg2, 3-1);
      arg1->NewsType[3-1] = 0;
    } else {
      arg1->NewsType[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_NewsType_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  result = (char *) ((arg1)->NewsType);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_NewsUrgency_set(void * jarg1, char jarg2) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType arg2 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  arg2 = (TThostFtdcNewsUrgencyType)jarg2; 
  if (arg1) (arg1)->NewsUrgency = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryBulletinField_NewsUrgency_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  TThostFtdcNewsUrgencyType result;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  result = (TThostFtdcNewsUrgencyType) ((arg1)->NewsUrgency);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryBulletinField() {
  void * jresult ;
  CThostFtdcQryBulletinField *result = 0 ;
  
  result = (CThostFtdcQryBulletinField *)new CThostFtdcQryBulletinField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryBulletinField(void * jarg1) {
  CThostFtdcQryBulletinField *arg1 = (CThostFtdcQryBulletinField *) 0 ;
  
  arg1 = (CThostFtdcQryBulletinField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_TopicID_set(void * jarg1, int jarg2) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->TopicID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_TopicID_get(void * jarg1) {
  int jresult ;
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->TopicID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_InstrumentNo_set(void * jarg1, int jarg2) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstrumentNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_InstrumentNo_get(void * jarg1) {
  int jresult ;
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstrumentNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_CodePrice_set(void * jarg1, double jarg2) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->CodePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_CodePrice_get(void * jarg1) {
  double jresult ;
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->CodePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_VolumeMultiple_set(void * jarg1, int jarg2) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType arg2 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeMultipleType)jarg2; 
  if (arg1) (arg1)->VolumeMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_VolumeMultiple_get(void * jarg1) {
  int jresult ;
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType result;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeMultipleType) ((arg1)->VolumeMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_PriceTick_set(void * jarg1, double jarg2) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PriceTick = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_PriceTick_get(void * jarg1) {
  double jresult ;
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PriceTick);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMulticastInstrumentField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMulticastInstrumentField() {
  void * jresult ;
  CThostFtdcMulticastInstrumentField *result = 0 ;
  
  result = (CThostFtdcMulticastInstrumentField *)new CThostFtdcMulticastInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMulticastInstrumentField(void * jarg1) {
  CThostFtdcMulticastInstrumentField *arg1 = (CThostFtdcMulticastInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcMulticastInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMulticastInstrumentField_TopicID_set(void * jarg1, int jarg2) {
  CThostFtdcQryMulticastInstrumentField *arg1 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcQryMulticastInstrumentField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->TopicID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryMulticastInstrumentField_TopicID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryMulticastInstrumentField *arg1 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcQryMulticastInstrumentField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->TopicID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMulticastInstrumentField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMulticastInstrumentField *arg1 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMulticastInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 31-1);
      arg1->reserve1[31-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMulticastInstrumentField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMulticastInstrumentField *arg1 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMulticastInstrumentField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryMulticastInstrumentField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryMulticastInstrumentField *arg1 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMulticastInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryMulticastInstrumentField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMulticastInstrumentField *arg1 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMulticastInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryMulticastInstrumentField() {
  void * jresult ;
  CThostFtdcQryMulticastInstrumentField *result = 0 ;
  
  result = (CThostFtdcQryMulticastInstrumentField *)new CThostFtdcQryMulticastInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryMulticastInstrumentField(void * jarg1) {
  CThostFtdcQryMulticastInstrumentField *arg1 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcQryMulticastInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAppIDAuthAssignField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcAppIDAuthAssignField *arg1 = (CThostFtdcAppIDAuthAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAppIDAuthAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAppIDAuthAssignField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAppIDAuthAssignField *arg1 = (CThostFtdcAppIDAuthAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAppIDAuthAssignField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAppIDAuthAssignField_AppID_set(void * jarg1, char * jarg2) {
  CThostFtdcAppIDAuthAssignField *arg1 = (CThostFtdcAppIDAuthAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAppIDAuthAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AppID, (const char *)arg2, 33-1);
      arg1->AppID[33-1] = 0;
    } else {
      arg1->AppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAppIDAuthAssignField_AppID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAppIDAuthAssignField *arg1 = (CThostFtdcAppIDAuthAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAppIDAuthAssignField *)jarg1; 
  result = (char *) ((arg1)->AppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAppIDAuthAssignField_DRIdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcAppIDAuthAssignField *arg1 = (CThostFtdcAppIDAuthAssignField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcAppIDAuthAssignField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcAppIDAuthAssignField_DRIdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcAppIDAuthAssignField *arg1 = (CThostFtdcAppIDAuthAssignField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcAppIDAuthAssignField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcAppIDAuthAssignField() {
  void * jresult ;
  CThostFtdcAppIDAuthAssignField *result = 0 ;
  
  result = (CThostFtdcAppIDAuthAssignField *)new CThostFtdcAppIDAuthAssignField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcAppIDAuthAssignField(void * jarg1) {
  CThostFtdcAppIDAuthAssignField *arg1 = (CThostFtdcAppIDAuthAssignField *) 0 ;
  
  arg1 = (CThostFtdcAppIDAuthAssignField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CashExchangeCode_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_CashExchangeCode_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqOpenAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqOpenAccountField() {
  void * jresult ;
  CThostFtdcReqOpenAccountField *result = 0 ;
  
  result = (CThostFtdcReqOpenAccountField *)new CThostFtdcReqOpenAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqOpenAccountField(void * jarg1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CashExchangeCode_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_CashExchangeCode_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqCancelAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqCancelAccountField() {
  void * jresult ;
  CThostFtdcReqCancelAccountField *result = 0 ;
  
  result = (CThostFtdcReqCancelAccountField *)new CThostFtdcReqCancelAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqCancelAccountField(void * jarg1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_NewBankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankAccount, (const char *)arg2, 41-1);
      arg1->NewBankAccount[41-1] = 0;
    } else {
      arg1->NewBankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_NewBankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_NewBankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankPassWord, (const char *)arg2, 41-1);
      arg1->NewBankPassWord[41-1] = 0;
    } else {
      arg1->NewBankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_NewBankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqChangeAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqChangeAccountField() {
  void * jresult ;
  CThostFtdcReqChangeAccountField *result = 0 ;
  
  result = (CThostFtdcReqChangeAccountField *)new CThostFtdcReqChangeAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqChangeAccountField(void * jarg1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqTransferField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqTransferField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqTransferField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqTransferField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeAmount_set(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TradeAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_FutureFetchAmount_set(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqTransferField_FutureFetchAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_FeePayFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_FeePayFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqTransferField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerFee_set(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_Message_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_Message_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqTransferField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TransferStatus_set(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqTransferField_TransferStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqTransferField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqTransferField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqTransferField() {
  void * jresult ;
  CThostFtdcReqTransferField *result = 0 ;
  
  result = (CThostFtdcReqTransferField *)new CThostFtdcReqTransferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqTransferField(void * jarg1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspTransferField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspTransferField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspTransferField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspTransferField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeAmount_set(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TradeAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_FutureFetchAmount_set(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspTransferField_FutureFetchAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_FeePayFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_FeePayFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspTransferField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerFee_set(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_Message_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_Message_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspTransferField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TransferStatus_set(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspTransferField_TransferStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspTransferField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspTransferField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspTransferField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspTransferField() {
  void * jresult ;
  CThostFtdcRspTransferField *result = 0 ;
  
  result = (CThostFtdcRspTransferField *)new CThostFtdcRspTransferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspTransferField(void * jarg1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_RepealTimeInterval_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealTimeIntervalType)jarg2; 
  if (arg1) (arg1)->RepealTimeInterval = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_RepealTimeInterval_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcRepealTimeIntervalType) ((arg1)->RepealTimeInterval);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_RepealedTimes_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealedTimesType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealedTimesType)jarg2; 
  if (arg1) (arg1)->RepealedTimes = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_RepealedTimes_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealedTimesType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcRepealedTimesType) ((arg1)->RepealedTimes);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankRepealFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBankRepealFlagType)jarg2; 
  if (arg1) (arg1)->BankRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankRepealFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankRepealFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBankRepealFlagType) ((arg1)->BankRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerRepealFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBrokerRepealFlagType)jarg2; 
  if (arg1) (arg1)->BrokerRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerRepealFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBrokerRepealFlagType) ((arg1)->BrokerRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_PlateRepealSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcPlateSerialType)jarg2; 
  if (arg1) (arg1)->PlateRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_PlateRepealSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPlateSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankRepealSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankRepealSerial, (const char *)arg2, 13-1);
      arg1->BankRepealSerial[13-1] = 0;
    } else {
      arg1->BankRepealSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankRepealSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankRepealSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FutureRepealSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FutureRepealSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeAmount_set(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TradeAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FutureFetchAmount_set(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FutureFetchAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FeePayFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_FeePayFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqRepealField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerFee_set(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_Message_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_Message_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TransferStatus_set(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqRepealField_TransferStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqRepealField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqRepealField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqRepealField() {
  void * jresult ;
  CThostFtdcReqRepealField *result = 0 ;
  
  result = (CThostFtdcReqRepealField *)new CThostFtdcReqRepealField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqRepealField(void * jarg1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_RepealTimeInterval_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealTimeIntervalType)jarg2; 
  if (arg1) (arg1)->RepealTimeInterval = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_RepealTimeInterval_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcRepealTimeIntervalType) ((arg1)->RepealTimeInterval);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_RepealedTimes_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealedTimesType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealedTimesType)jarg2; 
  if (arg1) (arg1)->RepealedTimes = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_RepealedTimes_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealedTimesType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcRepealedTimesType) ((arg1)->RepealedTimes);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankRepealFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBankRepealFlagType)jarg2; 
  if (arg1) (arg1)->BankRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankRepealFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankRepealFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBankRepealFlagType) ((arg1)->BankRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerRepealFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBrokerRepealFlagType)jarg2; 
  if (arg1) (arg1)->BrokerRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerRepealFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBrokerRepealFlagType) ((arg1)->BrokerRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_PlateRepealSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcPlateSerialType)jarg2; 
  if (arg1) (arg1)->PlateRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_PlateRepealSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPlateSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankRepealSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankRepealSerial, (const char *)arg2, 13-1);
      arg1->BankRepealSerial[13-1] = 0;
    } else {
      arg1->BankRepealSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankRepealSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankRepealSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FutureRepealSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FutureRepealSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeAmount_set(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TradeAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FutureFetchAmount_set(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FutureFetchAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FeePayFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_FeePayFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspRepealField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerFee_set(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_Message_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_Message_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TransferStatus_set(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspRepealField_TransferStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspRepealField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspRepealField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspRepealField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspRepealField() {
  void * jresult ;
  CThostFtdcRspRepealField *result = 0 ;
  
  result = (CThostFtdcRspRepealField *)new CThostFtdcRspRepealField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspRepealField(void * jarg1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqQueryAccountField() {
  void * jresult ;
  CThostFtdcReqQueryAccountField *result = 0 ;
  
  result = (CThostFtdcReqQueryAccountField *)new CThostFtdcReqQueryAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqQueryAccountField(void * jarg1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankUseAmount_set(void * jarg1, double jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankUseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankUseAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankUseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankFetchAmount_set(void * jarg1, double jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_BankFetchAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspQueryAccountField() {
  void * jresult ;
  CThostFtdcRspQueryAccountField *result = 0 ;
  
  result = (CThostFtdcRspQueryAccountField *)new CThostFtdcRspQueryAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspQueryAccountField(void * jarg1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcFutureSignIOField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcFutureSignIOField() {
  void * jresult ;
  CThostFtdcFutureSignIOField *result = 0 ;
  
  result = (CThostFtdcFutureSignIOField *)new CThostFtdcFutureSignIOField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcFutureSignIOField(void * jarg1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_PinKey_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PinKey, (const char *)arg2, 129-1);
      arg1->PinKey[129-1] = 0;
    } else {
      arg1->PinKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_PinKey_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->PinKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_MacKey_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacKey, (const char *)arg2, 129-1);
      arg1->MacKey[129-1] = 0;
    } else {
      arg1->MacKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignInField_MacKey_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->MacKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspFutureSignInField() {
  void * jresult ;
  CThostFtdcRspFutureSignInField *result = 0 ;
  
  result = (CThostFtdcRspFutureSignInField *)new CThostFtdcRspFutureSignInField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspFutureSignInField(void * jarg1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqFutureSignOutField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqFutureSignOutField() {
  void * jresult ;
  CThostFtdcReqFutureSignOutField *result = 0 ;
  
  result = (CThostFtdcReqFutureSignOutField *)new CThostFtdcReqFutureSignOutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqFutureSignOutField(void * jarg1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspFutureSignOutField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspFutureSignOutField() {
  void * jresult ;
  CThostFtdcRspFutureSignOutField *result = 0 ;
  
  result = (CThostFtdcRspFutureSignOutField *)new CThostFtdcRspFutureSignOutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspFutureSignOutField(void * jarg1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_Reference_set(void * jarg1, int jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->Reference = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_Reference_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->Reference);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcInstitutionTypeType)jarg2; 
  if (arg1) (arg1)->RefrenceIssureType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcInstitutionTypeType) ((arg1)->RefrenceIssureType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefrenceIssure, (const char *)arg2, 36-1);
      arg1->RefrenceIssure[36-1] = 0;
    } else {
      arg1->RefrenceIssure[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->RefrenceIssure);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_set(void * jarg1, double jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqQueryTradeResultBySerialField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqQueryTradeResultBySerialField() {
  void * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *result = 0 ;
  
  result = (CThostFtdcReqQueryTradeResultBySerialField *)new CThostFtdcReqQueryTradeResultBySerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqQueryTradeResultBySerialField(void * jarg1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_Reference_set(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->Reference = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_Reference_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->Reference);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set(void * jarg1, char jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcInstitutionTypeType)jarg2; 
  if (arg1) (arg1)->RefrenceIssureType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcInstitutionTypeType) ((arg1)->RefrenceIssureType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefrenceIssure, (const char *)arg2, 36-1);
      arg1->RefrenceIssure[36-1] = 0;
    } else {
      arg1->RefrenceIssure[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->RefrenceIssure);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OriginReturnCode, (const char *)arg2, 7-1);
      arg1->OriginReturnCode[7-1] = 0;
    } else {
      arg1->OriginReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->OriginReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OriginDescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->OriginDescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->OriginDescrInfoForReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->OriginDescrInfoForReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_set(void * jarg1, double jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspQueryTradeResultBySerialField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspQueryTradeResultBySerialField() {
  void * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *result = 0 ;
  
  result = (CThostFtdcRspQueryTradeResultBySerialField *)new CThostFtdcRspQueryTradeResultBySerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspQueryTradeResultBySerialField(void * jarg1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_FileBusinessCode_set(void * jarg1, char jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcFileBusinessCodeType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcFileBusinessCodeType)jarg2; 
  if (arg1) (arg1)->FileBusinessCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_FileBusinessCode_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcFileBusinessCodeType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcFileBusinessCodeType) ((arg1)->FileBusinessCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqDayEndFileReadyField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqDayEndFileReadyField() {
  void * jresult ;
  CThostFtdcReqDayEndFileReadyField *result = 0 ;
  
  result = (CThostFtdcReqDayEndFileReadyField *)new CThostFtdcReqDayEndFileReadyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqDayEndFileReadyField(void * jarg1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReturnResultField_ReturnCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ReturnCode, (const char *)arg2, 7-1);
      arg1->ReturnCode[7-1] = 0;
    } else {
      arg1->ReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReturnResultField_ReturnCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  result = (char *) ((arg1)->ReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReturnResultField_DescrInfoForReturnCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->DescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->DescrInfoForReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReturnResultField_DescrInfoForReturnCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  result = (char *) ((arg1)->DescrInfoForReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReturnResultField() {
  void * jresult ;
  CThostFtdcReturnResultField *result = 0 ;
  
  result = (CThostFtdcReturnResultField *)new CThostFtdcReturnResultField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReturnResultField(void * jarg1) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcVerifyFuturePasswordField() {
  void * jresult ;
  CThostFtdcVerifyFuturePasswordField *result = 0 ;
  
  result = (CThostFtdcVerifyFuturePasswordField *)new CThostFtdcVerifyFuturePasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcVerifyFuturePasswordField(void * jarg1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyCustInfoField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcVerifyCustInfoField() {
  void * jresult ;
  CThostFtdcVerifyCustInfoField *result = 0 ;
  
  result = (CThostFtdcVerifyCustInfoField *)new CThostFtdcVerifyCustInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcVerifyCustInfoField(void * jarg1) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcVerifyFuturePasswordAndCustInfoField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcVerifyFuturePasswordAndCustInfoField() {
  void * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *result = 0 ;
  
  result = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)new CThostFtdcVerifyFuturePasswordAndCustInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcVerifyFuturePasswordAndCustInfoField(void * jarg1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_DepositSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_DepositSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->DepositSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_Deposit_set(void * jarg1, double jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_Deposit_get(void * jarg1) {
  double jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_ReturnCode_set(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ReturnCode, (const char *)arg2, 7-1);
      arg1->ReturnCode[7-1] = 0;
    } else {
      arg1->ReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_ReturnCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->ReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_DescrInfoForReturnCode_set(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->DescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->DescrInfoForReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepositResultInformField_DescrInfoForReturnCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->DescrInfoForReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcDepositResultInformField() {
  void * jresult ;
  CThostFtdcDepositResultInformField *result = 0 ;
  
  result = (CThostFtdcDepositResultInformField *)new CThostFtdcDepositResultInformField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcDepositResultInformField(void * jarg1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_Message_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_Message_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqSyncKeyField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqSyncKeyField() {
  void * jresult ;
  CThostFtdcReqSyncKeyField *result = 0 ;
  
  result = (CThostFtdcReqSyncKeyField *)new CThostFtdcReqSyncKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqSyncKeyField(void * jarg1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_Message_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_Message_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspSyncKeyField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspSyncKeyField() {
  void * jresult ;
  CThostFtdcRspSyncKeyField *result = 0 ;
  
  result = (CThostFtdcRspSyncKeyField *)new CThostFtdcRspSyncKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspSyncKeyField(void * jarg1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankUseAmount_set(void * jarg1, double jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankUseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankUseAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankUseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankFetchAmount_set(void * jarg1, double jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_BankFetchAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyQueryAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcNotifyQueryAccountField() {
  void * jresult ;
  CThostFtdcNotifyQueryAccountField *result = 0 ;
  
  result = (CThostFtdcNotifyQueryAccountField *)new CThostFtdcNotifyQueryAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcNotifyQueryAccountField(void * jarg1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcPlateSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcPlateSerialType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_FutureAccType_set(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureAccTypeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcFutureAccTypeType)jarg2; 
  if (arg1) (arg1)->FutureAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_FutureAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureAccTypeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcFutureAccTypeType) ((arg1)->FutureAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_FutureSerial_set(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_FutureSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeAmount_set(void * jarg1, double jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_TradeAmount_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_CustFee_set(void * jarg1, double jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_CustFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BrokerFee_set(void * jarg1, double jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BrokerFee_get(void * jarg1) {
  double jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_AvailabilityFlag_set(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcAvailabilityFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcAvailabilityFlagType)jarg2; 
  if (arg1) (arg1)->AvailabilityFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_AvailabilityFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcAvailabilityFlagType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcAvailabilityFlagType) ((arg1)->AvailabilityFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_OperatorCode_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperatorCode, (const char *)arg2, 17-1);
      arg1->OperatorCode[17-1] = 0;
    } else {
      arg1->OperatorCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_OperatorCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->OperatorCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankNewAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankNewAccount, (const char *)arg2, 41-1);
      arg1->BankNewAccount[41-1] = 0;
    } else {
      arg1->BankNewAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_BankNewAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankNewAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTransferSerialField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTransferSerialField() {
  void * jresult ;
  CThostFtdcTransferSerialField *result = 0 ;
  
  result = (CThostFtdcTransferSerialField *)new CThostFtdcTransferSerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTransferSerialField(void * jarg1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryTransferSerialField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryTransferSerialField() {
  void * jresult ;
  CThostFtdcQryTransferSerialField *result = 0 ;
  
  result = (CThostFtdcQryTransferSerialField *)new CThostFtdcQryTransferSerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryTransferSerialField(void * jarg1) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_PinKey_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PinKey, (const char *)arg2, 129-1);
      arg1->PinKey[129-1] = 0;
    } else {
      arg1->PinKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_PinKey_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->PinKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_MacKey_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacKey, (const char *)arg2, 129-1);
      arg1->MacKey[129-1] = 0;
    } else {
      arg1->MacKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignInField_MacKey_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->MacKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcNotifyFutureSignInField() {
  void * jresult ;
  CThostFtdcNotifyFutureSignInField *result = 0 ;
  
  result = (CThostFtdcNotifyFutureSignInField *)new CThostFtdcNotifyFutureSignInField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcNotifyFutureSignInField(void * jarg1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifyFutureSignOutField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcNotifyFutureSignOutField() {
  void * jresult ;
  CThostFtdcNotifyFutureSignOutField *result = 0 ;
  
  result = (CThostFtdcNotifyFutureSignOutField *)new CThostFtdcNotifyFutureSignOutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcNotifyFutureSignOutField(void * jarg1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_Message_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_Message_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_RequestID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_RequestID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcNotifySyncKeyField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcNotifySyncKeyField() {
  void * jresult ;
  CThostFtdcNotifySyncKeyField *result = 0 ;
  
  result = (CThostFtdcNotifySyncKeyField *)new CThostFtdcNotifySyncKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcNotifySyncKeyField(void * jarg1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryAccountregisterField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryAccountregisterField() {
  void * jresult ;
  CThostFtdcQryAccountregisterField *result = 0 ;
  
  result = (CThostFtdcQryAccountregisterField *)new CThostFtdcQryAccountregisterField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryAccountregisterField(void * jarg1) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_TradeDay_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDay, (const char *)arg2, 9-1);
      arg1->TradeDay[9-1] = 0;
    } else {
      arg1->TradeDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_TradeDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->TradeDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_OpenOrDestroy_set(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcOpenOrDestroyType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcOpenOrDestroyType)jarg2; 
  if (arg1) (arg1)->OpenOrDestroy = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_OpenOrDestroy_get(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcOpenOrDestroyType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcOpenOrDestroyType) ((arg1)->OpenOrDestroy);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_RegDate_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RegDate, (const char *)arg2, 9-1);
      arg1->RegDate[9-1] = 0;
    } else {
      arg1->RegDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_RegDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->RegDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_OutDate_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OutDate, (const char *)arg2, 9-1);
      arg1->OutDate[9-1] = 0;
    } else {
      arg1->OutDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_OutDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->OutDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountregisterField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcAccountregisterField() {
  void * jresult ;
  CThostFtdcAccountregisterField *result = 0 ;
  
  result = (CThostFtdcAccountregisterField *)new CThostFtdcAccountregisterField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcAccountregisterField(void * jarg1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CashExchangeCode_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_CashExchangeCode_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcOpenAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcOpenAccountField() {
  void * jresult ;
  CThostFtdcOpenAccountField *result = 0 ;
  
  result = (CThostFtdcOpenAccountField *)new CThostFtdcOpenAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcOpenAccountField(void * jarg1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CashExchangeCode_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_CashExchangeCode_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_DeviceID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_DeviceID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankSecuAccType_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankSecuAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankSecuAcc_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankSecuAcc_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_OperNo_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_OperNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCancelAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCancelAccountField() {
  void * jresult ;
  CThostFtdcCancelAccountField *result = 0 ;
  
  result = (CThostFtdcCancelAccountField *)new CThostFtdcCancelAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCancelAccountField(void * jarg1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_NewBankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankAccount, (const char *)arg2, 41-1);
      arg1->NewBankAccount[41-1] = 0;
    } else {
      arg1->NewBankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_NewBankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_NewBankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankPassWord, (const char *)arg2, 41-1);
      arg1->NewBankPassWord[41-1] = 0;
    } else {
      arg1->NewBankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_NewBankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_BankPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_SecuPwdFlag_set(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_SecuPwdFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_LongCustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LongCustomerName, (const char *)arg2, 161-1);
      arg1->LongCustomerName[161-1] = 0;
    } else {
      arg1->LongCustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcChangeAccountField_LongCustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->LongCustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcChangeAccountField() {
  void * jresult ;
  CThostFtdcChangeAccountField *result = 0 ;
  
  result = (CThostFtdcChangeAccountField *)new CThostFtdcChangeAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcChangeAccountField(void * jarg1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_set(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerSecAgentID, (const char *)arg2, 13-1);
      arg1->BrokerSecAgentID[13-1] = 0;
    } else {
      arg1->BrokerSecAgentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->BrokerSecAgentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSecAgentACIDMapField() {
  void * jresult ;
  CThostFtdcSecAgentACIDMapField *result = 0 ;
  
  result = (CThostFtdcSecAgentACIDMapField *)new CThostFtdcSecAgentACIDMapField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSecAgentACIDMapField(void * jarg1) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentACIDMapField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySecAgentACIDMapField() {
  void * jresult ;
  CThostFtdcQrySecAgentACIDMapField *result = 0 ;
  
  result = (CThostFtdcQrySecAgentACIDMapField *)new CThostFtdcQrySecAgentACIDMapField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySecAgentACIDMapField(void * jarg1) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserRightsAssignField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserRightsAssignField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserRightsAssignField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserRightsAssignField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserRightsAssignField_DRIdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcUserRightsAssignField_DRIdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcUserRightsAssignField() {
  void * jresult ;
  CThostFtdcUserRightsAssignField *result = 0 ;
  
  result = (CThostFtdcUserRightsAssignField *)new CThostFtdcUserRightsAssignField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcUserRightsAssignField(void * jarg1) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserRightAssignField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcBrokerUserRightAssignField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserRightAssignField_DRIdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserRightAssignField_DRIdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcBrokerUserRightAssignField_Tradeable_set(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->Tradeable = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcBrokerUserRightAssignField_Tradeable_get(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->Tradeable);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcBrokerUserRightAssignField() {
  void * jresult ;
  CThostFtdcBrokerUserRightAssignField *result = 0 ;
  
  result = (CThostFtdcBrokerUserRightAssignField *)new CThostFtdcBrokerUserRightAssignField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcBrokerUserRightAssignField(void * jarg1) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDRTransferField_OrigDRIdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->OrigDRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDRTransferField_OrigDRIdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->OrigDRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDRTransferField_DestDRIdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DestDRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcDRTransferField_DestDRIdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DestDRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDRTransferField_OrigBrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrigBrokerID, (const char *)arg2, 11-1);
      arg1->OrigBrokerID[11-1] = 0;
    } else {
      arg1->OrigBrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDRTransferField_OrigBrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (char *) ((arg1)->OrigBrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDRTransferField_DestBrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DestBrokerID, (const char *)arg2, 11-1);
      arg1->DestBrokerID[11-1] = 0;
    } else {
      arg1->DestBrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDRTransferField_DestBrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (char *) ((arg1)->DestBrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcDRTransferField() {
  void * jresult ;
  CThostFtdcDRTransferField *result = 0 ;
  
  result = (CThostFtdcDRTransferField *)new CThostFtdcDRTransferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcDRTransferField(void * jarg1) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFensUserInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFensUserInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFensUserInfoField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcFensUserInfoField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcFensUserInfoField_LoginMode_set(void * jarg1, char jarg2) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  TThostFtdcLoginModeType arg2 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  arg2 = (TThostFtdcLoginModeType)jarg2; 
  if (arg1) (arg1)->LoginMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcFensUserInfoField_LoginMode_get(void * jarg1) {
  char jresult ;
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  TThostFtdcLoginModeType result;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  result = (TThostFtdcLoginModeType) ((arg1)->LoginMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcFensUserInfoField() {
  void * jresult ;
  CThostFtdcFensUserInfoField *result = 0 ;
  
  result = (CThostFtdcFensUserInfoField *)new CThostFtdcFensUserInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcFensUserInfoField(void * jarg1) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCurrTransferIdentityField_IdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcCurrTransferIdentityField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->IdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCurrTransferIdentityField_IdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcCurrTransferIdentityField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->IdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCurrTransferIdentityField() {
  void * jresult ;
  CThostFtdcCurrTransferIdentityField *result = 0 ;
  
  result = (CThostFtdcCurrTransferIdentityField *)new CThostFtdcCurrTransferIdentityField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCurrTransferIdentityField(void * jarg1) {
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  
  arg1 = (CThostFtdcCurrTransferIdentityField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcLoginForbiddenUserField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcLoginForbiddenUserField() {
  void * jresult ;
  CThostFtdcLoginForbiddenUserField *result = 0 ;
  
  result = (CThostFtdcLoginForbiddenUserField *)new CThostFtdcLoginForbiddenUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcLoginForbiddenUserField(void * jarg1) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenUserField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenUserField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenUserField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenUserField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryLoginForbiddenUserField() {
  void * jresult ;
  CThostFtdcQryLoginForbiddenUserField *result = 0 ;
  
  result = (CThostFtdcQryLoginForbiddenUserField *)new CThostFtdcQryLoginForbiddenUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryLoginForbiddenUserField(void * jarg1) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_Reserve_set(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_Reserve_get(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcTradingAccountReserveField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcTradingAccountReserveField() {
  void * jresult ;
  CThostFtdcTradingAccountReserveField *result = 0 ;
  
  result = (CThostFtdcTradingAccountReserveField *)new CThostFtdcTradingAccountReserveField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcTradingAccountReserveField(void * jarg1) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenIPField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryLoginForbiddenIPField *arg1 = (CThostFtdcQryLoginForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenIPField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLoginForbiddenIPField *arg1 = (CThostFtdcQryLoginForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenIPField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcQryLoginForbiddenIPField *arg1 = (CThostFtdcQryLoginForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryLoginForbiddenIPField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLoginForbiddenIPField *arg1 = (CThostFtdcQryLoginForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryLoginForbiddenIPField() {
  void * jresult ;
  CThostFtdcQryLoginForbiddenIPField *result = 0 ;
  
  result = (CThostFtdcQryLoginForbiddenIPField *)new CThostFtdcQryLoginForbiddenIPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryLoginForbiddenIPField(void * jarg1) {
  CThostFtdcQryLoginForbiddenIPField *arg1 = (CThostFtdcQryLoginForbiddenIPField *) 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenIPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryIPListField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryIPListField *arg1 = (CThostFtdcQryIPListField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryIPListField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryIPListField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryIPListField *arg1 = (CThostFtdcQryIPListField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryIPListField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryIPListField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcQryIPListField *arg1 = (CThostFtdcQryIPListField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryIPListField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryIPListField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryIPListField *arg1 = (CThostFtdcQryIPListField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryIPListField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryIPListField() {
  void * jresult ;
  CThostFtdcQryIPListField *result = 0 ;
  
  result = (CThostFtdcQryIPListField *)new CThostFtdcQryIPListField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryIPListField(void * jarg1) {
  CThostFtdcQryIPListField *arg1 = (CThostFtdcQryIPListField *) 0 ;
  
  arg1 = (CThostFtdcQryIPListField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryUserRightsAssignField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryUserRightsAssignField *arg1 = (CThostFtdcQryUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryUserRightsAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryUserRightsAssignField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryUserRightsAssignField *arg1 = (CThostFtdcQryUserRightsAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryUserRightsAssignField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryUserRightsAssignField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryUserRightsAssignField *arg1 = (CThostFtdcQryUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryUserRightsAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryUserRightsAssignField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryUserRightsAssignField *arg1 = (CThostFtdcQryUserRightsAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryUserRightsAssignField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryUserRightsAssignField() {
  void * jresult ;
  CThostFtdcQryUserRightsAssignField *result = 0 ;
  
  result = (CThostFtdcQryUserRightsAssignField *)new CThostFtdcQryUserRightsAssignField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryUserRightsAssignField(void * jarg1) {
  CThostFtdcQryUserRightsAssignField *arg1 = (CThostFtdcQryUserRightsAssignField *) 0 ;
  
  arg1 = (CThostFtdcQryUserRightsAssignField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 161-1);
      arg1->CustomerName[161-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankReserveOpenSeq, (const char *)arg2, 13-1);
      arg1->BankReserveOpenSeq[13-1] = 0;
    } else {
      arg1->BankReserveOpenSeq[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BankReserveOpenSeq_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BankReserveOpenSeq);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BookDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BookDate, (const char *)arg2, 9-1);
      arg1->BookDate[9-1] = 0;
    } else {
      arg1->BookDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BookDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BookDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BookPsw_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BookPsw, (const char *)arg2, 41-1);
      arg1->BookPsw[41-1] = 0;
    } else {
      arg1->BookPsw[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_BookPsw_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->BookPsw);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountConfirmField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReserveOpenAccountConfirmField() {
  void * jresult ;
  CThostFtdcReserveOpenAccountConfirmField *result = 0 ;
  
  result = (CThostFtdcReserveOpenAccountConfirmField *)new CThostFtdcReserveOpenAccountConfirmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReserveOpenAccountConfirmField(void * jarg1) {
  CThostFtdcReserveOpenAccountConfirmField *arg1 = (CThostFtdcReserveOpenAccountConfirmField *) 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountConfirmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradeCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradeCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BrokerBranchID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BrokerBranchID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradeDate_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradeDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradeTime_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradeTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankSerial_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankSerial_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_PlateSerial_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_PlateSerial_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_LastFragment_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_LastFragment_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_SessionID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_SessionID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CustomerName_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 161-1);
      arg1->CustomerName[161-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CustomerName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_IdCardType_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_IdCardType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_IdentifiedCardNo_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_IdentifiedCardNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Gender_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Gender_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CountryCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CountryCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CustType_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CustType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Address_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Address_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ZipCode_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ZipCode_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Telephone_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Telephone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_MobilePhone_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_MobilePhone_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Fax_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Fax_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_EMail_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_EMail_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_MoneyAccountStatus_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_MoneyAccountStatus_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankPassWord_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankPassWord_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_InstallID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_InstallID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_VerifyCertNoFlag_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Digest_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_Digest_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankAccType_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BankAccType_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BrokerIDByBank_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_BrokerIDByBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_TID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_set(void * jarg1, char jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcReserveOpenAccStasType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcReserveOpenAccStasType)jarg2; 
  if (arg1) (arg1)->ReserveOpenAccStas = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ReserveOpenAccStas_get(void * jarg1) {
  char jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcReserveOpenAccStasType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcReserveOpenAccStasType) ((arg1)->ReserveOpenAccStas);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ErrorID_set(void * jarg1, int jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ErrorID_get(void * jarg1) {
  int jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ErrorMsg_set(void * jarg1, char * jarg2) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReserveOpenAccountField_ErrorMsg_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReserveOpenAccountField() {
  void * jresult ;
  CThostFtdcReserveOpenAccountField *result = 0 ;
  
  result = (CThostFtdcReserveOpenAccountField *)new CThostFtdcReserveOpenAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReserveOpenAccountField(void * jarg1) {
  CThostFtdcReserveOpenAccountField *arg1 = (CThostFtdcReserveOpenAccountField *) 0 ;
  
  arg1 = (CThostFtdcReserveOpenAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_AccountID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_AccountID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_BankID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_BankID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_BankAccount_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_BankAccount_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OpenName_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenName, (const char *)arg2, 101-1);
      arg1->OpenName[101-1] = 0;
    } else {
      arg1->OpenName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OpenName_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->OpenName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OpenBank_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenBank, (const char *)arg2, 101-1);
      arg1->OpenBank[101-1] = 0;
    } else {
      arg1->OpenBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OpenBank_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->OpenBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_IsActive_set(void * jarg1, int jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_IsActive_get(void * jarg1) {
  int jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_AccountSourceType_set(void * jarg1, char jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  TThostFtdcAccountSourceTypeType arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (TThostFtdcAccountSourceTypeType)jarg2; 
  if (arg1) (arg1)->AccountSourceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_AccountSourceType_get(void * jarg1) {
  char jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  TThostFtdcAccountSourceTypeType result;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (TThostFtdcAccountSourceTypeType) ((arg1)->AccountSourceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OpenDate_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OpenDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_CancelDate_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelDate, (const char *)arg2, 9-1);
      arg1->CancelDate[9-1] = 0;
    } else {
      arg1->CancelDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_CancelDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->CancelDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OperatorID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperatorID, (const char *)arg2, 65-1);
      arg1->OperatorID[65-1] = 0;
    } else {
      arg1->OperatorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OperatorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->OperatorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OperateDate_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperateDate, (const char *)arg2, 9-1);
      arg1->OperateDate[9-1] = 0;
    } else {
      arg1->OperateDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OperateDate_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->OperateDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OperateTime_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperateTime, (const char *)arg2, 9-1);
      arg1->OperateTime[9-1] = 0;
    } else {
      arg1->OperateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_OperateTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->OperateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_CurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAccountPropertyField_CurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcAccountPropertyField() {
  void * jresult ;
  CThostFtdcAccountPropertyField *result = 0 ;
  
  result = (CThostFtdcAccountPropertyField *)new CThostFtdcAccountPropertyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcAccountPropertyField(void * jarg1) {
  CThostFtdcAccountPropertyField *arg1 = (CThostFtdcAccountPropertyField *) 0 ;
  
  arg1 = (CThostFtdcAccountPropertyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCurrDRIdentityField_DRIdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcQryCurrDRIdentityField *arg1 = (CThostFtdcQryCurrDRIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcQryCurrDRIdentityField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQryCurrDRIdentityField_DRIdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcQryCurrDRIdentityField *arg1 = (CThostFtdcQryCurrDRIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcQryCurrDRIdentityField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCurrDRIdentityField() {
  void * jresult ;
  CThostFtdcQryCurrDRIdentityField *result = 0 ;
  
  result = (CThostFtdcQryCurrDRIdentityField *)new CThostFtdcQryCurrDRIdentityField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCurrDRIdentityField(void * jarg1) {
  CThostFtdcQryCurrDRIdentityField *arg1 = (CThostFtdcQryCurrDRIdentityField *) 0 ;
  
  arg1 = (CThostFtdcQryCurrDRIdentityField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCurrDRIdentityField_DRIdentityID_set(void * jarg1, int jarg2) {
  CThostFtdcCurrDRIdentityField *arg1 = (CThostFtdcCurrDRIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcCurrDRIdentityField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcCurrDRIdentityField_DRIdentityID_get(void * jarg1) {
  int jresult ;
  CThostFtdcCurrDRIdentityField *arg1 = (CThostFtdcCurrDRIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcCurrDRIdentityField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCurrDRIdentityField() {
  void * jresult ;
  CThostFtdcCurrDRIdentityField *result = 0 ;
  
  result = (CThostFtdcCurrDRIdentityField *)new CThostFtdcCurrDRIdentityField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCurrDRIdentityField(void * jarg1) {
  CThostFtdcCurrDRIdentityField *arg1 = (CThostFtdcCurrDRIdentityField *) 0 ;
  
  arg1 = (CThostFtdcCurrDRIdentityField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentCheckModeField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentCheckModeField *arg1 = (CThostFtdcQrySecAgentCheckModeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentCheckModeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentCheckModeField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentCheckModeField *arg1 = (CThostFtdcQrySecAgentCheckModeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentCheckModeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentCheckModeField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentCheckModeField *arg1 = (CThostFtdcQrySecAgentCheckModeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentCheckModeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentCheckModeField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentCheckModeField *arg1 = (CThostFtdcQrySecAgentCheckModeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentCheckModeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySecAgentCheckModeField() {
  void * jresult ;
  CThostFtdcQrySecAgentCheckModeField *result = 0 ;
  
  result = (CThostFtdcQrySecAgentCheckModeField *)new CThostFtdcQrySecAgentCheckModeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySecAgentCheckModeField(void * jarg1) {
  CThostFtdcQrySecAgentCheckModeField *arg1 = (CThostFtdcQrySecAgentCheckModeField *) 0 ;
  
  arg1 = (CThostFtdcQrySecAgentCheckModeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentTradeInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentTradeInfoField *arg1 = (CThostFtdcQrySecAgentTradeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentTradeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentTradeInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentTradeInfoField *arg1 = (CThostFtdcQrySecAgentTradeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentTradeInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQrySecAgentTradeInfoField_BrokerSecAgentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentTradeInfoField *arg1 = (CThostFtdcQrySecAgentTradeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentTradeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerSecAgentID, (const char *)arg2, 13-1);
      arg1->BrokerSecAgentID[13-1] = 0;
    } else {
      arg1->BrokerSecAgentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQrySecAgentTradeInfoField_BrokerSecAgentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentTradeInfoField *arg1 = (CThostFtdcQrySecAgentTradeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentTradeInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerSecAgentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQrySecAgentTradeInfoField() {
  void * jresult ;
  CThostFtdcQrySecAgentTradeInfoField *result = 0 ;
  
  result = (CThostFtdcQrySecAgentTradeInfoField *)new CThostFtdcQrySecAgentTradeInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQrySecAgentTradeInfoField(void * jarg1) {
  CThostFtdcQrySecAgentTradeInfoField *arg1 = (CThostFtdcQrySecAgentTradeInfoField *) 0 ;
  
  arg1 = (CThostFtdcQrySecAgentTradeInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserAuthMethodField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserAuthMethodField *arg1 = (CThostFtdcReqUserAuthMethodField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserAuthMethodField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserAuthMethodField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserAuthMethodField *arg1 = (CThostFtdcReqUserAuthMethodField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserAuthMethodField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserAuthMethodField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserAuthMethodField *arg1 = (CThostFtdcReqUserAuthMethodField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserAuthMethodField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserAuthMethodField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserAuthMethodField *arg1 = (CThostFtdcReqUserAuthMethodField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserAuthMethodField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserAuthMethodField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserAuthMethodField *arg1 = (CThostFtdcReqUserAuthMethodField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserAuthMethodField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserAuthMethodField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserAuthMethodField *arg1 = (CThostFtdcReqUserAuthMethodField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserAuthMethodField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqUserAuthMethodField() {
  void * jresult ;
  CThostFtdcReqUserAuthMethodField *result = 0 ;
  
  result = (CThostFtdcReqUserAuthMethodField *)new CThostFtdcReqUserAuthMethodField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqUserAuthMethodField(void * jarg1) {
  CThostFtdcReqUserAuthMethodField *arg1 = (CThostFtdcReqUserAuthMethodField *) 0 ;
  
  arg1 = (CThostFtdcReqUserAuthMethodField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspUserAuthMethodField_UsableAuthMethod_set(void * jarg1, int jarg2) {
  CThostFtdcRspUserAuthMethodField *arg1 = (CThostFtdcRspUserAuthMethodField *) 0 ;
  TThostFtdcCurrentAuthMethodType arg2 ;
  
  arg1 = (CThostFtdcRspUserAuthMethodField *)jarg1; 
  arg2 = (TThostFtdcCurrentAuthMethodType)jarg2; 
  if (arg1) (arg1)->UsableAuthMethod = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspUserAuthMethodField_UsableAuthMethod_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspUserAuthMethodField *arg1 = (CThostFtdcRspUserAuthMethodField *) 0 ;
  TThostFtdcCurrentAuthMethodType result;
  
  arg1 = (CThostFtdcRspUserAuthMethodField *)jarg1; 
  result = (TThostFtdcCurrentAuthMethodType) ((arg1)->UsableAuthMethod);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspUserAuthMethodField() {
  void * jresult ;
  CThostFtdcRspUserAuthMethodField *result = 0 ;
  
  result = (CThostFtdcRspUserAuthMethodField *)new CThostFtdcRspUserAuthMethodField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspUserAuthMethodField(void * jarg1) {
  CThostFtdcRspUserAuthMethodField *arg1 = (CThostFtdcRspUserAuthMethodField *) 0 ;
  
  arg1 = (CThostFtdcRspUserAuthMethodField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqGenUserCaptchaField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqGenUserCaptchaField *arg1 = (CThostFtdcReqGenUserCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqGenUserCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqGenUserCaptchaField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqGenUserCaptchaField *arg1 = (CThostFtdcReqGenUserCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqGenUserCaptchaField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqGenUserCaptchaField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqGenUserCaptchaField *arg1 = (CThostFtdcReqGenUserCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqGenUserCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqGenUserCaptchaField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqGenUserCaptchaField *arg1 = (CThostFtdcReqGenUserCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqGenUserCaptchaField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqGenUserCaptchaField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqGenUserCaptchaField *arg1 = (CThostFtdcReqGenUserCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqGenUserCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqGenUserCaptchaField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqGenUserCaptchaField *arg1 = (CThostFtdcReqGenUserCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqGenUserCaptchaField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqGenUserCaptchaField() {
  void * jresult ;
  CThostFtdcReqGenUserCaptchaField *result = 0 ;
  
  result = (CThostFtdcReqGenUserCaptchaField *)new CThostFtdcReqGenUserCaptchaField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqGenUserCaptchaField(void * jarg1) {
  CThostFtdcReqGenUserCaptchaField *arg1 = (CThostFtdcReqGenUserCaptchaField *) 0 ;
  
  arg1 = (CThostFtdcReqGenUserCaptchaField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_CaptchaInfoLen_set(void * jarg1, int jarg2) {
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  TThostFtdcCaptchaInfoLenType arg2 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  arg2 = (TThostFtdcCaptchaInfoLenType)jarg2; 
  if (arg1) (arg1)->CaptchaInfoLen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_CaptchaInfoLen_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  TThostFtdcCaptchaInfoLenType result;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  result = (TThostFtdcCaptchaInfoLenType) ((arg1)->CaptchaInfoLen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_CaptchaInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CaptchaInfo, (const char *)arg2, 2561-1);
      arg1->CaptchaInfo[2561-1] = 0;
    } else {
      arg1->CaptchaInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspGenUserCaptchaField_CaptchaInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  result = (char *) ((arg1)->CaptchaInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspGenUserCaptchaField() {
  void * jresult ;
  CThostFtdcRspGenUserCaptchaField *result = 0 ;
  
  result = (CThostFtdcRspGenUserCaptchaField *)new CThostFtdcRspGenUserCaptchaField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspGenUserCaptchaField(void * jarg1) {
  CThostFtdcRspGenUserCaptchaField *arg1 = (CThostFtdcRspGenUserCaptchaField *) 0 ;
  
  arg1 = (CThostFtdcRspGenUserCaptchaField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqGenUserTextField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqGenUserTextField *arg1 = (CThostFtdcReqGenUserTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqGenUserTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqGenUserTextField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqGenUserTextField *arg1 = (CThostFtdcReqGenUserTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqGenUserTextField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqGenUserTextField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqGenUserTextField *arg1 = (CThostFtdcReqGenUserTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqGenUserTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqGenUserTextField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqGenUserTextField *arg1 = (CThostFtdcReqGenUserTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqGenUserTextField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqGenUserTextField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqGenUserTextField *arg1 = (CThostFtdcReqGenUserTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqGenUserTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqGenUserTextField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqGenUserTextField *arg1 = (CThostFtdcReqGenUserTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqGenUserTextField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqGenUserTextField() {
  void * jresult ;
  CThostFtdcReqGenUserTextField *result = 0 ;
  
  result = (CThostFtdcReqGenUserTextField *)new CThostFtdcReqGenUserTextField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqGenUserTextField(void * jarg1) {
  CThostFtdcReqGenUserTextField *arg1 = (CThostFtdcReqGenUserTextField *) 0 ;
  
  arg1 = (CThostFtdcReqGenUserTextField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspGenUserTextField_UserTextSeq_set(void * jarg1, int jarg2) {
  CThostFtdcRspGenUserTextField *arg1 = (CThostFtdcRspGenUserTextField *) 0 ;
  TThostFtdcUserTextSeqType arg2 ;
  
  arg1 = (CThostFtdcRspGenUserTextField *)jarg1; 
  arg2 = (TThostFtdcUserTextSeqType)jarg2; 
  if (arg1) (arg1)->UserTextSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspGenUserTextField_UserTextSeq_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspGenUserTextField *arg1 = (CThostFtdcRspGenUserTextField *) 0 ;
  TThostFtdcUserTextSeqType result;
  
  arg1 = (CThostFtdcRspGenUserTextField *)jarg1; 
  result = (TThostFtdcUserTextSeqType) ((arg1)->UserTextSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspGenUserTextField() {
  void * jresult ;
  CThostFtdcRspGenUserTextField *result = 0 ;
  
  result = (CThostFtdcRspGenUserTextField *)new CThostFtdcRspGenUserTextField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspGenUserTextField(void * jarg1) {
  CThostFtdcRspGenUserTextField *arg1 = (CThostFtdcRspGenUserTextField *) 0 ;
  
  arg1 = (CThostFtdcRspGenUserTextField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_InterfaceProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_InterfaceProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_ProtocolInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_ProtocolInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_LoginRemark_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_LoginRemark_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->LoginRemark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_Captcha_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Captcha, (const char *)arg2, 41-1);
      arg1->Captcha[41-1] = 0;
    } else {
      arg1->Captcha[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_Captcha_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->Captcha);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_ClientIPPort_set(void * jarg1, int jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  TThostFtdcIPPortType arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (TThostFtdcIPPortType)jarg2; 
  if (arg1) (arg1)->ClientIPPort = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_ClientIPPort_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  TThostFtdcIPPortType result;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (TThostFtdcIPPortType) ((arg1)->ClientIPPort);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_ClientIPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIPAddress, (const char *)arg2, 33-1);
      arg1->ClientIPAddress[33-1] = 0;
    } else {
      arg1->ClientIPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithCaptchaField_ClientIPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  result = (char *) ((arg1)->ClientIPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqUserLoginWithCaptchaField() {
  void * jresult ;
  CThostFtdcReqUserLoginWithCaptchaField *result = 0 ;
  
  result = (CThostFtdcReqUserLoginWithCaptchaField *)new CThostFtdcReqUserLoginWithCaptchaField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqUserLoginWithCaptchaField(void * jarg1) {
  CThostFtdcReqUserLoginWithCaptchaField *arg1 = (CThostFtdcReqUserLoginWithCaptchaField *) 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithCaptchaField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_InterfaceProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_InterfaceProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_ProtocolInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_ProtocolInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_LoginRemark_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_LoginRemark_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->LoginRemark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_Text_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Text, (const char *)arg2, 41-1);
      arg1->Text[41-1] = 0;
    } else {
      arg1->Text[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_Text_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->Text);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_ClientIPPort_set(void * jarg1, int jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  TThostFtdcIPPortType arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (TThostFtdcIPPortType)jarg2; 
  if (arg1) (arg1)->ClientIPPort = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_ClientIPPort_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  TThostFtdcIPPortType result;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (TThostFtdcIPPortType) ((arg1)->ClientIPPort);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_ClientIPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIPAddress, (const char *)arg2, 33-1);
      arg1->ClientIPAddress[33-1] = 0;
    } else {
      arg1->ClientIPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithTextField_ClientIPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  result = (char *) ((arg1)->ClientIPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqUserLoginWithTextField() {
  void * jresult ;
  CThostFtdcReqUserLoginWithTextField *result = 0 ;
  
  result = (CThostFtdcReqUserLoginWithTextField *)new CThostFtdcReqUserLoginWithTextField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqUserLoginWithTextField(void * jarg1) {
  CThostFtdcReqUserLoginWithTextField *arg1 = (CThostFtdcReqUserLoginWithTextField *) 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithTextField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_TradingDay_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_TradingDay_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_Password_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_Password_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_UserProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_UserProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_InterfaceProductInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_InterfaceProductInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_ProtocolInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_ProtocolInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_MacAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_MacAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_LoginRemark_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginRemark, (const char *)arg2, 36-1);
      arg1->LoginRemark[36-1] = 0;
    } else {
      arg1->LoginRemark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_LoginRemark_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->LoginRemark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_OTPPassword_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OTPPassword, (const char *)arg2, 41-1);
      arg1->OTPPassword[41-1] = 0;
    } else {
      arg1->OTPPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_OTPPassword_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->OTPPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_ClientIPPort_set(void * jarg1, int jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  TThostFtdcIPPortType arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (TThostFtdcIPPortType)jarg2; 
  if (arg1) (arg1)->ClientIPPort = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_ClientIPPort_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  TThostFtdcIPPortType result;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (TThostFtdcIPPortType) ((arg1)->ClientIPPort);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_ClientIPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIPAddress, (const char *)arg2, 33-1);
      arg1->ClientIPAddress[33-1] = 0;
    } else {
      arg1->ClientIPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqUserLoginWithOTPField_ClientIPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  result = (char *) ((arg1)->ClientIPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqUserLoginWithOTPField() {
  void * jresult ;
  CThostFtdcReqUserLoginWithOTPField *result = 0 ;
  
  result = (CThostFtdcReqUserLoginWithOTPField *)new CThostFtdcReqUserLoginWithOTPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqUserLoginWithOTPField(void * jarg1) {
  CThostFtdcReqUserLoginWithOTPField *arg1 = (CThostFtdcReqUserLoginWithOTPField *) 0 ;
  
  arg1 = (CThostFtdcReqUserLoginWithOTPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqApiHandshakeField_CryptoKeyVersion_set(void * jarg1, char * jarg2) {
  CThostFtdcReqApiHandshakeField *arg1 = (CThostFtdcReqApiHandshakeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqApiHandshakeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CryptoKeyVersion, (const char *)arg2, 31-1);
      arg1->CryptoKeyVersion[31-1] = 0;
    } else {
      arg1->CryptoKeyVersion[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqApiHandshakeField_CryptoKeyVersion_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqApiHandshakeField *arg1 = (CThostFtdcReqApiHandshakeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqApiHandshakeField *)jarg1; 
  result = (char *) ((arg1)->CryptoKeyVersion);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqApiHandshakeField() {
  void * jresult ;
  CThostFtdcReqApiHandshakeField *result = 0 ;
  
  result = (CThostFtdcReqApiHandshakeField *)new CThostFtdcReqApiHandshakeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqApiHandshakeField(void * jarg1) {
  CThostFtdcReqApiHandshakeField *arg1 = (CThostFtdcReqApiHandshakeField *) 0 ;
  
  arg1 = (CThostFtdcReqApiHandshakeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspApiHandshakeField_FrontHandshakeDataLen_set(void * jarg1, int jarg2) {
  CThostFtdcRspApiHandshakeField *arg1 = (CThostFtdcRspApiHandshakeField *) 0 ;
  TThostFtdcHandshakeDataLenType arg2 ;
  
  arg1 = (CThostFtdcRspApiHandshakeField *)jarg1; 
  arg2 = (TThostFtdcHandshakeDataLenType)jarg2; 
  if (arg1) (arg1)->FrontHandshakeDataLen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspApiHandshakeField_FrontHandshakeDataLen_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspApiHandshakeField *arg1 = (CThostFtdcRspApiHandshakeField *) 0 ;
  TThostFtdcHandshakeDataLenType result;
  
  arg1 = (CThostFtdcRspApiHandshakeField *)jarg1; 
  result = (TThostFtdcHandshakeDataLenType) ((arg1)->FrontHandshakeDataLen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspApiHandshakeField_FrontHandshakeData_set(void * jarg1, char * jarg2) {
  CThostFtdcRspApiHandshakeField *arg1 = (CThostFtdcRspApiHandshakeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspApiHandshakeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FrontHandshakeData, (const char *)arg2, 301-1);
      arg1->FrontHandshakeData[301-1] = 0;
    } else {
      arg1->FrontHandshakeData[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcRspApiHandshakeField_FrontHandshakeData_get(void * jarg1) {
  char * jresult ;
  CThostFtdcRspApiHandshakeField *arg1 = (CThostFtdcRspApiHandshakeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspApiHandshakeField *)jarg1; 
  result = (char *) ((arg1)->FrontHandshakeData);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcRspApiHandshakeField_IsApiAuthEnabled_set(void * jarg1, int jarg2) {
  CThostFtdcRspApiHandshakeField *arg1 = (CThostFtdcRspApiHandshakeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcRspApiHandshakeField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsApiAuthEnabled = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcRspApiHandshakeField_IsApiAuthEnabled_get(void * jarg1) {
  int jresult ;
  CThostFtdcRspApiHandshakeField *arg1 = (CThostFtdcRspApiHandshakeField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcRspApiHandshakeField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsApiAuthEnabled);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcRspApiHandshakeField() {
  void * jresult ;
  CThostFtdcRspApiHandshakeField *result = 0 ;
  
  result = (CThostFtdcRspApiHandshakeField *)new CThostFtdcRspApiHandshakeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcRspApiHandshakeField(void * jarg1) {
  CThostFtdcRspApiHandshakeField *arg1 = (CThostFtdcRspApiHandshakeField *) 0 ;
  
  arg1 = (CThostFtdcRspApiHandshakeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqVerifyApiKeyField_ApiHandshakeDataLen_set(void * jarg1, int jarg2) {
  CThostFtdcReqVerifyApiKeyField *arg1 = (CThostFtdcReqVerifyApiKeyField *) 0 ;
  TThostFtdcHandshakeDataLenType arg2 ;
  
  arg1 = (CThostFtdcReqVerifyApiKeyField *)jarg1; 
  arg2 = (TThostFtdcHandshakeDataLenType)jarg2; 
  if (arg1) (arg1)->ApiHandshakeDataLen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcReqVerifyApiKeyField_ApiHandshakeDataLen_get(void * jarg1) {
  int jresult ;
  CThostFtdcReqVerifyApiKeyField *arg1 = (CThostFtdcReqVerifyApiKeyField *) 0 ;
  TThostFtdcHandshakeDataLenType result;
  
  arg1 = (CThostFtdcReqVerifyApiKeyField *)jarg1; 
  result = (TThostFtdcHandshakeDataLenType) ((arg1)->ApiHandshakeDataLen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcReqVerifyApiKeyField_ApiHandshakeData_set(void * jarg1, char * jarg2) {
  CThostFtdcReqVerifyApiKeyField *arg1 = (CThostFtdcReqVerifyApiKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqVerifyApiKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ApiHandshakeData, (const char *)arg2, 301-1);
      arg1->ApiHandshakeData[301-1] = 0;
    } else {
      arg1->ApiHandshakeData[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcReqVerifyApiKeyField_ApiHandshakeData_get(void * jarg1) {
  char * jresult ;
  CThostFtdcReqVerifyApiKeyField *arg1 = (CThostFtdcReqVerifyApiKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqVerifyApiKeyField *)jarg1; 
  result = (char *) ((arg1)->ApiHandshakeData);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcReqVerifyApiKeyField() {
  void * jresult ;
  CThostFtdcReqVerifyApiKeyField *result = 0 ;
  
  result = (CThostFtdcReqVerifyApiKeyField *)new CThostFtdcReqVerifyApiKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcReqVerifyApiKeyField(void * jarg1) {
  CThostFtdcReqVerifyApiKeyField *arg1 = (CThostFtdcReqVerifyApiKeyField *) 0 ;
  
  arg1 = (CThostFtdcReqVerifyApiKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_InvestorRange_set(void * jarg1, char jarg2) {
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  TThostFtdcDepartmentRangeType arg2 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  arg2 = (TThostFtdcDepartmentRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_InvestorRange_get(void * jarg1) {
  char jresult ;
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  TThostFtdcDepartmentRangeType result;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  result = (TThostFtdcDepartmentRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcDepartmentUserField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcDepartmentUserField() {
  void * jresult ;
  CThostFtdcDepartmentUserField *result = 0 ;
  
  result = (CThostFtdcDepartmentUserField *)new CThostFtdcDepartmentUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcDepartmentUserField(void * jarg1) {
  CThostFtdcDepartmentUserField *arg1 = (CThostFtdcDepartmentUserField *) 0 ;
  
  arg1 = (CThostFtdcDepartmentUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQueryFreqField_QueryFreq_set(void * jarg1, int jarg2) {
  CThostFtdcQueryFreqField *arg1 = (CThostFtdcQueryFreqField *) 0 ;
  TThostFtdcQueryFreqType arg2 ;
  
  arg1 = (CThostFtdcQueryFreqField *)jarg1; 
  arg2 = (TThostFtdcQueryFreqType)jarg2; 
  if (arg1) (arg1)->QueryFreq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcQueryFreqField_QueryFreq_get(void * jarg1) {
  int jresult ;
  CThostFtdcQueryFreqField *arg1 = (CThostFtdcQueryFreqField *) 0 ;
  TThostFtdcQueryFreqType result;
  
  arg1 = (CThostFtdcQueryFreqField *)jarg1; 
  result = (TThostFtdcQueryFreqType) ((arg1)->QueryFreq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQueryFreqField() {
  void * jresult ;
  CThostFtdcQueryFreqField *result = 0 ;
  
  result = (CThostFtdcQueryFreqField *)new CThostFtdcQueryFreqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQueryFreqField(void * jarg1) {
  CThostFtdcQueryFreqField *arg1 = (CThostFtdcQueryFreqField *) 0 ;
  
  arg1 = (CThostFtdcQueryFreqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthForbiddenIPField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthForbiddenIPField *arg1 = (CThostFtdcAuthForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthForbiddenIPField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthForbiddenIPField *arg1 = (CThostFtdcAuthForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthForbiddenIPField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthForbiddenIPField *arg1 = (CThostFtdcAuthForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthForbiddenIPField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthForbiddenIPField *arg1 = (CThostFtdcAuthForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcAuthForbiddenIPField() {
  void * jresult ;
  CThostFtdcAuthForbiddenIPField *result = 0 ;
  
  result = (CThostFtdcAuthForbiddenIPField *)new CThostFtdcAuthForbiddenIPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcAuthForbiddenIPField(void * jarg1) {
  CThostFtdcAuthForbiddenIPField *arg1 = (CThostFtdcAuthForbiddenIPField *) 0 ;
  
  arg1 = (CThostFtdcAuthForbiddenIPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryAuthForbiddenIPField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcQryAuthForbiddenIPField *arg1 = (CThostFtdcQryAuthForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAuthForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryAuthForbiddenIPField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAuthForbiddenIPField *arg1 = (CThostFtdcQryAuthForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAuthForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryAuthForbiddenIPField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcQryAuthForbiddenIPField *arg1 = (CThostFtdcQryAuthForbiddenIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAuthForbiddenIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryAuthForbiddenIPField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAuthForbiddenIPField *arg1 = (CThostFtdcQryAuthForbiddenIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAuthForbiddenIPField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryAuthForbiddenIPField() {
  void * jresult ;
  CThostFtdcQryAuthForbiddenIPField *result = 0 ;
  
  result = (CThostFtdcQryAuthForbiddenIPField *)new CThostFtdcQryAuthForbiddenIPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryAuthForbiddenIPField(void * jarg1) {
  CThostFtdcQryAuthForbiddenIPField *arg1 = (CThostFtdcQryAuthForbiddenIPField *) 0 ;
  
  arg1 = (CThostFtdcQryAuthForbiddenIPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_DelaySwapSeqNo_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DelaySwapSeqNo, (const char *)arg2, 15-1);
      arg1->DelaySwapSeqNo[15-1] = 0;
    } else {
      arg1->DelaySwapSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_DelaySwapSeqNo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  result = (char *) ((arg1)->DelaySwapSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_InvestorID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_InvestorID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_FromCurrencyID_set(void * jarg1, char * jarg2) {
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_FromCurrencyID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_FromRemainSwap_set(void * jarg1, double jarg2) {
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FromRemainSwap = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_FromRemainSwap_get(void * jarg1) {
  double jresult ;
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FromRemainSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_IsManualSwap_set(void * jarg1, int jarg2) {
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsManualSwap = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcSyncDelaySwapFrozenField_IsManualSwap_get(void * jarg1) {
  int jresult ;
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsManualSwap);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcSyncDelaySwapFrozenField() {
  void * jresult ;
  CThostFtdcSyncDelaySwapFrozenField *result = 0 ;
  
  result = (CThostFtdcSyncDelaySwapFrozenField *)new CThostFtdcSyncDelaySwapFrozenField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcSyncDelaySwapFrozenField(void * jarg1) {
  CThostFtdcSyncDelaySwapFrozenField *arg1 = (CThostFtdcSyncDelaySwapFrozenField *) 0 ;
  
  arg1 = (CThostFtdcSyncDelaySwapFrozenField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientSystemInfoLen_set(void * jarg1, int jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  TThostFtdcSystemInfoLenType arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (TThostFtdcSystemInfoLenType)jarg2; 
  if (arg1) (arg1)->ClientSystemInfoLen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientSystemInfoLen_get(void * jarg1) {
  int jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  TThostFtdcSystemInfoLenType result;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (TThostFtdcSystemInfoLenType) ((arg1)->ClientSystemInfoLen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientSystemInfo_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientSystemInfo, (const char *)arg2, 273-1);
      arg1->ClientSystemInfo[273-1] = 0;
    } else {
      arg1->ClientSystemInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientSystemInfo_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (char *) ((arg1)->ClientSystemInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_reserve1_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->reserve1, (const char *)arg2, 16-1);
      arg1->reserve1[16-1] = 0;
    } else {
      arg1->reserve1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_reserve1_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (char *) ((arg1)->reserve1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientIPPort_set(void * jarg1, int jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  TThostFtdcIPPortType arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (TThostFtdcIPPortType)jarg2; 
  if (arg1) (arg1)->ClientIPPort = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientIPPort_get(void * jarg1) {
  int jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  TThostFtdcIPPortType result;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (TThostFtdcIPPortType) ((arg1)->ClientIPPort);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientLoginTime_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientLoginTime, (const char *)arg2, 9-1);
      arg1->ClientLoginTime[9-1] = 0;
    } else {
      arg1->ClientLoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientLoginTime_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (char *) ((arg1)->ClientLoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientAppID_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientAppID, (const char *)arg2, 33-1);
      arg1->ClientAppID[33-1] = 0;
    } else {
      arg1->ClientAppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientAppID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (char *) ((arg1)->ClientAppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientPublicIP_set(void * jarg1, char * jarg2) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientPublicIP, (const char *)arg2, 33-1);
      arg1->ClientPublicIP[33-1] = 0;
    } else {
      arg1->ClientPublicIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcUserSystemInfoField_ClientPublicIP_get(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  result = (char *) ((arg1)->ClientPublicIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcUserSystemInfoField() {
  void * jresult ;
  CThostFtdcUserSystemInfoField *result = 0 ;
  
  result = (CThostFtdcUserSystemInfoField *)new CThostFtdcUserSystemInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcUserSystemInfoField(void * jarg1) {
  CThostFtdcUserSystemInfoField *arg1 = (CThostFtdcUserSystemInfoField *) 0 ;
  
  arg1 = (CThostFtdcUserSystemInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_AppID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AppID, (const char *)arg2, 33-1);
      arg1->AppID[33-1] = 0;
    } else {
      arg1->AppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_AppID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  result = (char *) ((arg1)->AppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_UserID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_UserID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_AuthType_set(void * jarg1, char jarg2) {
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  TThostFtdcAuthTypeType arg2 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  arg2 = (TThostFtdcAuthTypeType)jarg2; 
  if (arg1) (arg1)->AuthType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcAuthUserIDField_AuthType_get(void * jarg1) {
  char jresult ;
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  TThostFtdcAuthTypeType result;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  result = (TThostFtdcAuthTypeType) ((arg1)->AuthType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcAuthUserIDField() {
  void * jresult ;
  CThostFtdcAuthUserIDField *result = 0 ;
  
  result = (CThostFtdcAuthUserIDField *)new CThostFtdcAuthUserIDField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcAuthUserIDField(void * jarg1) {
  CThostFtdcAuthUserIDField *arg1 = (CThostFtdcAuthUserIDField *) 0 ;
  
  arg1 = (CThostFtdcAuthUserIDField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthIPField_BrokerID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthIPField *arg1 = (CThostFtdcAuthIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthIPField_BrokerID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthIPField *arg1 = (CThostFtdcAuthIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthIPField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthIPField_AppID_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthIPField *arg1 = (CThostFtdcAuthIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AppID, (const char *)arg2, 33-1);
      arg1->AppID[33-1] = 0;
    } else {
      arg1->AppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthIPField_AppID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthIPField *arg1 = (CThostFtdcAuthIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthIPField *)jarg1; 
  result = (char *) ((arg1)->AppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcAuthIPField_IPAddress_set(void * jarg1, char * jarg2) {
  CThostFtdcAuthIPField *arg1 = (CThostFtdcAuthIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 33-1);
      arg1->IPAddress[33-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcAuthIPField_IPAddress_get(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthIPField *arg1 = (CThostFtdcAuthIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthIPField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcAuthIPField() {
  void * jresult ;
  CThostFtdcAuthIPField *result = 0 ;
  
  result = (CThostFtdcAuthIPField *)new CThostFtdcAuthIPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcAuthIPField(void * jarg1) {
  CThostFtdcAuthIPField *arg1 = (CThostFtdcAuthIPField *) 0 ;
  
  arg1 = (CThostFtdcAuthIPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ExchangeInstID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 81-1);
      arg1->ExchangeInstID[81-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ExchangeInstID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ProductID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 81-1);
      arg1->ProductID[81-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ProductID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_TradingType_set(void * jarg1, char jarg2) {
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  TThostFtdcTradingTypeType arg2 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  arg2 = (TThostFtdcTradingTypeType)jarg2; 
  if (arg1) (arg1)->TradingType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_TradingType_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  TThostFtdcTradingTypeType result;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  result = (TThostFtdcTradingTypeType) ((arg1)->TradingType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ClassType_set(void * jarg1, char jarg2) {
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  TThostFtdcClassTypeType arg2 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  arg2 = (TThostFtdcClassTypeType)jarg2; 
  if (arg1) (arg1)->ClassType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CThostFtdcQryClassifiedInstrumentField_ClassType_get(void * jarg1) {
  char jresult ;
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  TThostFtdcClassTypeType result;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  result = (TThostFtdcClassTypeType) ((arg1)->ClassType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryClassifiedInstrumentField() {
  void * jresult ;
  CThostFtdcQryClassifiedInstrumentField *result = 0 ;
  
  result = (CThostFtdcQryClassifiedInstrumentField *)new CThostFtdcQryClassifiedInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryClassifiedInstrumentField(void * jarg1) {
  CThostFtdcQryClassifiedInstrumentField *arg1 = (CThostFtdcQryClassifiedInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcQryClassifiedInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombPromotionParamField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombPromotionParamField *arg1 = (CThostFtdcQryCombPromotionParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombPromotionParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombPromotionParamField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombPromotionParamField *arg1 = (CThostFtdcQryCombPromotionParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombPromotionParamField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcQryCombPromotionParamField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcQryCombPromotionParamField *arg1 = (CThostFtdcQryCombPromotionParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombPromotionParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcQryCombPromotionParamField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombPromotionParamField *arg1 = (CThostFtdcQryCombPromotionParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombPromotionParamField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcQryCombPromotionParamField() {
  void * jresult ;
  CThostFtdcQryCombPromotionParamField *result = 0 ;
  
  result = (CThostFtdcQryCombPromotionParamField *)new CThostFtdcQryCombPromotionParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcQryCombPromotionParamField(void * jarg1) {
  CThostFtdcQryCombPromotionParamField *arg1 = (CThostFtdcQryCombPromotionParamField *) 0 ;
  
  arg1 = (CThostFtdcQryCombPromotionParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_ExchangeID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_ExchangeID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_InstrumentID_set(void * jarg1, char * jarg2) {
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 81-1);
      arg1->InstrumentID[81-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_InstrumentID_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_CombHedgeFlag_set(void * jarg1, char * jarg2) {
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_CombHedgeFlag_get(void * jarg1) {
  char * jresult ;
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_Xparameter_set(void * jarg1, double jarg2) {
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  TThostFtdcDiscountRatioType arg2 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  arg2 = (TThostFtdcDiscountRatioType)jarg2; 
  if (arg1) (arg1)->Xparameter = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CThostFtdcCombPromotionParamField_Xparameter_get(void * jarg1) {
  double jresult ;
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  TThostFtdcDiscountRatioType result;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  result = (TThostFtdcDiscountRatioType) ((arg1)->Xparameter);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcCombPromotionParamField() {
  void * jresult ;
  CThostFtdcCombPromotionParamField *result = 0 ;
  
  result = (CThostFtdcCombPromotionParamField *)new CThostFtdcCombPromotionParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcCombPromotionParamField(void * jarg1) {
  CThostFtdcCombPromotionParamField *arg1 = (CThostFtdcCombPromotionParamField *) 0 ;
  
  arg1 = (CThostFtdcCombPromotionParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnFrontConnected(void * jarg1) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  (arg1)->OnFrontConnected();
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnFrontConnectedSwigExplicitCThostFtdcMdSpi(void * jarg1) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  (arg1)->CThostFtdcMdSpi::OnFrontConnected();
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnFrontDisconnected(void * jarg1, int jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->OnFrontDisconnected(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnFrontDisconnectedSwigExplicitCThostFtdcMdSpi(void * jarg1, int jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->CThostFtdcMdSpi::OnFrontDisconnected(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnHeartBeatWarning(void * jarg1, int jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->OnHeartBeatWarning(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnHeartBeatWarningSwigExplicitCThostFtdcMdSpi(void * jarg1, int jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->CThostFtdcMdSpi::OnHeartBeatWarning(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUserLogin(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcRspUserLoginField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspUserLogin(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUserLoginSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcRspUserLoginField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspUserLogin(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUserLogout(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcUserLogoutField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspUserLogout(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUserLogoutSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcUserLogoutField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspUserLogout(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspQryMulticastInstrument(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcMulticastInstrumentField *arg2 = (CThostFtdcMulticastInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcMulticastInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryMulticastInstrument(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspQryMulticastInstrumentSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcMulticastInstrumentField *arg2 = (CThostFtdcMulticastInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcMulticastInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspQryMulticastInstrument(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspError(void * jarg1, void * jarg2, int jarg3, unsigned int jarg4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcRspInfoField *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  (arg1)->OnRspError(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspErrorSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, int jarg3, unsigned int jarg4) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcRspInfoField *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspError(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspSubMarketData(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspSubMarketData(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspSubMarketDataSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspSubMarketData(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUnSubMarketData(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspUnSubMarketData(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUnSubMarketDataSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspUnSubMarketData(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspSubForQuoteRsp(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspSubForQuoteRsp(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspSubForQuoteRspSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspSubForQuoteRsp(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUnSubForQuoteRsp(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspUnSubForQuoteRsp(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRspUnSubForQuoteRspSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcSpecificInstrumentField *arg2 = (CThostFtdcSpecificInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcSpecificInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcMdSpi::OnRspUnSubForQuoteRsp(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRtnDepthMarketData(void * jarg1, void * jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcDepthMarketDataField *)jarg2; 
  (arg1)->OnRtnDepthMarketData(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRtnDepthMarketDataSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcDepthMarketDataField *)jarg2; 
  (arg1)->CThostFtdcMdSpi::OnRtnDepthMarketData(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRtnForQuoteRsp(void * jarg1, void * jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcForQuoteRspField *)jarg2; 
  (arg1)->OnRtnForQuoteRsp(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_OnRtnForQuoteRspSwigExplicitCThostFtdcMdSpi(void * jarg1, void * jarg2) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  arg2 = (CThostFtdcForQuoteRspField *)jarg2; 
  (arg1)->CThostFtdcMdSpi::OnRtnForQuoteRsp(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_CThostFtdcMdSpi() {
  void * jresult ;
  CThostFtdcMdSpi *result = 0 ;
  
  result = (CThostFtdcMdSpi *)new SwigDirector_CThostFtdcMdSpi();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_CThostFtdcMdSpi(void * jarg1) {
  CThostFtdcMdSpi *arg1 = (CThostFtdcMdSpi *) 0 ;
  
  arg1 = (CThostFtdcMdSpi *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdSpi_director_connect(void *objarg, SwigDirector_CThostFtdcMdSpi::SWIG_Callback0_t callback0, SwigDirector_CThostFtdcMdSpi::SWIG_Callback1_t callback1, SwigDirector_CThostFtdcMdSpi::SWIG_Callback2_t callback2, SwigDirector_CThostFtdcMdSpi::SWIG_Callback3_t callback3, SwigDirector_CThostFtdcMdSpi::SWIG_Callback4_t callback4, SwigDirector_CThostFtdcMdSpi::SWIG_Callback5_t callback5, SwigDirector_CThostFtdcMdSpi::SWIG_Callback6_t callback6, SwigDirector_CThostFtdcMdSpi::SWIG_Callback7_t callback7, SwigDirector_CThostFtdcMdSpi::SWIG_Callback8_t callback8, SwigDirector_CThostFtdcMdSpi::SWIG_Callback9_t callback9, SwigDirector_CThostFtdcMdSpi::SWIG_Callback10_t callback10, SwigDirector_CThostFtdcMdSpi::SWIG_Callback11_t callback11, SwigDirector_CThostFtdcMdSpi::SWIG_Callback12_t callback12) {
  CThostFtdcMdSpi *obj = (CThostFtdcMdSpi *)objarg;
  SwigDirector_CThostFtdcMdSpi *director = dynamic_cast<SwigDirector_CThostFtdcMdSpi *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_0(char * jarg1, unsigned int jarg2, unsigned int jarg3) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  bool arg3 ;
  CThostFtdcMdApi *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi((char const *)arg1,arg2,arg3);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_1(char * jarg1, unsigned int jarg2) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  CThostFtdcMdApi *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = jarg2 ? true : false; 
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi((char const *)arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_2(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  CThostFtdcMdApi *result = 0 ;
  
  arg1 = (char *)jarg1; 
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi((char const *)arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CThostFtdcMdApi_CreateFtdcMdApi__SWIG_3() {
  void * jresult ;
  CThostFtdcMdApi *result = 0 ;
  
  result = (CThostFtdcMdApi *)CThostFtdcMdApi::CreateFtdcMdApi();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMdApi_GetApiVersion() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)CThostFtdcMdApi::GetApiVersion();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdApi_Release(void * jarg1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  (arg1)->Release();
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdApi_Init(void * jarg1) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  (arg1)->Init();
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_Join(void * jarg1) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  result = (int)(arg1)->Join();
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CThostFtdcMdApi_GetTradingDay(void * jarg1) {
  char * jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  result = (char *)(arg1)->GetTradingDay();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdApi_RegisterFront(void * jarg1, char * jarg2) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = (char *)jarg2; 
  (arg1)->RegisterFront(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdApi_RegisterNameServer(void * jarg1, char * jarg2) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = (char *)jarg2; 
  (arg1)->RegisterNameServer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdApi_RegisterFensUserInfo(void * jarg1, void * jarg2) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcFensUserInfoField *arg2 = (CThostFtdcFensUserInfoField *) 0 ;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = (CThostFtdcFensUserInfoField *)jarg2; 
  (arg1)->RegisterFensUserInfo(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CThostFtdcMdApi_RegisterSpi(void * jarg1, void * jarg2) {
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcMdSpi *arg2 = (CThostFtdcMdSpi *) 0 ;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = (CThostFtdcMdSpi *)jarg2; 
  (arg1)->RegisterSpi(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_SubscribeMarketData(void * jarg1, char ** jarg2, int jarg3) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = jarg2;
  arg3 = (int)jarg3; 
  result = (int)(arg1)->SubscribeMarketData(arg2,arg3);
  jresult = result; 
  
  
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_UnSubscribeMarketData(void * jarg1, char ** jarg2, int jarg3) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = jarg2;
  arg3 = (int)jarg3; 
  result = (int)(arg1)->UnSubscribeMarketData(arg2,arg3);
  jresult = result; 
  
  
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_SubscribeForQuoteRsp(void * jarg1, char ** jarg2, int jarg3) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = jarg2;
  arg3 = (int)jarg3; 
  result = (int)(arg1)->SubscribeForQuoteRsp(arg2,arg3);
  jresult = result; 
  
  
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_UnSubscribeForQuoteRsp(void * jarg1, char ** jarg2, int jarg3) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  char **arg2 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = jarg2;
  arg3 = (int)jarg3; 
  result = (int)(arg1)->UnSubscribeForQuoteRsp(arg2,arg3);
  jresult = result; 
  
  
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_ReqUserLogin(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcReqUserLoginField *arg2 = (CThostFtdcReqUserLoginField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = (CThostFtdcReqUserLoginField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqUserLogin(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_ReqUserLogout(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = (CThostFtdcUserLogoutField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqUserLogout(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CThostFtdcMdApi_ReqQryMulticastInstrument(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcMdApi *arg1 = (CThostFtdcMdApi *) 0 ;
  CThostFtdcQryMulticastInstrumentField *arg2 = (CThostFtdcQryMulticastInstrumentField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcMdApi *)jarg1; 
  arg2 = (CThostFtdcQryMulticastInstrumentField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryMulticastInstrument(arg2,arg3);
  jresult = result; 
  return jresult;
}


#ifdef __cplusplus
}
#endif

